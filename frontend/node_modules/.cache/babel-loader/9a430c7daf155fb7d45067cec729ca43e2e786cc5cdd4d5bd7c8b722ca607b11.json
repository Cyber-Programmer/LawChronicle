{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import ProcessingButton from'../common/ProcessingButton';import{Play,Settings}from'lucide-react';import{Phase5ApiService}from'./apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function StartGroupingButton(_ref){var _status$total_source_;let{disabled,status,onGroupingStarted,onError,onCollectionChanged}=_ref;const[isStarting,setIsStarting]=useState(false);const[showAdvanced,setShowAdvanced]=useState(false);const[availableCollections,setAvailableCollections]=useState([]);const[config,setConfig]=useState({selectedCollection:'',similarityThreshold:0.85,batchSize:50,useAzureOpenAI:true});// Load available collections on mount\nuseEffect(()=>{const loadCollections=async()=>{try{const response=await Phase5ApiService.getCollections();setAvailableCollections(response.collections);// Auto-select first collection if available\nif(response.collections.length>0&&!config.selectedCollection){const firstCollection=response.collections[0];setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{selectedCollection:firstCollection}));// Notify parent about auto-selection\nif(onCollectionChanged){onCollectionChanged(firstCollection);}}}catch(error){console.error('Failed to load collections:',error);onError('Failed to load available collections');}};loadCollections();},[onError,onCollectionChanged,config.selectedCollection]);const isDisabled=disabled||isStarting||(status===null||status===void 0?void 0:status.is_processing)||!config.selectedCollection;const handleStartGrouping=async()=>{try{setIsStarting(true);const request={config:{similarity_threshold:config.similarityThreshold,batch_size:config.batchSize,use_azure_openai:config.useAzureOpenAI},// Send single collection as array\nsource_collections:config.selectedCollection?[config.selectedCollection]:undefined};const response=await Phase5ApiService.startGrouping(request);if(response&&response.success){onGroupingStarted(response.task_id||'unknown',response.total_statutes||0);}else{onError((response===null||response===void 0?void 0:response.message)||'Failed to start grouping process');}}catch(error){console.error('Error starting grouping:',error);onError(error instanceof Error?error.message:'Unknown error occurred');}finally{setIsStarting(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(ProcessingButton,{onClick:handleStartGrouping,disabled:isDisabled,isProcessing:isStarting,icon:Play,progressText:\"Starting Grouping...\",variant:\"primary\",size:\"lg\",children:\"Start Statute Grouping\"}),/*#__PURE__*/_jsx(ProcessingButton,{onClick:()=>setShowAdvanced(!showAdvanced),disabled:isDisabled,icon:Settings,variant:\"secondary\",size:\"lg\",children:\"Advanced\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-blue-900\",children:\"Collection Selection\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-blue-600\",children:[availableCollections.length,\" collections available\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-blue-700 mb-2\",children:\"Select Collection to Process\"}),/*#__PURE__*/_jsxs(\"select\",{value:config.selectedCollection,onChange:e=>{const newCollection=e.target.value;setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{selectedCollection:newCollection}));// Notify parent about collection change\nif(onCollectionChanged){onCollectionChanged(newCollection);}},className:\"w-full px-3 py-2 border border-blue-300 rounded-md text-sm bg-white\",disabled:isDisabled,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a collection...\"}),availableCollections.map(collection=>/*#__PURE__*/_jsx(\"option\",{value:collection,children:collection},collection))]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-blue-600 mt-1\",children:\"Process one collection at a time (following Phase 4 pattern)\"})]})]}),showAdvanced&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg border space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-900\",children:\"Advanced Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-700 mb-1\",children:\"Similarity Threshold\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0.1\",max:\"1.0\",step:\"0.05\",value:config.similarityThreshold,onChange:e=>setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{similarityThreshold:parseFloat(e.target.value)})),className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\",disabled:isDisabled}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Higher values = stricter grouping (0.1-1.0)\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-700 mb-1\",children:\"Batch Size\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"10\",max:\"200\",step:\"10\",value:config.batchSize,onChange:e=>setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{batchSize:parseInt(e.target.value)})),className:\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\",disabled:isDisabled}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Statutes processed per batch (10-200)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"use-azure-openai\",type:\"checkbox\",checked:config.useAzureOpenAI,onChange:e=>setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{useAzureOpenAI:e.target.checked})),className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\",disabled:isDisabled}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"use-azure-openai\",className:\"ml-2 block text-sm text-gray-900\",children:\"Use Azure OpenAI for semantic grouping\"})]}),!(status!==null&&status!==void 0&&status.azure_openai_configured)&&config.useAzureOpenAI&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-md p-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-yellow-800\",children:\"\\u26A0\\uFE0F Azure OpenAI is not configured. Grouping will use fallback similarity matching.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-blue-900 mb-2\",children:\"Current Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Source Database:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-blue-600\",children:(status===null||status===void 0?void 0:status.source_database)||'N/A'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Target Database:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-blue-600\",children:(status===null||status===void 0?void 0:status.target_database)||'N/A'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Collections:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-blue-600\",children:(status===null||status===void 0?void 0:status.source_collections)||'0'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Total Statutes:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-blue-600\",children:((_status$total_source_=status.total_source_documents)===null||_status$total_source_===void 0?void 0:_status$total_source_.toLocaleString())||'0'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Azure OpenAI:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 \".concat(status!==null&&status!==void 0&&status.azure_openai_configured?'text-green-600':'text-red-600'),children:status!==null&&status!==void 0&&status.azure_openai_configured?'✓ Configured':'✗ Not Configured'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-700\",children:\"Model:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-blue-600\",children:(status===null||status===void 0?void 0:status.deployment_name)||'N/A'})]})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","ProcessingButton","Play","Settings","Phase5ApiService","jsx","_jsx","jsxs","_jsxs","StartGroupingButton","_ref","_status$total_source_","disabled","status","onGroupingStarted","onError","onCollectionChanged","isStarting","setIsStarting","showAdvanced","setShowAdvanced","availableCollections","setAvailableCollections","config","setConfig","selectedCollection","similarityThreshold","batchSize","useAzureOpenAI","loadCollections","response","getCollections","collections","length","firstCollection","prev","_objectSpread","error","console","isDisabled","is_processing","handleStartGrouping","request","similarity_threshold","batch_size","use_azure_openai","source_collections","undefined","startGrouping","success","task_id","total_statutes","message","Error","className","children","onClick","isProcessing","icon","progressText","variant","size","value","onChange","e","newCollection","target","map","collection","type","min","max","step","parseFloat","parseInt","id","checked","htmlFor","azure_openai_configured","source_database","target_database","total_source_documents","toLocaleString","concat","deployment_name"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase5/StartGroupingButton.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProcessingButton from '../common/ProcessingButton';\r\nimport { Play, Settings } from 'lucide-react';\r\nimport { Phase5ApiService } from './apiService';\r\nimport type { StartGroupingRequest, Phase5Status } from './types';\r\n\r\ninterface StartGroupingButtonProps {\r\n  disabled?: boolean;\r\n  status: Phase5Status;\r\n  onGroupingStarted: (taskId: string, totalStatutes: number) => void;\r\n  onError: (error: string) => void;\r\n  onCollectionChanged?: (collection: string) => void;\r\n}\r\n\r\ninterface GroupingConfig {\r\n  selectedCollection: string;\r\n  similarityThreshold: number;\r\n  batchSize: number;\r\n  useAzureOpenAI: boolean;\r\n}\r\n\r\nexport default function StartGroupingButton({ \r\n  disabled, \r\n  status, \r\n  onGroupingStarted, \r\n  onError,\r\n  onCollectionChanged\r\n}: StartGroupingButtonProps) {\r\n  const [isStarting, setIsStarting] = useState(false);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [availableCollections, setAvailableCollections] = useState<string[]>([]);\r\n  const [config, setConfig] = useState<GroupingConfig>({\r\n    selectedCollection: '',\r\n    similarityThreshold: 0.85,\r\n    batchSize: 50,\r\n    useAzureOpenAI: true,\r\n  });\r\n\r\n  // Load available collections on mount\r\n  useEffect(() => {\r\n    const loadCollections = async () => {\r\n      try {\r\n        const response = await Phase5ApiService.getCollections();\r\n        setAvailableCollections(response.collections);\r\n        \r\n        // Auto-select first collection if available\r\n        if (response.collections.length > 0 && !config.selectedCollection) {\r\n          const firstCollection = response.collections[0];\r\n          setConfig(prev => ({ ...prev, selectedCollection: firstCollection }));\r\n          // Notify parent about auto-selection\r\n          if (onCollectionChanged) {\r\n            onCollectionChanged(firstCollection);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load collections:', error);\r\n        onError('Failed to load available collections');\r\n      }\r\n    };\r\n\r\n    loadCollections();\r\n  }, [onError, onCollectionChanged, config.selectedCollection]);\r\n\r\n  const isDisabled = disabled || isStarting || status?.is_processing || !config.selectedCollection;\r\n\r\n  const handleStartGrouping = async () => {\r\n    try {\r\n      setIsStarting(true);\r\n\r\n      const request: StartGroupingRequest = {\r\n        config: {\r\n          similarity_threshold: config.similarityThreshold,\r\n          batch_size: config.batchSize,\r\n          use_azure_openai: config.useAzureOpenAI,\r\n        },\r\n        // Send single collection as array\r\n        source_collections: config.selectedCollection ? [config.selectedCollection] : undefined,\r\n      };\r\n\r\n      const response = await Phase5ApiService.startGrouping(request);\r\n      \r\n      if (response && response.success) {\r\n        onGroupingStarted(\r\n          response.task_id || 'unknown', \r\n          response.total_statutes || 0\r\n        );\r\n      } else {\r\n        onError(response?.message || 'Failed to start grouping process');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting grouping:', error);\r\n      onError(error instanceof Error ? error.message : 'Unknown error occurred');\r\n    } finally {\r\n      setIsStarting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center gap-3\">\r\n        <ProcessingButton\r\n          onClick={handleStartGrouping}\r\n          disabled={isDisabled}\r\n          isProcessing={isStarting}\r\n          icon={Play}\r\n          progressText=\"Starting Grouping...\"\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n        >\r\n          Start Statute Grouping\r\n        </ProcessingButton>\r\n\r\n        <ProcessingButton\r\n          onClick={() => setShowAdvanced(!showAdvanced)}\r\n          disabled={isDisabled}\r\n          icon={Settings}\r\n          variant=\"secondary\"\r\n          size=\"lg\"\r\n        >\r\n          Advanced\r\n        </ProcessingButton>\r\n      </div>\r\n\r\n      {/* Collection Selection */}\r\n      <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h3 className=\"text-sm font-medium text-blue-900\">Collection Selection</h3>\r\n          <span className=\"text-xs text-blue-600\">\r\n            {availableCollections.length} collections available\r\n          </span>\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-xs font-medium text-blue-700 mb-2\">\r\n            Select Collection to Process\r\n          </label>\r\n          <select\r\n            value={config.selectedCollection}\r\n            onChange={(e) => {\r\n              const newCollection = e.target.value;\r\n              setConfig(prev => ({ ...prev, selectedCollection: newCollection }));\r\n              // Notify parent about collection change\r\n              if (onCollectionChanged) {\r\n                onCollectionChanged(newCollection);\r\n              }\r\n            }}\r\n            className=\"w-full px-3 py-2 border border-blue-300 rounded-md text-sm bg-white\"\r\n            disabled={isDisabled}\r\n          >\r\n            <option value=\"\">Select a collection...</option>\r\n            {availableCollections.map((collection) => (\r\n              <option key={collection} value={collection}>\r\n                {collection}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <p className=\"text-xs text-blue-600 mt-1\">\r\n            Process one collection at a time (following Phase 4 pattern)\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {showAdvanced && (\r\n        <div className=\"bg-gray-50 p-4 rounded-lg border space-y-4\">\r\n          <h3 className=\"text-sm font-medium text-gray-900\">Advanced Configuration</h3>\r\n          \r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Similarity Threshold\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0.1\"\r\n                max=\"1.0\"\r\n                step=\"0.05\"\r\n                value={config.similarityThreshold}\r\n                onChange={(e) => setConfig(prev => ({\r\n                  ...prev,\r\n                  similarityThreshold: parseFloat(e.target.value)\r\n                }))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\r\n                disabled={isDisabled}\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Higher values = stricter grouping (0.1-1.0)\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Batch Size\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"10\"\r\n                max=\"200\"\r\n                step=\"10\"\r\n                value={config.batchSize}\r\n                onChange={(e) => setConfig(prev => ({\r\n                  ...prev,\r\n                  batchSize: parseInt(e.target.value)\r\n                }))}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\r\n                disabled={isDisabled}\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Statutes processed per batch (10-200)\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"use-azure-openai\"\r\n              type=\"checkbox\"\r\n              checked={config.useAzureOpenAI}\r\n              onChange={(e) => setConfig(prev => ({\r\n                ...prev,\r\n                useAzureOpenAI: e.target.checked\r\n              }))}\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n              disabled={isDisabled}\r\n            />\r\n            <label htmlFor=\"use-azure-openai\" className=\"ml-2 block text-sm text-gray-900\">\r\n              Use Azure OpenAI for semantic grouping\r\n            </label>\r\n          </div>\r\n          \r\n          {!status?.azure_openai_configured && config.useAzureOpenAI && (\r\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-3\">\r\n              <p className=\"text-sm text-yellow-800\">\r\n                ⚠️ Azure OpenAI is not configured. Grouping will use fallback similarity matching.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Status Information */}\r\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-blue-900 mb-2\">Current Status</h4>\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Source Database:</span>\r\n            <span className=\"ml-2 text-blue-600\">{status?.source_database || 'N/A'}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Target Database:</span>\r\n            <span className=\"ml-2 text-blue-600\">{status?.target_database || 'N/A'}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Collections:</span>\r\n            <span className=\"ml-2 text-blue-600\">{status?.source_collections || '0'}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Total Statutes:</span>\r\n            <span className=\"ml-2 text-blue-600\">{status.total_source_documents?.toLocaleString() || '0'}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Azure OpenAI:</span>\r\n            <span className={`ml-2 ${status?.azure_openai_configured ? 'text-green-600' : 'text-red-600'}`}>\r\n              {status?.azure_openai_configured ? '✓ Configured' : '✗ Not Configured'}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-blue-700\">Model:</span>\r\n            <span className=\"ml-2 text-blue-600\">{status?.deployment_name || 'N/A'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}