{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{BarChart3,RefreshCw,AlertTriangle,CheckCircle,ChevronDown,ChevronRight,TrendingUp,Clock,Database,FileText}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressTracker=_ref=>{let{config}=_ref;const[statuteGroups,setStatuteGroups]=useState([]);const[loading,setLoading]=useState(false);const[progressMetrics,setProgressMetrics]=useState(null);const[message,setMessage]=useState(null);const[expandedGroups,setExpandedGroups]=useState(new Set());const[autoRefresh,setAutoRefresh]=useState(true);// Fetch statute groups and progress from normalized collection\nconst fetchProgressData=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/v1/phase2/preview-normalized-structure?limit=1000',{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const data=await response.json();if(data.success&&data.preview_data){// Transform the data to match our interface\nconst groups=data.preview_data.map(statute=>{var _statute$Sections;return{_id:statute.Statute_Name,Statute_Name:statute.Statute_Name,Sections:statute.Sections||[],section_count:((_statute$Sections=statute.Sections)===null||_statute$Sections===void 0?void 0:_statute$Sections.length)||0};});setStatuteGroups(groups);// Calculate progress metrics\nconst totalStatutes=groups.length;const totalSections=groups.reduce((sum,statute)=>sum+statute.section_count,0);// For now, assume all statutes are processed if they exist\nconst processedStatutes=totalStatutes;const processedSections=totalSections;const metrics={total_statutes:totalStatutes,processed_statutes:processedStatutes,total_sections:totalSections,processed_sections:processedSections,normalization_progress:totalStatutes>0?processedStatutes/totalStatutes*100:0,sorting_progress:totalSections>0?processedSections/totalSections*100:0,overall_progress:totalStatutes>0?(processedStatutes+processedSections)/(totalStatutes+totalSections)*100:0,estimated_time_remaining:'0 minutes',current_phase:'Normalization Complete',last_updated:new Date().toISOString()};setProgressMetrics(metrics);}else{setMessage({type:'error',text:'Failed to fetch progress data'});}}catch(error){setMessage({type:'error',text:'Error fetching progress data'});}finally{setLoading(false);}},[]);// Toggle group expansion\nconst toggleGroupExpansion=groupId=>{const newExpanded=new Set(expandedGroups);if(newExpanded.has(groupId)){newExpanded.delete(groupId);}else{newExpanded.add(groupId);}setExpandedGroups(newExpanded);};// Auto-refresh progress\nuseEffect(()=>{if(autoRefresh){const interval=setInterval(fetchProgressData,30000);// Refresh every 30 seconds\nreturn()=>clearInterval(interval);}},[autoRefresh,fetchProgressData]);// Initial load\nuseEffect(()=>{fetchProgressData();},[fetchProgressData]);// Get progress bar color based on percentage\nconst getProgressColor=percentage=>{if(percentage>=80)return'bg-green-500';if(percentage>=60)return'bg-yellow-500';if(percentage>=40)return'bg-orange-500';return'bg-red-500';};// Get phase status icon and color\nconst getPhaseStatus=phase=>{if(phase.includes('Complete')){return{icon:CheckCircle,color:'text-green-600',bgColor:'bg-green-100'};}else if(phase.includes('Processing')){return{icon:Clock,color:'text-blue-600',bgColor:'bg-blue-100'};}else if(phase.includes('Pending')){return{icon:Clock,color:'text-gray-600',bgColor:'bg-gray-100'};}else{return{icon:AlertTriangle,color:'text-yellow-600',bgColor:'bg-yellow-100'};}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-5 h-5 mr-2\"}),\"Progress Tracker - Grouped Normalization\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Track the progress of normalization workflow: grouping statutes, sorting sections, and overall completion status.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 items-center\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchProgressData,disabled:loading,className:\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-4 h-4 mr-2 \".concat(loading?'animate-spin':'')}),\"Refresh Progress\"]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:autoRefresh,onChange:e=>setAutoRefresh(e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-700\",children:\"Auto-refresh every 30s\"})]})]})]}),progressMetrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Overall Progress\"}),/*#__PURE__*/_jsx(TrendingUp,{className:\"w-6 h-6 text-blue-600\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-blue-600 mb-2\",children:[Math.round(progressMetrics.overall_progress),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(getProgressColor(progressMetrics.overall_progress)),style:{width:\"\".concat(progressMetrics.overall_progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 mt-2\",children:[progressMetrics.processed_statutes,\" of \",progressMetrics.total_statutes,\" statutes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Normalization\"}),/*#__PURE__*/_jsx(Database,{className:\"w-6 h-6 text-green-600\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-green-600 mb-2\",children:[Math.round(progressMetrics.normalization_progress),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(getProgressColor(progressMetrics.normalization_progress)),style:{width:\"\".concat(progressMetrics.normalization_progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 mt-2\",children:[progressMetrics.processed_statutes,\" statutes grouped\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Section Sorting\"}),/*#__PURE__*/_jsx(FileText,{className:\"w-6 h-6 text-purple-600\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-purple-600 mb-2\",children:[Math.round(progressMetrics.sorting_progress),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(getProgressColor(progressMetrics.sorting_progress)),style:{width:\"\".concat(progressMetrics.sorting_progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 mt-2\",children:[progressMetrics.processed_sections,\" sections sorted\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Current Phase\"}),/*#__PURE__*/_jsx(Clock,{className:\"w-6 h-6 text-orange-600\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:(()=>{const status=getPhaseStatus(progressMetrics.current_phase);const Icon=status.icon;return/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium \".concat(status.bgColor,\" \").concat(status.color),children:[/*#__PURE__*/_jsx(Icon,{className:\"w-4 h-4 mr-2\"}),progressMetrics.current_phase]});})()}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Last updated: \",new Date(progressMetrics.last_updated).toLocaleTimeString()]}),progressMetrics.estimated_time_remaining!=='0 minutes'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 mt-1\",children:[\"Est. remaining: \",progressMetrics.estimated_time_remaining]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Workflow Steps\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\",children:\"1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Data Ingestion\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Load raw documents from source collection\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Complete\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\",children:\"2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Statute Name Normalization\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Clean and standardize statute names\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Complete\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\",children:\"3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Section Grouping\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Group sections by normalized statute name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Complete\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\",children:\"4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Section Sorting\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Sort sections: preamble, numeric, text\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Complete\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\",children:\"5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Database Insertion\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Insert normalized statutes into target collection\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Complete\"})]})]})]})]}),message&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg flex items-center \".concat(message.type==='success'?'bg-green-50 text-green-800':'bg-red-50 text-red-800'),children:[message.type==='success'?/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5 mr-2\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 mr-2\"}),message.text]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Statute Groups Progress\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[statuteGroups.length,\" groups loaded \\u2022 Click to expand and view section details\"]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-8 h-8 mx-auto mb-2 animate-spin\"}),\"Loading progress data...\"]}):statuteGroups.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-8 text-center text-gray-500\",children:\"No statute groups found. Run normalization first to populate the database.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-200\",children:statuteGroups.map(statute=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleGroupExpansion(statute._id),className:\"flex items-center space-x-2 text-left hover:text-blue-600\",children:[expandedGroups.has(statute._id)?/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4\"}):/*#__PURE__*/_jsx(ChevronRight,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:statute.Statute_Name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",statute.section_count,\" sections)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Sections: \",statute.section_count]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-600 font-medium\",children:\"\\u2713 Normalized\"})]})]}),expandedGroups.has(statute._id)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 ml-8 space-y-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 font-medium\",children:\"Section Progress:\"}),statute.Sections&&statute.Sections.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\",children:[statute.Sections.slice(0,6).map((section,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-2 rounded text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 mb-1\",children:section.number||section.section_number||\"Section \".concat(index+1)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 truncate\",children:section.definition||section.content||'No content'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"\\u2713 Sorted\"})]},index)),statute.Sections.length>6&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-2 rounded text-xs text-gray-500 text-center\",children:[\"+\",statute.Sections.length-6,\" more sections\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-sm\",children:\"No sections found\"})]})]},statute._id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Total: \",statuteGroups.length,\" statute group(s) \\u2022 Total sections: \",statuteGroups.reduce((sum,statute)=>sum+statute.section_count,0),\" \\u2022 Overall progress: \",progressMetrics?Math.round(progressMetrics.overall_progress):0,\"% \\u2022 Status: \",(progressMetrics===null||progressMetrics===void 0?void 0:progressMetrics.current_phase)||'Unknown']})})]});};export default ProgressTracker;","map":{"version":3,"names":["React","useState","useEffect","useCallback","BarChart3","RefreshCw","AlertTriangle","CheckCircle","ChevronDown","ChevronRight","TrendingUp","Clock","Database","FileText","jsx","_jsx","jsxs","_jsxs","ProgressTracker","_ref","config","statuteGroups","setStatuteGroups","loading","setLoading","progressMetrics","setProgressMetrics","message","setMessage","expandedGroups","setExpandedGroups","Set","autoRefresh","setAutoRefresh","fetchProgressData","response","fetch","headers","concat","localStorage","getItem","data","json","success","preview_data","groups","map","statute","_statute$Sections","_id","Statute_Name","Sections","section_count","length","totalStatutes","totalSections","reduce","sum","processedStatutes","processedSections","metrics","total_statutes","processed_statutes","total_sections","processed_sections","normalization_progress","sorting_progress","overall_progress","estimated_time_remaining","current_phase","last_updated","Date","toISOString","type","text","error","toggleGroupExpansion","groupId","newExpanded","has","delete","add","interval","setInterval","clearInterval","getProgressColor","percentage","getPhaseStatus","phase","includes","icon","color","bgColor","className","children","onClick","disabled","checked","onChange","e","target","Math","round","style","width","status","Icon","toLocaleTimeString","slice","section","index","number","section_number","definition","content"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/ProgressTracker.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BarChart3, RefreshCw, Play, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, TrendingUp, Clock, Database, FileText } from 'lucide-react';\n\ninterface StatuteGroup {\n  _id: string;\n  Statute_Name: string;\n  Sections: any[];\n  section_count: number;\n}\n\ninterface ProgressMetrics {\n  total_statutes: number;\n  processed_statutes: number;\n  total_sections: number;\n  processed_sections: number;\n  normalization_progress: number;\n  sorting_progress: number;\n  overall_progress: number;\n  estimated_time_remaining: string;\n  current_phase: string;\n  last_updated: string;\n}\n\ninterface ProgressTrackerProps {\n  config: any;\n}\n\nconst ProgressTracker: React.FC<ProgressTrackerProps> = ({ config }) => {\n  const [statuteGroups, setStatuteGroups] = useState<StatuteGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [progressMetrics, setProgressMetrics] = useState<ProgressMetrics | null>(null);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Fetch statute groups and progress from normalized collection\n  const fetchProgressData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/v1/phase2/preview-normalized-structure?limit=1000', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      \n      if (data.success && data.preview_data) {\n        // Transform the data to match our interface\n        const groups = data.preview_data.map((statute: any) => ({\n          _id: statute.Statute_Name,\n          Statute_Name: statute.Statute_Name,\n          Sections: statute.Sections || [],\n          section_count: statute.Sections?.length || 0\n        }));\n        setStatuteGroups(groups);\n        \n        // Calculate progress metrics\n        const totalStatutes = groups.length;\n        const totalSections = groups.reduce((sum: number, statute: { section_count: number }) => sum + statute.section_count, 0);\n        // For now, assume all statutes are processed if they exist\n        const processedStatutes = totalStatutes;\n        const processedSections = totalSections;\n        \n        const metrics: ProgressMetrics = {\n          total_statutes: totalStatutes,\n          processed_statutes: processedStatutes,\n          total_sections: totalSections,\n          processed_sections: processedSections,\n          normalization_progress: totalStatutes > 0 ? (processedStatutes / totalStatutes) * 100 : 0,\n          sorting_progress: totalSections > 0 ? (processedSections / totalSections) * 100 : 0,\n          overall_progress: totalStatutes > 0 ? ((processedStatutes + processedSections) / (totalStatutes + totalSections)) * 100 : 0,\n          estimated_time_remaining: '0 minutes',\n          current_phase: 'Normalization Complete',\n          last_updated: new Date().toISOString()\n        };\n        \n        setProgressMetrics(metrics);\n      } else {\n        setMessage({ type: 'error', text: 'Failed to fetch progress data' });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error fetching progress data' });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Toggle group expansion\n  const toggleGroupExpansion = (groupId: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Auto-refresh progress\n  useEffect(() => {\n    if (autoRefresh) {\n      const interval = setInterval(fetchProgressData, 30000); // Refresh every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh, fetchProgressData]);\n\n  // Initial load\n  useEffect(() => {\n    fetchProgressData();\n  }, [fetchProgressData]);\n\n  // Get progress bar color based on percentage\n  const getProgressColor = (percentage: number) => {\n    if (percentage >= 80) return 'bg-green-500';\n    if (percentage >= 60) return 'bg-yellow-500';\n    if (percentage >= 40) return 'bg-orange-500';\n    return 'bg-red-500';\n  };\n\n  // Get phase status icon and color\n  const getPhaseStatus = (phase: string) => {\n    if (phase.includes('Complete')) {\n      return { icon: CheckCircle, color: 'text-green-600', bgColor: 'bg-green-100' };\n    } else if (phase.includes('Processing')) {\n      return { icon: Clock, color: 'text-blue-600', bgColor: 'bg-blue-100' };\n    } else if (phase.includes('Pending')) {\n      return { icon: Clock, color: 'text-gray-600', bgColor: 'bg-gray-100' };\n    } else {\n      return { icon: AlertTriangle, color: 'text-yellow-600', bgColor: 'bg-yellow-100' };\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n          <BarChart3 className=\"w-5 h-5 mr-2\" />\n          Progress Tracker - Grouped Normalization\n        </h2>\n        <p className=\"text-gray-600 mb-4\">\n          Track the progress of normalization workflow: grouping statutes, sorting sections, and overall completion status.\n        </p>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <button\n            onClick={fetchProgressData}\n            disabled={loading}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\"\n          >\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh Progress\n          </button>\n          \n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-sm text-gray-700\">Auto-refresh every 30s</span>\n          </label>\n        </div>\n      </div>\n\n      {/* Progress Overview */}\n      {progressMetrics && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {/* Overall Progress */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Overall Progress</h3>\n              <TrendingUp className=\"w-6 h-6 text-blue-600\" />\n            </div>\n            <div className=\"text-3xl font-bold text-blue-600 mb-2\">\n              {Math.round(progressMetrics.overall_progress)}%\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className={`h-2 rounded-full ${getProgressColor(progressMetrics.overall_progress)}`}\n                style={{ width: `${progressMetrics.overall_progress}%` }}\n              />\n            </div>\n            <div className=\"text-sm text-gray-600 mt-2\">\n              {progressMetrics.processed_statutes} of {progressMetrics.total_statutes} statutes\n            </div>\n          </div>\n\n          {/* Normalization Progress */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Normalization</h3>\n              <Database className=\"w-6 h-6 text-green-600\" />\n            </div>\n            <div className=\"text-3xl font-bold text-green-600 mb-2\">\n              {Math.round(progressMetrics.normalization_progress)}%\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className={`h-2 rounded-full ${getProgressColor(progressMetrics.normalization_progress)}`}\n                style={{ width: `${progressMetrics.normalization_progress}%` }}\n              />\n            </div>\n            <div className=\"text-sm text-gray-600 mt-2\">\n              {progressMetrics.processed_statutes} statutes grouped\n            </div>\n          </div>\n\n          {/* Sorting Progress */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Section Sorting</h3>\n              <FileText className=\"w-6 h-6 text-purple-600\" />\n            </div>\n            <div className=\"text-3xl font-bold text-purple-600 mb-2\">\n              {Math.round(progressMetrics.sorting_progress)}%\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className={`h-2 rounded-full ${getProgressColor(progressMetrics.sorting_progress)}`}\n                style={{ width: `${progressMetrics.sorting_progress}%` }}\n              />\n            </div>\n            <div className=\"text-sm text-gray-600 mt-2\">\n              {progressMetrics.processed_sections} sections sorted\n            </div>\n          </div>\n\n          {/* Current Status */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Current Phase</h3>\n              <Clock className=\"w-6 h-6 text-orange-600\" />\n            </div>\n            <div className=\"mb-3\">\n              {(() => {\n                const status = getPhaseStatus(progressMetrics.current_phase);\n                const Icon = status.icon;\n                return (\n                  <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${status.bgColor} ${status.color}`}>\n                    <Icon className=\"w-4 h-4 mr-2\" />\n                    {progressMetrics.current_phase}\n                  </div>\n                );\n              })()}\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              Last updated: {new Date(progressMetrics.last_updated).toLocaleTimeString()}\n            </div>\n            {progressMetrics.estimated_time_remaining !== '0 minutes' && (\n              <div className=\"text-sm text-gray-600 mt-1\">\n                Est. remaining: {progressMetrics.estimated_time_remaining}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Workflow Steps */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Workflow Steps</h3>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\">\n              1\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">Data Ingestion</div>\n              <div className=\"text-sm text-gray-600\">Load raw documents from source collection</div>\n              <div className=\"text-xs text-green-600 mt-1\">✓ Complete</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-4\">\n            <div className=\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\">\n              2\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">Statute Name Normalization</div>\n              <div className=\"text-sm text-gray-600\">Clean and standardize statute names</div>\n              <div className=\"text-xs text-green-600 mt-1\">✓ Complete</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-4\">\n            <div className=\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\">\n              3\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">Section Grouping</div>\n              <div className=\"text-sm text-gray-600\">Group sections by normalized statute name</div>\n              <div className=\"text-xs text-green-600 mt-1\">✓ Complete</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-4\">\n            <div className=\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\">\n              4\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">Section Sorting</div>\n              <div className=\"text-sm text-gray-600\">Sort sections: preamble, numeric, text</div>\n              <div className=\"text-xs text-green-600 mt-1\">✓ Complete</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-4\">\n            <div className=\"bg-green-100 text-green-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0\">\n              5\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">Database Insertion</div>\n              <div className=\"text-sm text-gray-600\">Insert normalized statutes into target collection</div>\n              <div className=\"text-xs text-green-600 mt-1\">✓ Complete</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center ${\n          message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircle className=\"w-5 h-5 mr-2\" />\n          ) : (\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n          )}\n          {message.text}\n        </div>\n      )}\n\n      {/* Statute Groups Progress */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Statute Groups Progress</h3>\n          <p className=\"text-sm text-gray-600\">\n            {statuteGroups.length} groups loaded • Click to expand and view section details\n          </p>\n        </div>\n        \n        {loading ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            <RefreshCw className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n            Loading progress data...\n          </div>\n        ) : statuteGroups.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            No statute groups found. Run normalization first to populate the database.\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {statuteGroups.map((statute) => (\n              <div key={statute._id} className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    onClick={() => toggleGroupExpansion(statute._id)}\n                    className=\"flex items-center space-x-2 text-left hover:text-blue-600\"\n                  >\n                    {expandedGroups.has(statute._id) ? (\n                      <ChevronDown className=\"w-4 h-4\" />\n                    ) : (\n                      <ChevronRight className=\"w-4 h-4\" />\n                    )}\n                    <span className=\"font-medium text-gray-900\">{statute.Statute_Name}</span>\n                    <span className=\"text-sm text-gray-500\">({statute.section_count} sections)</span>\n                  </button>\n                  \n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"text-sm text-gray-500\">\n                      Sections: {statute.section_count}\n                    </div>\n                    <div className=\"text-sm text-green-600 font-medium\">\n                      ✓ Normalized\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Expanded Sections View */}\n                {expandedGroups.has(statute._id) && (\n                  <div className=\"mt-3 ml-8 space-y-2\">\n                    <div className=\"text-sm text-gray-600 font-medium\">Section Progress:</div>\n                    {statute.Sections && statute.Sections.length > 0 ? (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {statute.Sections.slice(0, 6).map((section: any, index: number) => (\n                          <div key={index} className=\"bg-gray-50 p-2 rounded text-sm\">\n                            <div className=\"font-medium text-gray-700 mb-1\">\n                              {section.number || section.section_number || `Section ${index + 1}`}\n                            </div>\n                            <div className=\"text-xs text-gray-600 truncate\">\n                              {section.definition || section.content || 'No content'}\n                            </div>\n                            <div className=\"text-xs text-green-600 mt-1\">✓ Sorted</div>\n                          </div>\n                        ))}\n                        {statute.Sections.length > 6 && (\n                          <div className=\"bg-gray-100 p-2 rounded text-xs text-gray-500 text-center\">\n                            +{statute.Sections.length - 6} more sections\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-500 text-sm\">No sections found</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {statuteGroups.length} statute group(s) • \n          Total sections: {statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0)} • \n          Overall progress: {progressMetrics ? Math.round(progressMetrics.overall_progress) : 0}% • \n          Status: {progressMetrics?.current_phase || 'Unknown'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}