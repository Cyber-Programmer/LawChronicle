{"ast":null,"code":"var _jsxFileName = \"d:\\\\DigiFloat\\\\LawChronicle\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const checkAuth = async () => {\n    console.log('üîç AuthContext: Starting checkAuth...');\n    try {\n      const storedToken = localStorage.getItem('token');\n      console.log('üîç AuthContext: Stored token:', storedToken ? 'exists' : 'none');\n      if (!storedToken) {\n        console.log('üîç AuthContext: No token, setting unauthenticated');\n        setIsAuthenticated(false);\n        setUser(null);\n        setToken(null);\n        setIsLoading(false);\n        return;\n      }\n      console.log('üîç AuthContext: Validating token...');\n      const response = await authService.getCurrentUser();\n      const userData = response.data;\n      console.log('üîç AuthContext: Token valid, user data:', userData);\n      setIsAuthenticated(true);\n      setUser(userData);\n      setToken(storedToken);\n    } catch (error) {\n      console.error('üîç AuthContext: Token validation failed:', error);\n      // Token is invalid, remove it\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n      setUser(null);\n      setToken(null);\n    } finally {\n      console.log('üîç AuthContext: Setting isLoading to false');\n      setIsLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    console.log('üîç AuthContext: Login attempt for user:', username);\n    try {\n      setIsLoading(true);\n      const response = await authService.login(username, password);\n      const {\n        access_token\n      } = response.data;\n      console.log('üîç AuthContext: Login successful, token received');\n\n      // Store token immediately\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n\n      // Get user info\n      const userResponse = await authService.getCurrentUser();\n      const userData = userResponse.data;\n      console.log('üîç AuthContext: User info retrieved:', userData);\n\n      // Update state immediately - this will trigger UI re-render\n      setIsAuthenticated(true);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('üîç AuthContext: Login failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Login failed'\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    console.log('üîç AuthContext: Logout initiated');\n    try {\n      // Call logout API if needed\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.warn('Logout API call failed:', error);\n    } finally {\n      // Clear local state and storage immediately - this will trigger UI re-render\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n      setUser(null);\n      setToken(null);\n      console.log('üîç AuthContext: Logout completed, state cleared');\n    }\n  };\n\n  // Initialize authentication state on mount\n  useEffect(() => {\n    console.log('üîç AuthContext: useEffect triggered, calling checkAuth');\n    checkAuth().catch(error => {\n      console.error('üîç AuthContext: checkAuth failed in useEffect:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  const value = {\n    isAuthenticated,\n    user,\n    token,\n    isLoading,\n    login,\n    logout,\n    checkAuth\n  };\n  console.log('üîç AuthContext: Rendering with state:', {\n    isAuthenticated,\n    isLoading,\n    user: user === null || user === void 0 ? void 0 : user.username\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5OzTzfBVdi/iXEfb+LP4kIkehBI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","token","setToken","isLoading","setIsLoading","checkAuth","console","log","storedToken","localStorage","getItem","response","getCurrentUser","userData","data","error","removeItem","login","username","password","access_token","setItem","userResponse","success","Error","message","logout","warn","catch","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["d:/DigiFloat/LawChronicle/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface User {\r\n  user_id: string;\r\n  username: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  token: string | null;\r\n  isLoading: boolean;\r\n  login: (username: string, password: string) => Promise<{ success: boolean; error?: string }>;\r\n  logout: () => Promise<void>;\r\n  checkAuth: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const checkAuth = async () => {\r\n    console.log('üîç AuthContext: Starting checkAuth...');\r\n    \r\n    try {\r\n      const storedToken = localStorage.getItem('token');\r\n      console.log('üîç AuthContext: Stored token:', storedToken ? 'exists' : 'none');\r\n      \r\n      if (!storedToken) {\r\n        console.log('üîç AuthContext: No token, setting unauthenticated');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        setToken(null);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('üîç AuthContext: Validating token...');\r\n      const response = await authService.getCurrentUser();\r\n      const userData = response.data;\r\n      \r\n      console.log('üîç AuthContext: Token valid, user data:', userData);\r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n      setToken(storedToken);\r\n    } catch (error) {\r\n      console.error('üîç AuthContext: Token validation failed:', error);\r\n      // Token is invalid, remove it\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setToken(null);\r\n    } finally {\r\n      console.log('üîç AuthContext: Setting isLoading to false');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username: string, password: string) => {\r\n    console.log('üîç AuthContext: Login attempt for user:', username);\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      const response = await authService.login(username, password);\r\n      const { access_token } = response.data;\r\n      \r\n      console.log('üîç AuthContext: Login successful, token received');\r\n      \r\n      // Store token immediately\r\n      localStorage.setItem('token', access_token);\r\n      setToken(access_token);\r\n      \r\n      // Get user info\r\n      const userResponse = await authService.getCurrentUser();\r\n      const userData = userResponse.data;\r\n      \r\n      console.log('üîç AuthContext: User info retrieved:', userData);\r\n      \r\n      // Update state immediately - this will trigger UI re-render\r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('üîç AuthContext: Login failed:', error);\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Login failed' \r\n      };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    console.log('üîç AuthContext: Logout initiated');\r\n    \r\n    try {\r\n      // Call logout API if needed\r\n      await authService.logout();\r\n    } catch (error) {\r\n      // Continue with logout even if API call fails\r\n      console.warn('Logout API call failed:', error);\r\n    } finally {\r\n      // Clear local state and storage immediately - this will trigger UI re-render\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setToken(null);\r\n      console.log('üîç AuthContext: Logout completed, state cleared');\r\n    }\r\n  };\r\n\r\n  // Initialize authentication state on mount\r\n  useEffect(() => {\r\n    console.log('üîç AuthContext: useEffect triggered, calling checkAuth');\r\n    checkAuth().catch(error => {\r\n      console.error('üîç AuthContext: checkAuth failed in useEffect:', error);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    isAuthenticated,\r\n    user,\r\n    token,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    checkAuth,\r\n  };\r\n\r\n  console.log('üîç AuthContext: Rendering with state:', { isAuthenticated, isLoading, user: user?.username });\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}