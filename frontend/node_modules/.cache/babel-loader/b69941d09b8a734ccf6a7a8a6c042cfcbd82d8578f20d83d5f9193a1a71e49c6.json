{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Settings,RefreshCw,Play,Eye,AlertTriangle,CheckCircle,ChevronDown,ChevronRight,X,Plus}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StructureCleaner=_ref=>{var _previewData$sample_c;let{config}=_ref;const[statuteGroups,setStatuteGroups]=useState([]);const[loading,setLoading]=useState(false);const[cleaning,setCleaning]=useState(false);const[previewData,setPreviewData]=useState(null);const[message,setMessage]=useState(null);const[expandedGroups,setExpandedGroups]=useState(new Set());const[fieldMappings,setFieldMappings]=useState([{source:'number',target:'section_number',enabled:true},{source:'definition',target:'section_content',enabled:true},{source:'content',target:'section_text',enabled:true},{source:'year',target:'section_year',enabled:true},{source:'date',target:'section_date',enabled:true}]);// Fetch statute groups from normalized collection\nconst fetchStatuteGroups=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/v1/phase2/preview-normalized-structure?limit=100',{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const data=await response.json();if(data.success&&data.preview_data){// Transform the data to match our interface\nconst groups=data.preview_data.map(statute=>{var _statute$Sections;return{_id:statute.Statute_Name,Statute_Name:statute.Statute_Name,Sections:statute.Sections||[],section_count:((_statute$Sections=statute.Sections)===null||_statute$Sections===void 0?void 0:_statute$Sections.length)||0};});setStatuteGroups(groups);}else{setMessage({type:'error',text:'Failed to fetch statute groups'});}}catch(error){setMessage({type:'error',text:'Error fetching statute groups'});}finally{setLoading(false);}},[]);// Toggle group expansion\nconst toggleGroupExpansion=groupId=>{const newExpanded=new Set(expandedGroups);if(newExpanded.has(groupId)){newExpanded.delete(groupId);}else{newExpanded.add(groupId);}setExpandedGroups(newExpanded);};// Update field mapping\nconst updateFieldMapping=(index,field,value)=>{const newMappings=[...fieldMappings];newMappings[index]=_objectSpread(_objectSpread({},newMappings[index]),{},{[field]:value});setFieldMappings(newMappings);};// Add new field mapping\nconst addFieldMapping=()=>{setFieldMappings([...fieldMappings,{source:'',target:'',enabled:true}]);};// Remove field mapping\nconst removeFieldMapping=index=>{const newMappings=fieldMappings.filter((_,i)=>i!==index);setFieldMappings(newMappings);};// Preview structure cleaning\nconst previewCleaning=async()=>{setCleaning(true);try{// For now, create a preview based on current field mappings\nconst preview={success:true,message:'Structure cleaning preview generated',sample_changes:statuteGroups.slice(0,3).map(statute=>({statute_name:statute.Statute_Name,original_sections:statute.Sections.slice(0,2).map(section=>({original:section,cleaned:fieldMappings.reduce((cleaned,mapping)=>{if(mapping.enabled&&section[mapping.source]!==undefined){cleaned[mapping.target]=section[mapping.source];}return cleaned;},{})}))}))};setPreviewData(preview);setMessage({type:'success',text:'Preview generated successfully'});}catch(error){setMessage({type:'error',text:'Error generating preview'});}finally{setCleaning(false);}};// Execute structure cleaning\nconst executeCleaning=async()=>{setCleaning(true);try{// For now, show a message that this feature needs backend implementation\nsetMessage({type:'error',text:'Structure cleaning execution requires backend implementation for the new grouped schema'});// TODO: Implement backend endpoint to clean structure in grouped format\n// This would need to:\n// 1. Apply field mappings to all sections in all statutes\n// 2. Clean and standardize field values\n// 3. Update the normalized_statutes collection\n// 4. Return summary of changes made\n}catch(error){setMessage({type:'error',text:'Error executing structure cleaning'});}finally{setCleaning(false);}};useEffect(()=>{fetchStatuteGroups();},[fetchStatuteGroups]);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Settings,{className:\"w-5 h-5 mr-2\"}),\"Structure Cleaner - Grouped Schema\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Clean and standardize the structure of sections within each statute group. Map fields, clean values, and ensure consistency across all sections.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 items-center\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchStatuteGroups,disabled:loading,className:\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-4 h-4 mr-2 \".concat(loading?'animate-spin':'')}),\"Refresh Data\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:previewCleaning,disabled:cleaning||statuteGroups.length===0,className:\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(Eye,{className:\"w-4 h-4 mr-2\"}),\"Preview Changes\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:executeCleaning,disabled:cleaning||statuteGroups.length===0,className:\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(Play,{className:\"w-4 h-4 mr-2\"}),\"Execute Cleaning\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Field Mappings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Define how section fields should be mapped and cleaned. Each mapping transforms a source field to a target field.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:fieldMappings.map((mapping,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:mapping.enabled,onChange:e=>updateFieldMapping(index,'enabled',e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 grid grid-cols-2 gap-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Source field\",value:mapping.source,onChange:e=>updateFieldMapping(index,'source',e.target.value),className:\"px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Target field\",value:mapping.target,onChange:e=>updateFieldMapping(index,'target',e.target.value),className:\"px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeFieldMapping(index),className:\"text-red-600 hover:text-red-800 p-1\",title:\"Remove mapping\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4\"})})]},index))}),/*#__PURE__*/_jsxs(\"button\",{onClick:addFieldMapping,className:\"mt-3 bg-blue-100 text-blue-700 px-4 py-2 rounded-lg hover:bg-blue-200 flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 mr-2\"}),\"Add Field Mapping\"]})]}),message&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg flex items-center \".concat(message.type==='success'?'bg-green-50 text-green-800':'bg-red-50 text-red-800'),children:[message.type==='success'?/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5 mr-2\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 mr-2\"}),message.text]}),previewData&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Eye,{className:\"w-5 h-5 mr-2\"}),\"Cleaning Preview\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(_previewData$sample_c=previewData.sample_changes)===null||_previewData$sample_c===void 0?void 0:_previewData$sample_c.map((statute,index)=>{var _statute$original_sec;return/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-3\",children:statute.statute_name}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:(_statute$original_sec=statute.original_sections)===null||_statute$original_sec===void 0?void 0:_statute$original_sec.map((section,sIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Original\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"text-xs text-gray-600 overflow-auto\",children:JSON.stringify(section.original,null,2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-blue-700 mb-2\",children:\"Cleaned\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"text-xs text-blue-600 overflow-auto\",children:JSON.stringify(section.cleaned,null,2)})]})]},sIndex))})]},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Statute Groups\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[statuteGroups.length,\" groups loaded \\u2022 Click to expand and view sections\"]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-8 h-8 mx-auto mb-2 animate-spin\"}),\"Loading statute groups...\"]}):statuteGroups.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-8 text-center text-gray-500\",children:\"No statute groups found. Run normalization first to populate the database.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-200\",children:statuteGroups.map(statute=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleGroupExpansion(statute._id),className:\"flex items-center space-x-2 text-left hover:text-blue-600\",children:[expandedGroups.has(statute._id)?/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4\"}):/*#__PURE__*/_jsx(ChevronRight,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:statute.Statute_Name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",statute.section_count,\" sections)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Fields: \",statute.Sections.length>0?Object.keys(statute.Sections[0]).join(', '):'None']})]}),expandedGroups.has(statute._id)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 ml-8 space-y-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 font-medium\",children:\"Section Structure:\"}),statute.Sections&&statute.Sections.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\",children:[statute.Sections.slice(0,6).map((section,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-2 rounded text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium text-gray-700 mb-1\",children:[\"Section \",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600\",children:Object.keys(section).map(field=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[field,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate max-w-20\",children:typeof section[field]==='string'&&section[field].length>20?\"\".concat(section[field].substring(0,20),\"...\"):String(section[field]||'')})]},field))})]},index)),statute.Sections.length>6&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-2 rounded text-xs text-gray-500 text-center\",children:[\"+\",statute.Sections.length-6,\" more sections\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-sm\",children:\"No sections found\"})]})]},statute._id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Total: \",statuteGroups.length,\" statute group(s) \\u2022 Total sections: \",statuteGroups.reduce((sum,statute)=>sum+statute.section_count,0),\" \\u2022 Active mappings: \",fieldMappings.filter(m=>m.enabled).length]})})]});};export default StructureCleaner;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Settings","RefreshCw","Play","Eye","AlertTriangle","CheckCircle","ChevronDown","ChevronRight","X","Plus","jsx","_jsx","jsxs","_jsxs","StructureCleaner","_ref","_previewData$sample_c","config","statuteGroups","setStatuteGroups","loading","setLoading","cleaning","setCleaning","previewData","setPreviewData","message","setMessage","expandedGroups","setExpandedGroups","Set","fieldMappings","setFieldMappings","source","target","enabled","fetchStatuteGroups","response","fetch","headers","concat","localStorage","getItem","data","json","success","preview_data","groups","map","statute","_statute$Sections","_id","Statute_Name","Sections","section_count","length","type","text","error","toggleGroupExpansion","groupId","newExpanded","has","delete","add","updateFieldMapping","index","field","value","newMappings","_objectSpread","addFieldMapping","removeFieldMapping","filter","_","i","previewCleaning","preview","sample_changes","slice","statute_name","original_sections","section","original","cleaned","reduce","mapping","undefined","executeCleaning","className","children","onClick","disabled","checked","onChange","e","placeholder","title","_statute$original_sec","sIndex","JSON","stringify","Object","keys","join","substring","String","sum","m"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/StructureCleaner.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Settings, RefreshCw, Play, Eye, Save, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, Database, X, Plus } from 'lucide-react';\n\ninterface StatuteGroup {\n  _id: string;\n  Statute_Name: string;\n  Sections: any[];\n  section_count: number;\n}\n\ninterface FieldMapping {\n  source: string;\n  target: string;\n  enabled: boolean;\n}\n\ninterface StructureCleanerProps {\n  config: any;\n}\n\nconst StructureCleaner: React.FC<StructureCleanerProps> = ({ config }) => {\n  const [statuteGroups, setStatuteGroups] = useState<StatuteGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [cleaning, setCleaning] = useState(false);\n  const [previewData, setPreviewData] = useState<any>(null);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n  const [fieldMappings, setFieldMappings] = useState<FieldMapping[]>([\n    { source: 'number', target: 'section_number', enabled: true },\n    { source: 'definition', target: 'section_content', enabled: true },\n    { source: 'content', target: 'section_text', enabled: true },\n    { source: 'year', target: 'section_year', enabled: true },\n    { source: 'date', target: 'section_date', enabled: true }\n  ]);\n\n  // Fetch statute groups from normalized collection\n  const fetchStatuteGroups = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/v1/phase2/preview-normalized-structure?limit=100', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      \n      if (data.success && data.preview_data) {\n        // Transform the data to match our interface\n        const groups = data.preview_data.map((statute: any) => ({\n          _id: statute.Statute_Name,\n          Statute_Name: statute.Statute_Name,\n          Sections: statute.Sections || [],\n          section_count: statute.Sections?.length || 0\n        }));\n        setStatuteGroups(groups);\n      } else {\n        setMessage({ type: 'error', text: 'Failed to fetch statute groups' });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error fetching statute groups' });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Toggle group expansion\n  const toggleGroupExpansion = (groupId: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Update field mapping\n  const updateFieldMapping = (index: number, field: keyof FieldMapping, value: any) => {\n    const newMappings = [...fieldMappings];\n    newMappings[index] = { ...newMappings[index], [field]: value };\n    setFieldMappings(newMappings);\n  };\n\n  // Add new field mapping\n  const addFieldMapping = () => {\n    setFieldMappings([...fieldMappings, { source: '', target: '', enabled: true }]);\n  };\n\n  // Remove field mapping\n  const removeFieldMapping = (index: number) => {\n    const newMappings = fieldMappings.filter((_, i) => i !== index);\n    setFieldMappings(newMappings);\n  };\n\n  // Preview structure cleaning\n  const previewCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, create a preview based on current field mappings\n      const preview = {\n        success: true,\n        message: 'Structure cleaning preview generated',\n        sample_changes: statuteGroups.slice(0, 3).map(statute => ({\n          statute_name: statute.Statute_Name,\n          original_sections: statute.Sections.slice(0, 2).map((section: any) => ({\n            original: section,\n            cleaned: fieldMappings.reduce((cleaned: any, mapping) => {\n              if (mapping.enabled && section[mapping.source] !== undefined) {\n                cleaned[mapping.target] = section[mapping.source];\n              }\n              return cleaned;\n            }, {})\n          }))\n        }))\n      };\n      \n      setPreviewData(preview);\n      setMessage({ type: 'success', text: 'Preview generated successfully' });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error generating preview' });\n    } finally {\n      setCleaning(false);\n    }\n  };\n\n  // Execute structure cleaning\n  const executeCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({ \n        type: 'error', \n        text: 'Structure cleaning execution requires backend implementation for the new grouped schema' \n      });\n      \n      // TODO: Implement backend endpoint to clean structure in grouped format\n      // This would need to:\n      // 1. Apply field mappings to all sections in all statutes\n      // 2. Clean and standardize field values\n      // 3. Update the normalized_statutes collection\n      // 4. Return summary of changes made\n      \n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error executing structure cleaning' });\n    } finally {\n      setCleaning(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStatuteGroups();\n  }, [fetchStatuteGroups]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n          <Settings className=\"w-5 h-5 mr-2\" />\n          Structure Cleaner - Grouped Schema\n        </h2>\n        <p className=\"text-gray-600 mb-4\">\n          Clean and standardize the structure of sections within each statute group. \n          Map fields, clean values, and ensure consistency across all sections.\n        </p>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <button\n            onClick={fetchStatuteGroups}\n            disabled={loading}\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\"\n          >\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh Data\n          </button>\n          \n          <button\n            onClick={previewCleaning}\n            disabled={cleaning || statuteGroups.length === 0}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            Preview Changes\n          </button>\n          \n          <button\n            onClick={executeCleaning}\n            disabled={cleaning || statuteGroups.length === 0}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\"\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Execute Cleaning\n          </button>\n        </div>\n      </div>\n\n      {/* Field Mappings */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Field Mappings</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Define how section fields should be mapped and cleaned. Each mapping transforms a source field to a target field.\n        </p>\n        \n        <div className=\"space-y-3\">\n          {fieldMappings.map((mapping, index) => (\n            <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n              <input\n                type=\"checkbox\"\n                checked={mapping.enabled}\n                onChange={(e) => updateFieldMapping(index, 'enabled', e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              \n              <div className=\"flex-1 grid grid-cols-2 gap-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Source field\"\n                  value={mapping.source}\n                  onChange={(e) => updateFieldMapping(index, 'source', e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Target field\"\n                  value={mapping.target}\n                  onChange={(e) => updateFieldMapping(index, 'target', e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n              \n              <button\n                onClick={() => removeFieldMapping(index)}\n                className=\"text-red-600 hover:text-red-800 p-1\"\n                title=\"Remove mapping\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          ))}\n        </div>\n        \n        <button\n          onClick={addFieldMapping}\n          className=\"mt-3 bg-blue-100 text-blue-700 px-4 py-2 rounded-lg hover:bg-blue-200 flex items-center\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          Add Field Mapping\n        </button>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center ${\n          message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircle className=\"w-5 h-5 mr-2\" />\n          ) : (\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n          )}\n          {message.text}\n        </div>\n      )}\n\n      {/* Preview Data */}\n      {previewData && (\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Eye className=\"w-5 h-5 mr-2\" />\n            Cleaning Preview\n          </h3>\n          \n          <div className=\"space-y-4\">\n            {previewData.sample_changes?.map((statute: any, index: number) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">{statute.statute_name}</h4>\n                \n                <div className=\"space-y-3\">\n                  {statute.original_sections?.map((section: any, sIndex: number) => (\n                    <div key={sIndex} className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded\">\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Original</div>\n                        <pre className=\"text-xs text-gray-600 overflow-auto\">\n                          {JSON.stringify(section.original, null, 2)}\n                        </pre>\n                      </div>\n                      \n                      <div className=\"bg-blue-50 p-3 rounded\">\n                        <div className=\"text-sm font-medium text-blue-700 mb-2\">Cleaned</div>\n                        <pre className=\"text-xs text-blue-600 overflow-auto\">\n                          {JSON.stringify(section.cleaned, null, 2)}\n                        </pre>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Statute Groups List */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Statute Groups</h3>\n          <p className=\"text-sm text-gray-600\">\n            {statuteGroups.length} groups loaded • Click to expand and view sections\n          </p>\n        </div>\n        \n        {loading ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            <RefreshCw className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n            Loading statute groups...\n          </div>\n        ) : statuteGroups.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            No statute groups found. Run normalization first to populate the database.\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {statuteGroups.map((statute) => (\n              <div key={statute._id} className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    onClick={() => toggleGroupExpansion(statute._id)}\n                    className=\"flex items-center space-x-2 text-left hover:text-blue-600\"\n                  >\n                    {expandedGroups.has(statute._id) ? (\n                      <ChevronDown className=\"w-4 h-4\" />\n                    ) : (\n                      <ChevronRight className=\"w-4 h-4\" />\n                    )}\n                    <span className=\"font-medium text-gray-900\">{statute.Statute_Name}</span>\n                    <span className=\"text-sm text-gray-500\">({statute.section_count} sections)</span>\n                  </button>\n                  \n                  <div className=\"text-sm text-gray-500\">\n                    Fields: {statute.Sections.length > 0 ? Object.keys(statute.Sections[0]).join(', ') : 'None'}\n                  </div>\n                </div>\n                \n                {/* Expanded Sections View */}\n                {expandedGroups.has(statute._id) && (\n                  <div className=\"mt-3 ml-8 space-y-2\">\n                    <div className=\"text-sm text-gray-600 font-medium\">Section Structure:</div>\n                    {statute.Sections && statute.Sections.length > 0 ? (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {statute.Sections.slice(0, 6).map((section: any, index: number) => (\n                          <div key={index} className=\"bg-gray-50 p-2 rounded text-sm\">\n                            <div className=\"font-medium text-gray-700 mb-1\">\n                              Section {index + 1}\n                            </div>\n                            <div className=\"text-xs text-gray-600\">\n                              {Object.keys(section).map(field => (\n                                <div key={field} className=\"flex justify-between\">\n                                  <span>{field}:</span>\n                                  <span className=\"truncate max-w-20\">\n                                    {typeof section[field] === 'string' && section[field].length > 20 \n                                      ? `${section[field].substring(0, 20)}...` \n                                      : String(section[field] || '')}\n                                  </span>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        ))}\n                        {statute.Sections.length > 6 && (\n                          <div className=\"bg-gray-100 p-2 rounded text-xs text-gray-500 text-center\">\n                            +{statute.Sections.length - 6} more sections\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-500 text-sm\">No sections found</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {statuteGroups.length} statute group(s) • \n          Total sections: {statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0)} • \n          Active mappings: {fieldMappings.filter(m => m.enabled).length}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StructureCleaner;\n"],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,QAAQ,CAAEC,SAAS,CAAEC,IAAI,CAAEC,GAAG,CAAQC,aAAa,CAAEC,WAAW,CAAEC,WAAW,CAAEC,YAAY,CAAYC,CAAC,CAAEC,IAAI,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAmB9I,KAAM,CAAAC,gBAAiD,CAAGC,IAAA,EAAgB,KAAAC,qBAAA,IAAf,CAAEC,MAAO,CAAC,CAAAF,IAAA,CACnE,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAAiB,EAAE,CAAC,CACtE,KAAM,CAACuB,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACyB,QAAQ,CAAEC,WAAW,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC2B,WAAW,CAAEC,cAAc,CAAC,CAAG5B,QAAQ,CAAM,IAAI,CAAC,CACzD,KAAM,CAAC6B,OAAO,CAAEC,UAAU,CAAC,CAAG9B,QAAQ,CAAqD,IAAI,CAAC,CAChG,KAAM,CAAC+B,cAAc,CAAEC,iBAAiB,CAAC,CAAGhC,QAAQ,CAAc,GAAI,CAAAiC,GAAG,CAAC,CAAC,CAAC,CAC5E,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGnC,QAAQ,CAAiB,CACjE,CAAEoC,MAAM,CAAE,QAAQ,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,OAAO,CAAE,IAAK,CAAC,CAC7D,CAAEF,MAAM,CAAE,YAAY,CAAEC,MAAM,CAAE,iBAAiB,CAAEC,OAAO,CAAE,IAAK,CAAC,CAClE,CAAEF,MAAM,CAAE,SAAS,CAAEC,MAAM,CAAE,cAAc,CAAEC,OAAO,CAAE,IAAK,CAAC,CAC5D,CAAEF,MAAM,CAAE,MAAM,CAAEC,MAAM,CAAE,cAAc,CAAEC,OAAO,CAAE,IAAK,CAAC,CACzD,CAAEF,MAAM,CAAE,MAAM,CAAEC,MAAM,CAAE,cAAc,CAAEC,OAAO,CAAE,IAAK,CAAC,CAC1D,CAAC,CAEF;AACA,KAAM,CAAAC,kBAAkB,CAAGrC,WAAW,CAAC,SAAY,CACjDsB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uDAAuD,CAAE,CACpFC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC1D,CACF,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAID,IAAI,CAACE,OAAO,EAAIF,IAAI,CAACG,YAAY,CAAE,CACrC;AACA,KAAM,CAAAC,MAAM,CAAGJ,IAAI,CAACG,YAAY,CAACE,GAAG,CAAEC,OAAY,OAAAC,iBAAA,OAAM,CACtDC,GAAG,CAAEF,OAAO,CAACG,YAAY,CACzBA,YAAY,CAAEH,OAAO,CAACG,YAAY,CAClCC,QAAQ,CAAEJ,OAAO,CAACI,QAAQ,EAAI,EAAE,CAChCC,aAAa,CAAE,EAAAJ,iBAAA,CAAAD,OAAO,CAACI,QAAQ,UAAAH,iBAAA,iBAAhBA,iBAAA,CAAkBK,MAAM,GAAI,CAC7C,CAAC,EAAC,CAAC,CACHpC,gBAAgB,CAAC4B,MAAM,CAAC,CAC1B,CAAC,IAAM,CACLpB,UAAU,CAAC,CAAE6B,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,gCAAiC,CAAC,CAAC,CACvE,CACF,CAAE,MAAOC,KAAK,CAAE,CACd/B,UAAU,CAAC,CAAE6B,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,+BAAgC,CAAC,CAAC,CACtE,CAAC,OAAS,CACRpC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAsC,oBAAoB,CAAIC,OAAe,EAAK,CAChD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAA/B,GAAG,CAACF,cAAc,CAAC,CAC3C,GAAIiC,WAAW,CAACC,GAAG,CAACF,OAAO,CAAC,CAAE,CAC5BC,WAAW,CAACE,MAAM,CAACH,OAAO,CAAC,CAC7B,CAAC,IAAM,CACLC,WAAW,CAACG,GAAG,CAACJ,OAAO,CAAC,CAC1B,CACA/B,iBAAiB,CAACgC,WAAW,CAAC,CAChC,CAAC,CAED;AACA,KAAM,CAAAI,kBAAkB,CAAGA,CAACC,KAAa,CAAEC,KAAyB,CAAEC,KAAU,GAAK,CACnF,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGtC,aAAa,CAAC,CACtCsC,WAAW,CAACH,KAAK,CAAC,CAAAI,aAAA,CAAAA,aAAA,IAAQD,WAAW,CAACH,KAAK,CAAC,MAAE,CAACC,KAAK,EAAGC,KAAK,EAAE,CAC9DpC,gBAAgB,CAACqC,WAAW,CAAC,CAC/B,CAAC,CAED;AACA,KAAM,CAAAE,eAAe,CAAGA,CAAA,GAAM,CAC5BvC,gBAAgB,CAAC,CAAC,GAAGD,aAAa,CAAE,CAAEE,MAAM,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAC,CAAC,CACjF,CAAC,CAED;AACA,KAAM,CAAAqC,kBAAkB,CAAIN,KAAa,EAAK,CAC5C,KAAM,CAAAG,WAAW,CAAGtC,aAAa,CAAC0C,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,GAAKT,KAAK,CAAC,CAC/DlC,gBAAgB,CAACqC,WAAW,CAAC,CAC/B,CAAC,CAED;AACA,KAAM,CAAAO,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClCrD,WAAW,CAAC,IAAI,CAAC,CACjB,GAAI,CACF;AACA,KAAM,CAAAsD,OAAO,CAAG,CACdhC,OAAO,CAAE,IAAI,CACbnB,OAAO,CAAE,sCAAsC,CAC/CoD,cAAc,CAAE5D,aAAa,CAAC6D,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC/B,GAAG,CAACC,OAAO,GAAK,CACxD+B,YAAY,CAAE/B,OAAO,CAACG,YAAY,CAClC6B,iBAAiB,CAAEhC,OAAO,CAACI,QAAQ,CAAC0B,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC/B,GAAG,CAAEkC,OAAY,GAAM,CACrEC,QAAQ,CAAED,OAAO,CACjBE,OAAO,CAAErD,aAAa,CAACsD,MAAM,CAAC,CAACD,OAAY,CAAEE,OAAO,GAAK,CACvD,GAAIA,OAAO,CAACnD,OAAO,EAAI+C,OAAO,CAACI,OAAO,CAACrD,MAAM,CAAC,GAAKsD,SAAS,CAAE,CAC5DH,OAAO,CAACE,OAAO,CAACpD,MAAM,CAAC,CAAGgD,OAAO,CAACI,OAAO,CAACrD,MAAM,CAAC,CACnD,CACA,MAAO,CAAAmD,OAAO,CAChB,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED3D,cAAc,CAACoD,OAAO,CAAC,CACvBlD,UAAU,CAAC,CAAE6B,IAAI,CAAE,SAAS,CAAEC,IAAI,CAAE,gCAAiC,CAAC,CAAC,CACzE,CAAE,MAAOC,KAAK,CAAE,CACd/B,UAAU,CAAC,CAAE6B,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,0BAA2B,CAAC,CAAC,CACjE,CAAC,OAAS,CACRlC,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAED;AACA,KAAM,CAAAiE,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClCjE,WAAW,CAAC,IAAI,CAAC,CACjB,GAAI,CACF;AACAI,UAAU,CAAC,CACT6B,IAAI,CAAE,OAAO,CACbC,IAAI,CAAE,yFACR,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AAEF,CAAE,MAAOC,KAAK,CAAE,CACd/B,UAAU,CAAC,CAAE6B,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,oCAAqC,CAAC,CAAC,CAC3E,CAAC,OAAS,CACRlC,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAC,CAEDzB,SAAS,CAAC,IAAM,CACdsC,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACA,kBAAkB,CAAC,CAAC,CAExB,mBACEvB,KAAA,QAAK4E,SAAS,CAAC,WAAW,CAAAC,QAAA,eAExB7E,KAAA,QAAK4E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C7E,KAAA,OAAI4E,SAAS,CAAC,4DAA4D,CAAAC,QAAA,eACxE/E,IAAA,CAACX,QAAQ,EAACyF,SAAS,CAAC,cAAc,CAAE,CAAC,qCAEvC,EAAI,CAAC,cACL9E,IAAA,MAAG8E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,kJAGlC,CAAG,CAAC,cAGJ7E,KAAA,QAAK4E,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChD7E,KAAA,WACE8E,OAAO,CAAEvD,kBAAmB,CAC5BwD,QAAQ,CAAExE,OAAQ,CAClBqE,SAAS,CAAC,qGAAqG,CAAAC,QAAA,eAE/G/E,IAAA,CAACV,SAAS,EAACwF,SAAS,iBAAAjD,MAAA,CAAkBpB,OAAO,CAAG,cAAc,CAAG,EAAE,CAAG,CAAE,CAAC,eAE3E,EAAQ,CAAC,cAETP,KAAA,WACE8E,OAAO,CAAEf,eAAgB,CACzBgB,QAAQ,CAAEtE,QAAQ,EAAIJ,aAAa,CAACqC,MAAM,GAAK,CAAE,CACjDkC,SAAS,CAAC,qGAAqG,CAAAC,QAAA,eAE/G/E,IAAA,CAACR,GAAG,EAACsF,SAAS,CAAC,cAAc,CAAE,CAAC,kBAElC,EAAQ,CAAC,cAET5E,KAAA,WACE8E,OAAO,CAAEH,eAAgB,CACzBI,QAAQ,CAAEtE,QAAQ,EAAIJ,aAAa,CAACqC,MAAM,GAAK,CAAE,CACjDkC,SAAS,CAAC,uGAAuG,CAAAC,QAAA,eAEjH/E,IAAA,CAACT,IAAI,EAACuF,SAAS,CAAC,cAAc,CAAE,CAAC,mBAEnC,EAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAGN5E,KAAA,QAAK4E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C/E,IAAA,OAAI8E,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cAC5E/E,IAAA,MAAG8E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,mHAElC,CAAG,CAAC,cAEJ/E,IAAA,QAAK8E,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvB3D,aAAa,CAACiB,GAAG,CAAC,CAACsC,OAAO,CAAEpB,KAAK,gBAChCrD,KAAA,QAAiB4E,SAAS,CAAC,uDAAuD,CAAAC,QAAA,eAChF/E,IAAA,UACE6C,IAAI,CAAC,UAAU,CACfqC,OAAO,CAAEP,OAAO,CAACnD,OAAQ,CACzB2D,QAAQ,CAAGC,CAAC,EAAK9B,kBAAkB,CAACC,KAAK,CAAE,SAAS,CAAE6B,CAAC,CAAC7D,MAAM,CAAC2D,OAAO,CAAE,CACxEJ,SAAS,CAAC,2DAA2D,CACtE,CAAC,cAEF5E,KAAA,QAAK4E,SAAS,CAAC,+BAA+B,CAAAC,QAAA,eAC5C/E,IAAA,UACE6C,IAAI,CAAC,MAAM,CACXwC,WAAW,CAAC,cAAc,CAC1B5B,KAAK,CAAEkB,OAAO,CAACrD,MAAO,CACtB6D,QAAQ,CAAGC,CAAC,EAAK9B,kBAAkB,CAACC,KAAK,CAAE,QAAQ,CAAE6B,CAAC,CAAC7D,MAAM,CAACkC,KAAK,CAAE,CACrEqB,SAAS,CAAC,2EAA2E,CACtF,CAAC,cACF9E,IAAA,UACE6C,IAAI,CAAC,MAAM,CACXwC,WAAW,CAAC,cAAc,CAC1B5B,KAAK,CAAEkB,OAAO,CAACpD,MAAO,CACtB4D,QAAQ,CAAGC,CAAC,EAAK9B,kBAAkB,CAACC,KAAK,CAAE,QAAQ,CAAE6B,CAAC,CAAC7D,MAAM,CAACkC,KAAK,CAAE,CACrEqB,SAAS,CAAC,2EAA2E,CACtF,CAAC,EACC,CAAC,cAEN9E,IAAA,WACEgF,OAAO,CAAEA,CAAA,GAAMnB,kBAAkB,CAACN,KAAK,CAAE,CACzCuB,SAAS,CAAC,qCAAqC,CAC/CQ,KAAK,CAAC,gBAAgB,CAAAP,QAAA,cAEtB/E,IAAA,CAACH,CAAC,EAACiF,SAAS,CAAC,SAAS,CAAE,CAAC,CACnB,CAAC,GA/BDvB,KAgCL,CACN,CAAC,CACC,CAAC,cAENrD,KAAA,WACE8E,OAAO,CAAEpB,eAAgB,CACzBkB,SAAS,CAAC,yFAAyF,CAAAC,QAAA,eAEnG/E,IAAA,CAACF,IAAI,EAACgF,SAAS,CAAC,cAAc,CAAE,CAAC,oBAEnC,EAAQ,CAAC,EACN,CAAC,CAGL/D,OAAO,eACNb,KAAA,QAAK4E,SAAS,qCAAAjD,MAAA,CACZd,OAAO,CAAC8B,IAAI,GAAK,SAAS,CAAG,4BAA4B,CAAG,wBAAwB,CACnF,CAAAkC,QAAA,EACAhE,OAAO,CAAC8B,IAAI,GAAK,SAAS,cACzB7C,IAAA,CAACN,WAAW,EAACoF,SAAS,CAAC,cAAc,CAAE,CAAC,cAExC9E,IAAA,CAACP,aAAa,EAACqF,SAAS,CAAC,cAAc,CAAE,CAC1C,CACA/D,OAAO,CAAC+B,IAAI,EACV,CACN,CAGAjC,WAAW,eACVX,KAAA,QAAK4E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C7E,KAAA,OAAI4E,SAAS,CAAC,4DAA4D,CAAAC,QAAA,eACxE/E,IAAA,CAACR,GAAG,EAACsF,SAAS,CAAC,cAAc,CAAE,CAAC,mBAElC,EAAI,CAAC,cAEL9E,IAAA,QAAK8E,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAA1E,qBAAA,CACvBQ,WAAW,CAACsD,cAAc,UAAA9D,qBAAA,iBAA1BA,qBAAA,CAA4BgC,GAAG,CAAC,CAACC,OAAY,CAAEiB,KAAa,QAAAgC,qBAAA,oBAC3DrF,KAAA,QAAiB4E,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAChE/E,IAAA,OAAI8E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAAEzC,OAAO,CAAC+B,YAAY,CAAK,CAAC,cAE1ErE,IAAA,QAAK8E,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAAQ,qBAAA,CACvBjD,OAAO,CAACgC,iBAAiB,UAAAiB,qBAAA,iBAAzBA,qBAAA,CAA2BlD,GAAG,CAAC,CAACkC,OAAY,CAAEiB,MAAc,gBAC3DtF,KAAA,QAAkB4E,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eAClD7E,KAAA,QAAK4E,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrC/E,IAAA,QAAK8E,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,cACtE/E,IAAA,QAAK8E,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CACjDU,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACC,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CACvC,CAAC,EACH,CAAC,cAENtE,KAAA,QAAK4E,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrC/E,IAAA,QAAK8E,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cACrE/E,IAAA,QAAK8E,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CACjDU,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACE,OAAO,CAAE,IAAI,CAAE,CAAC,CAAC,CACtC,CAAC,EACH,CAAC,GAbEe,MAcL,CACN,CAAC,CACC,CAAC,GArBEjC,KAsBL,CAAC,EACP,CAAC,CACC,CAAC,EACH,CACN,cAGDrD,KAAA,QAAK4E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzC7E,KAAA,QAAK4E,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC3C/E,IAAA,OAAI8E,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cACvE7E,KAAA,MAAG4E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EACjCxE,aAAa,CAACqC,MAAM,CAAC,yDACxB,EAAG,CAAC,EACD,CAAC,CAELnC,OAAO,cACNP,KAAA,QAAK4E,SAAS,CAAC,+BAA+B,CAAAC,QAAA,eAC5C/E,IAAA,CAACV,SAAS,EAACwF,SAAS,CAAC,mCAAmC,CAAE,CAAC,4BAE7D,EAAK,CAAC,CACJvE,aAAa,CAACqC,MAAM,GAAK,CAAC,cAC5B5C,IAAA,QAAK8E,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAC,4EAE/C,CAAK,CAAC,cAEN/E,IAAA,QAAK8E,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACtCxE,aAAa,CAAC8B,GAAG,CAAEC,OAAO,eACzBpC,KAAA,QAAuB4E,SAAS,CAAC,KAAK,CAAAC,QAAA,eACpC7E,KAAA,QAAK4E,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChD7E,KAAA,WACE8E,OAAO,CAAEA,CAAA,GAAMhC,oBAAoB,CAACV,OAAO,CAACE,GAAG,CAAE,CACjDsC,SAAS,CAAC,2DAA2D,CAAAC,QAAA,EAEpE9D,cAAc,CAACkC,GAAG,CAACb,OAAO,CAACE,GAAG,CAAC,cAC9BxC,IAAA,CAACL,WAAW,EAACmF,SAAS,CAAC,SAAS,CAAE,CAAC,cAEnC9E,IAAA,CAACJ,YAAY,EAACkF,SAAS,CAAC,SAAS,CAAE,CACpC,cACD9E,IAAA,SAAM8E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAEzC,OAAO,CAACG,YAAY,CAAO,CAAC,cACzEvC,KAAA,SAAM4E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,GAAC,CAACzC,OAAO,CAACK,aAAa,CAAC,YAAU,EAAM,CAAC,EAC3E,CAAC,cAETzC,KAAA,QAAK4E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,UAC7B,CAACzC,OAAO,CAACI,QAAQ,CAACE,MAAM,CAAG,CAAC,CAAG+C,MAAM,CAACC,IAAI,CAACtD,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACmD,IAAI,CAAC,IAAI,CAAC,CAAG,MAAM,EACxF,CAAC,EACH,CAAC,CAGL5E,cAAc,CAACkC,GAAG,CAACb,OAAO,CAACE,GAAG,CAAC,eAC9BtC,KAAA,QAAK4E,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC/E,IAAA,QAAK8E,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAAC,oBAAkB,CAAK,CAAC,CAC1EzC,OAAO,CAACI,QAAQ,EAAIJ,OAAO,CAACI,QAAQ,CAACE,MAAM,CAAG,CAAC,cAC9C1C,KAAA,QAAK4E,SAAS,CAAC,sDAAsD,CAAAC,QAAA,EAClEzC,OAAO,CAACI,QAAQ,CAAC0B,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC/B,GAAG,CAAC,CAACkC,OAAY,CAAEhB,KAAa,gBAC5DrD,KAAA,QAAiB4E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eACzD7E,KAAA,QAAK4E,SAAS,CAAC,gCAAgC,CAAAC,QAAA,EAAC,UACtC,CAACxB,KAAK,CAAG,CAAC,EACf,CAAC,cACNvD,IAAA,QAAK8E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACnCY,MAAM,CAACC,IAAI,CAACrB,OAAO,CAAC,CAAClC,GAAG,CAACmB,KAAK,eAC7BtD,KAAA,QAAiB4E,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eAC/C7E,KAAA,SAAA6E,QAAA,EAAOvB,KAAK,CAAC,GAAC,EAAM,CAAC,cACrBxD,IAAA,SAAM8E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAChC,MAAO,CAAAR,OAAO,CAACf,KAAK,CAAC,GAAK,QAAQ,EAAIe,OAAO,CAACf,KAAK,CAAC,CAACZ,MAAM,CAAG,EAAE,IAAAf,MAAA,CAC1D0C,OAAO,CAACf,KAAK,CAAC,CAACsC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,QAClCC,MAAM,CAACxB,OAAO,CAACf,KAAK,CAAC,EAAI,EAAE,CAAC,CAC5B,CAAC,GANCA,KAOL,CACN,CAAC,CACC,CAAC,GAfED,KAgBL,CACN,CAAC,CACDjB,OAAO,CAACI,QAAQ,CAACE,MAAM,CAAG,CAAC,eAC1B1C,KAAA,QAAK4E,SAAS,CAAC,2DAA2D,CAAAC,QAAA,EAAC,GACxE,CAACzC,OAAO,CAACI,QAAQ,CAACE,MAAM,CAAG,CAAC,CAAC,gBAChC,EAAK,CACN,EACE,CAAC,cAEN5C,IAAA,QAAK8E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,mBAAiB,CAAK,CAC9D,EACE,CACN,GAvDOzC,OAAO,CAACE,GAwDb,CACN,CAAC,CACC,CACN,EACE,CAAC,cAGNxC,IAAA,QAAK8E,SAAS,CAAC,2BAA2B,CAAAC,QAAA,cACxC7E,KAAA,QAAK4E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,SAC9B,CAACxE,aAAa,CAACqC,MAAM,CAAC,2CACb,CAACrC,aAAa,CAACmE,MAAM,CAAC,CAACsB,GAAG,CAAE1D,OAAO,GAAK0D,GAAG,CAAG1D,OAAO,CAACK,aAAa,CAAE,CAAC,CAAC,CAAC,2BACvE,CAACvB,aAAa,CAAC0C,MAAM,CAACmC,CAAC,EAAIA,CAAC,CAACzE,OAAO,CAAC,CAACoB,MAAM,EAC1D,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}