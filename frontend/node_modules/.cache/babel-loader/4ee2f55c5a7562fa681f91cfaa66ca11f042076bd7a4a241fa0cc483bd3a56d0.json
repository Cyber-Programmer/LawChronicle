{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{SortAsc,RefreshCw,Play,Eye,AlertTriangle,CheckCircle,ChevronDown,ChevronRight,ArrowUpDown,Hash,Text,FileText}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SortingInterface=_ref=>{var _previewData$sample_c;let{config}=_ref;const[statuteGroups,setStatuteGroups]=useState([]);const[loading,setLoading]=useState(false);const[sorting,setSorting]=useState(false);const[previewData,setPreviewData]=useState(null);const[message,setMessage]=useState(null);const[expandedGroups,setExpandedGroups]=useState(new Set());const[sortOptions,setSortOptions]=useState({preambleFirst:true,numericOrder:true,alphabeticalFallback:true,customSortOrder:false});// Fetch statute groups from normalized collection\nconst fetchStatuteGroups=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/v1/phase2/preview-normalized-structure?limit=100',{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const data=await response.json();if(data.success&&data.preview_data){// Transform the data to match our interface\nconst groups=data.preview_data.map(statute=>{var _statute$Sections;return{_id:statute.Statute_Name,Statute_Name:statute.Statute_Name,Sections:statute.Sections||[],section_count:((_statute$Sections=statute.Sections)===null||_statute$Sections===void 0?void 0:_statute$Sections.length)||0};});setStatuteGroups(groups);}else{setMessage({type:'error',text:'Failed to fetch statute groups'});}}catch(error){setMessage({type:'error',text:'Error fetching statute groups'});}finally{setLoading(false);}},[]);// Toggle group expansion\nconst toggleGroupExpansion=groupId=>{const newExpanded=new Set(expandedGroups);if(newExpanded.has(groupId)){newExpanded.delete(groupId);}else{newExpanded.add(groupId);}setExpandedGroups(newExpanded);};// Section sort key function (replicating backend logic)\nconst sectionSortKey=section=>{const num=section.number||section.section_number||\"\";// Preamble always first\nif(typeof num==='string'&&num.trim().toLowerCase()==='preamble'){return[0,''];}// Try to parse as numeric\ntry{const numStr=String(num).trim();if(numStr.replace(/[.-]/g,'').match(/^\\d+$/)){return[1,parseFloat(numStr)];}}catch(e){// Ignore parsing errors\n}// Non-numeric sections last, sorted alphabetically\nreturn[2,String(num).toLowerCase()];};// Preview sorting changes\nconst previewSorting=async()=>{setSorting(true);try{// Create a preview showing how sections would be sorted\nconst preview={success:true,message:'Sorting preview generated',sample_changes:statuteGroups.slice(0,5).map(statute=>{const originalSections=[...statute.Sections];const sortedSections=[...statute.Sections].sort((a,b)=>{const[aType,aValue]=sectionSortKey(a);const[bType,bValue]=sectionSortKey(b);if(aType!==bType)return aType-bType;if(aType===1)return aValue-bValue;// Numeric comparison\nreturn String(aValue).localeCompare(String(bValue));// String comparison\n});return{statute_name:statute.Statute_Name,original_order:originalSections.slice(0,3).map((section,index)=>({position:index+1,number:section.number||section.section_number||\"Section \".concat(index+1),type:sectionSortKey(section)[0]===0?'preamble':sectionSortKey(section)[0]===1?'numeric':'text'})),sorted_order:sortedSections.slice(0,3).map((section,index)=>({position:index+1,number:section.number||section.section_number||\"Section \".concat(index+1),type:sectionSortKey(section)[0]===0?'preamble':sectionSortKey(section)[0]===1?'numeric':'text'}))};})};setPreviewData(preview);setMessage({type:'success',text:'Sorting preview generated successfully'});}catch(error){setMessage({type:'error',text:'Error generating sorting preview'});}finally{setSorting(false);}};// Execute sorting\nconst executeSorting=async()=>{setSorting(true);try{// For now, show a message that this feature needs backend implementation\nsetMessage({type:'error',text:'Sorting execution requires backend implementation for the new grouped schema'});// TODO: Implement backend endpoint to re-sort sections in grouped format\n// This would need to:\n// 1. Apply the section sort key to all sections in all statutes\n// 2. Update the normalized_statutes collection with re-sorted sections\n// 3. Return summary of sorting changes made\n}catch(error){setMessage({type:'error',text:'Error executing sorting'});}finally{setSorting(false);}};useEffect(()=>{fetchStatuteGroups();},[fetchStatuteGroups]);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(SortAsc,{className:\"w-5 h-5 mr-2\"}),\"Sorting Interface - Grouped Sections\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Configure and preview how sections within each statute group should be sorted. Default sorting: preamble first, then numeric sections, then text sections.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 items-center\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchStatuteGroups,disabled:loading,className:\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-4 h-4 mr-2 \".concat(loading?'animate-spin':'')}),\"Refresh Data\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:previewSorting,disabled:sorting||statuteGroups.length===0,className:\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(Eye,{className:\"w-4 h-4 mr-2\"}),\"Preview Sorting\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:executeSorting,disabled:sorting||statuteGroups.length===0,className:\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\",children:[/*#__PURE__*/_jsx(Play,{className:\"w-4 h-4 mr-2\"}),\"Execute Sorting\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Sorting Configuration\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Configure the sorting behavior for sections within each statute group.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:sortOptions.preambleFirst,onChange:e=>setSortOptions(prev=>_objectSpread(_objectSpread({},prev),{},{preambleFirst:e.target.checked})),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Preamble First\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Always place preamble sections at the beginning\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:sortOptions.numericOrder,onChange:e=>setSortOptions(prev=>_objectSpread(_objectSpread({},prev),{},{numericOrder:e.target.checked})),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Numeric Order\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Sort numeric sections in ascending order\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:sortOptions.alphabeticalFallback,onChange:e=>setSortOptions(prev=>_objectSpread(_objectSpread({},prev),{},{alphabeticalFallback:e.target.checked})),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Alphabetical Fallback\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Sort non-numeric sections alphabetically\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:sortOptions.customSortOrder,onChange:e=>setSortOptions(prev=>_objectSpread(_objectSpread({},prev),{},{customSortOrder:e.target.checked})),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:\"Custom Sort Order\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Enable custom sorting rules (advanced)\"})]})]})]})]}),message&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg flex items-center \".concat(message.type==='success'?'bg-green-50 text-green-800':'bg-red-50 text-red-800'),children:[message.type==='success'?/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5 mr-2\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 mr-2\"}),message.text]}),previewData&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Eye,{className:\"w-5 h-5 mr-2\"}),\"Sorting Preview\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(_previewData$sample_c=previewData.sample_changes)===null||_previewData$sample_c===void 0?void 0:_previewData$sample_c.map((statute,index)=>{var _statute$original_ord,_statute$sorted_order;return/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-3\",children:statute.statute_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium text-gray-700 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(ArrowUpDown,{className:\"w-4 h-4 mr-1\"}),\"Original Order\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:(_statute$original_ord=statute.original_order)===null||_statute$original_ord===void 0?void 0:_statute$original_ord.map((section,sIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500\",children:[section.position,\".\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:section.number}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 rounded text-xs \".concat(section.type==='preamble'?'bg-blue-100 text-blue-800':section.type==='numeric'?'bg-green-100 text-green-800':'bg-gray-100 text-gray-800'),children:[section.type==='preamble'?/*#__PURE__*/_jsx(FileText,{className:\"w-3 h-3 inline mr-1\"}):section.type==='numeric'?/*#__PURE__*/_jsx(Hash,{className:\"w-3 h-3 inline mr-1\"}):/*#__PURE__*/_jsx(Text,{className:\"w-3 h-3 inline mr-1\"}),section.type]})]},sIndex))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-3 rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium text-blue-700 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(SortAsc,{className:\"w-4 h-4 mr-1\"}),\"Sorted Order\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:(_statute$sorted_order=statute.sorted_order)===null||_statute$sorted_order===void 0?void 0:_statute$sorted_order.map((section,sIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-blue-500\",children:[section.position,\".\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:section.number}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 rounded text-xs \".concat(section.type==='preamble'?'bg-blue-100 text-blue-800':section.type==='numeric'?'bg-green-100 text-green-800':'bg-gray-100 text-gray-800'),children:[section.type==='preamble'?/*#__PURE__*/_jsx(FileText,{className:\"w-3 h-3 inline mr-1\"}):section.type==='numeric'?/*#__PURE__*/_jsx(Hash,{className:\"w-3 h-3 inline mr-1\"}):/*#__PURE__*/_jsx(Text,{className:\"w-3 h-3 inline mr-1\"}),section.type]})]},sIndex))})]})]})]},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Statute Groups\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[statuteGroups.length,\" groups loaded \\u2022 Click to expand and view current section order\"]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-8 h-8 mx-auto mb-2 animate-spin\"}),\"Loading statute groups...\"]}):statuteGroups.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-8 text-center text-gray-500\",children:\"No statute groups found. Run normalization first to populate the database.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-200\",children:statuteGroups.map(statute=>{var _statute$Sections2;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleGroupExpansion(statute._id),className:\"flex items-center space-x-2 text-left hover:text-blue-600\",children:[expandedGroups.has(statute._id)?/*#__PURE__*/_jsx(ChevronDown,{className:\"w-4 h-4\"}):/*#__PURE__*/_jsx(ChevronRight,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:statute.Statute_Name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500\",children:[\"(\",statute.section_count,\" sections)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Current order: \",statute.Sections.length>0?\"\".concat(statute.Sections[0].number||'N/A',\" \\u2192 \").concat(((_statute$Sections2=statute.Sections[statute.Sections.length-1])===null||_statute$Sections2===void 0?void 0:_statute$Sections2.number)||'N/A'):'No sections']})]}),expandedGroups.has(statute._id)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 ml-8 space-y-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 font-medium\",children:\"Current Section Order:\"}),statute.Sections&&statute.Sections.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\",children:statute.Sections.map((section,index)=>{const[sortType]=sectionSortKey(section);const sectionType=sortType===0?'preamble':sortType===1?'numeric':'text';return/*#__PURE__*/_jsxs(\"div\",{className:\"p-2 rounded text-sm border-l-4 \".concat(sectionType==='preamble'?'border-l-blue-500 bg-blue-50':sectionType==='numeric'?'border-l-green-500 bg-green-50':'border-l-gray-500 bg-gray-50'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:section.number||section.section_number||\"Section \".concat(index+1)}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded text-xs \".concat(sectionType==='preamble'?'bg-blue-100 text-blue-800':sectionType==='numeric'?'bg-green-100 text-green-800':'bg-gray-100 text-gray-800'),children:sectionType})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 mt-1 truncate\",children:section.definition||section.content||'No content'})]},index);})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-sm\",children:\"No sections found\"})]})]},statute._id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Total: \",statuteGroups.length,\" statute group(s) \\u2022 Total sections: \",statuteGroups.reduce((sum,statute)=>sum+statute.section_count,0),\" \\u2022 Sorting: \",sortOptions.preambleFirst?'Preamble first':'No preamble priority',\" \\u2022\",sortOptions.numericOrder?'Numeric order':'No numeric order',\" \\u2022\",sortOptions.alphabeticalFallback?'Alphabetical fallback':'No alphabetical fallback']})})]});};export default SortingInterface;","map":{"version":3,"names":["React","useState","useEffect","useCallback","SortAsc","RefreshCw","Play","Eye","AlertTriangle","CheckCircle","ChevronDown","ChevronRight","ArrowUpDown","Hash","Text","FileText","jsx","_jsx","jsxs","_jsxs","SortingInterface","_ref","_previewData$sample_c","config","statuteGroups","setStatuteGroups","loading","setLoading","sorting","setSorting","previewData","setPreviewData","message","setMessage","expandedGroups","setExpandedGroups","Set","sortOptions","setSortOptions","preambleFirst","numericOrder","alphabeticalFallback","customSortOrder","fetchStatuteGroups","response","fetch","headers","concat","localStorage","getItem","data","json","success","preview_data","groups","map","statute","_statute$Sections","_id","Statute_Name","Sections","section_count","length","type","text","error","toggleGroupExpansion","groupId","newExpanded","has","delete","add","sectionSortKey","section","num","number","section_number","trim","toLowerCase","numStr","String","replace","match","parseFloat","e","previewSorting","preview","sample_changes","slice","originalSections","sortedSections","sort","a","b","aType","aValue","bType","bValue","localeCompare","statute_name","original_order","index","position","sorted_order","executeSorting","className","children","onClick","disabled","checked","onChange","prev","_objectSpread","target","_statute$original_ord","_statute$sorted_order","sIndex","_statute$Sections2","sortType","sectionType","definition","content","reduce","sum"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/SortingInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { SortAsc, RefreshCw, Play, Eye, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, ArrowUpDown, Hash, Text, FileText } from 'lucide-react';\n\ninterface StatuteGroup {\n  _id: string;\n  Statute_Name: string;\n  Sections: any[];\n  section_count: number;\n}\n\ninterface SortingInterfaceProps {\n  config: any;\n}\n\nconst SortingInterface: React.FC<SortingInterfaceProps> = ({ config }) => {\n  const [statuteGroups, setStatuteGroups] = useState<StatuteGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [sorting, setSorting] = useState(false);\n  const [previewData, setPreviewData] = useState<any>(null);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n  const [sortOptions, setSortOptions] = useState({\n    preambleFirst: true,\n    numericOrder: true,\n    alphabeticalFallback: true,\n    customSortOrder: false\n  });\n\n  // Fetch statute groups from normalized collection\n  const fetchStatuteGroups = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/v1/phase2/preview-normalized-structure?limit=100', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      \n      if (data.success && data.preview_data) {\n        // Transform the data to match our interface\n        const groups = data.preview_data.map((statute: any) => ({\n          _id: statute.Statute_Name,\n          Statute_Name: statute.Statute_Name,\n          Sections: statute.Sections || [],\n          section_count: statute.Sections?.length || 0\n        }));\n        setStatuteGroups(groups);\n      } else {\n        setMessage({ type: 'error', text: 'Failed to fetch statute groups' });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error fetching statute groups' });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Toggle group expansion\n  const toggleGroupExpansion = (groupId: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Section sort key function (replicating backend logic)\n  const sectionSortKey = (section: any) => {\n    const num = section.number || section.section_number || \"\";\n    \n    // Preamble always first\n    if (typeof num === 'string' && num.trim().toLowerCase() === 'preamble') {\n      return [0, ''];\n    }\n    \n    // Try to parse as numeric\n    try {\n      const numStr = String(num).trim();\n      if (numStr.replace(/[.-]/g, '').match(/^\\d+$/)) {\n        return [1, parseFloat(numStr)];\n      }\n    } catch (e) {\n      // Ignore parsing errors\n    }\n    \n    // Non-numeric sections last, sorted alphabetically\n    return [2, String(num).toLowerCase()];\n  };\n\n  // Preview sorting changes\n  const previewSorting = async () => {\n    setSorting(true);\n    try {\n      // Create a preview showing how sections would be sorted\n      const preview = {\n        success: true,\n        message: 'Sorting preview generated',\n        sample_changes: statuteGroups.slice(0, 5).map(statute => {\n          const originalSections = [...statute.Sections];\n          const sortedSections = [...statute.Sections].sort((a, b) => {\n            const [aType, aValue] = sectionSortKey(a);\n            const [bType, bValue] = sectionSortKey(b);\n            \n            if (aType !== bType) return (aType as number) - (bType as number);\n            if (aType === 1) return (aValue as number) - (bValue as number); // Numeric comparison\n            return String(aValue).localeCompare(String(bValue)); // String comparison\n          });\n          \n          return {\n            statute_name: statute.Statute_Name,\n            original_order: originalSections.slice(0, 3).map((section: any, index: number) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : \n                    sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            })),\n            sorted_order: sortedSections.slice(0, 3).map((section: any, index: number) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : \n                    sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            }))\n          };\n        })\n      };\n      \n      setPreviewData(preview);\n      setMessage({ type: 'success', text: 'Sorting preview generated successfully' });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error generating sorting preview' });\n    } finally {\n      setSorting(false);\n    }\n  };\n\n  // Execute sorting\n  const executeSorting = async () => {\n    setSorting(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({ \n        type: 'error', \n        text: 'Sorting execution requires backend implementation for the new grouped schema' \n      });\n      \n      // TODO: Implement backend endpoint to re-sort sections in grouped format\n      // This would need to:\n      // 1. Apply the section sort key to all sections in all statutes\n      // 2. Update the normalized_statutes collection with re-sorted sections\n      // 3. Return summary of sorting changes made\n      \n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error executing sorting' });\n    } finally {\n      setSorting(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStatuteGroups();\n  }, [fetchStatuteGroups]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n          <SortAsc className=\"w-5 h-5 mr-2\" />\n          Sorting Interface - Grouped Sections\n        </h2>\n        <p className=\"text-gray-600 mb-4\">\n          Configure and preview how sections within each statute group should be sorted. \n          Default sorting: preamble first, then numeric sections, then text sections.\n        </p>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <button\n            onClick={fetchStatuteGroups}\n            disabled={loading}\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\"\n          >\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh Data\n          </button>\n          \n          <button\n            onClick={previewSorting}\n            disabled={sorting || statuteGroups.length === 0}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            Preview Sorting\n          </button>\n          \n          <button\n            onClick={executeSorting}\n            disabled={sorting || statuteGroups.length === 0}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\"\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Execute Sorting\n          </button>\n        </div>\n      </div>\n\n      {/* Sorting Options */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sorting Configuration</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Configure the sorting behavior for sections within each statute group.\n        </p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.preambleFirst}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, preambleFirst: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Preamble First</div>\n              <div className=\"text-sm text-gray-600\">Always place preamble sections at the beginning</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.numericOrder}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, numericOrder: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Numeric Order</div>\n              <div className=\"text-sm text-gray-600\">Sort numeric sections in ascending order</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.alphabeticalFallback}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, alphabeticalFallback: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Alphabetical Fallback</div>\n              <div className=\"text-sm text-gray-600\">Sort non-numeric sections alphabetically</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.customSortOrder}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, customSortOrder: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Custom Sort Order</div>\n              <div className=\"text-sm text-gray-600\">Enable custom sorting rules (advanced)</div>\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center ${\n          message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircle className=\"w-5 h-5 mr-2\" />\n          ) : (\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n          )}\n          {message.text}\n        </div>\n      )}\n\n      {/* Preview Data */}\n      {previewData && (\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Eye className=\"w-5 h-5 mr-2\" />\n            Sorting Preview\n          </h3>\n          \n          <div className=\"space-y-4\">\n            {previewData.sample_changes?.map((statute: any, index: number) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">{statute.statute_name}</h4>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 p-3 rounded\">\n                    <div className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                      <ArrowUpDown className=\"w-4 h-4 mr-1\" />\n                      Original Order\n                    </div>\n                    <div className=\"space-y-1\">\n                      {statute.original_order?.map((section: any, sIndex: number) => (\n                        <div key={sIndex} className=\"flex items-center space-x-2 text-sm\">\n                          <span className=\"text-gray-500\">{section.position}.</span>\n                          <span className=\"font-medium\">{section.number}</span>\n                          <span className={`px-2 py-1 rounded text-xs ${\n                            section.type === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                            section.type === 'numeric' ? 'bg-green-100 text-green-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {section.type === 'preamble' ? <FileText className=\"w-3 h-3 inline mr-1\" /> :\n                             section.type === 'numeric' ? <Hash className=\"w-3 h-3 inline mr-1\" /> :\n                             <Text className=\"w-3 h-3 inline mr-1\" />}\n                            {section.type}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-blue-50 p-3 rounded\">\n                    <div className=\"text-sm font-medium text-blue-700 mb-2 flex items-center\">\n                      <SortAsc className=\"w-4 h-4 mr-1\" />\n                      Sorted Order\n                    </div>\n                    <div className=\"space-y-1\">\n                      {statute.sorted_order?.map((section: any, sIndex: number) => (\n                        <div key={sIndex} className=\"flex items-center space-x-2 text-sm\">\n                          <span className=\"text-blue-500\">{section.position}.</span>\n                          <span className=\"font-medium\">{section.number}</span>\n                          <span className={`px-2 py-1 rounded text-xs ${\n                            section.type === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                            section.type === 'numeric' ? 'bg-green-100 text-green-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {section.type === 'preamble' ? <FileText className=\"w-3 h-3 inline mr-1\" /> :\n                             section.type === 'numeric' ? <Hash className=\"w-3 h-3 inline mr-1\" /> :\n                             <Text className=\"w-3 h-3 inline mr-1\" />}\n                            {section.type}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Statute Groups List */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Statute Groups</h3>\n          <p className=\"text-sm text-gray-600\">\n            {statuteGroups.length} groups loaded • Click to expand and view current section order\n          </p>\n        </div>\n        \n        {loading ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            <RefreshCw className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n            Loading statute groups...\n          </div>\n        ) : statuteGroups.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            No statute groups found. Run normalization first to populate the database.\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {statuteGroups.map((statute) => (\n              <div key={statute._id} className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    onClick={() => toggleGroupExpansion(statute._id)}\n                    className=\"flex items-center space-x-2 text-left hover:text-blue-600\"\n                  >\n                    {expandedGroups.has(statute._id) ? (\n                      <ChevronDown className=\"w-4 h-4\" />\n                    ) : (\n                      <ChevronRight className=\"w-4 h-4\" />\n                    )}\n                    <span className=\"font-medium text-gray-900\">{statute.Statute_Name}</span>\n                    <span className=\"text-sm text-gray-500\">({statute.section_count} sections)</span>\n                  </button>\n                  \n                  <div className=\"text-sm text-gray-500\">\n                    Current order: {statute.Sections.length > 0 ? \n                      `${statute.Sections[0].number || 'N/A'} → ${statute.Sections[statute.Sections.length - 1]?.number || 'N/A'}` : \n                      'No sections'}\n                  </div>\n                </div>\n                \n                {/* Expanded Sections View */}\n                {expandedGroups.has(statute._id) && (\n                  <div className=\"mt-3 ml-8 space-y-2\">\n                    <div className=\"text-sm text-gray-600 font-medium\">Current Section Order:</div>\n                    {statute.Sections && statute.Sections.length > 0 ? (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {statute.Sections.map((section: any, index: number) => {\n                          const [sortType] = sectionSortKey(section);\n                          const sectionType = sortType === 0 ? 'preamble' : sortType === 1 ? 'numeric' : 'text';\n                          \n                          return (\n                            <div key={index} className={`p-2 rounded text-sm border-l-4 ${\n                              sectionType === 'preamble' ? 'border-l-blue-500 bg-blue-50' :\n                              sectionType === 'numeric' ? 'border-l-green-500 bg-green-50' :\n                              'border-l-gray-500 bg-gray-50'\n                            }`}>\n                              <div className=\"flex items-center justify-between\">\n                                <span className=\"font-medium text-gray-700\">\n                                  {section.number || section.section_number || `Section ${index + 1}`}\n                                </span>\n                                <span className={`px-2 py-1 rounded text-xs ${\n                                  sectionType === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                                  sectionType === 'numeric' ? 'bg-green-100 text-green-800' :\n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {sectionType}\n                                </span>\n                              </div>\n                              <div className=\"text-xs text-gray-600 mt-1 truncate\">\n                                {section.definition || section.content || 'No content'}\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-500 text-sm\">No sections found</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {statuteGroups.length} statute group(s) • \n          Total sections: {statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0)} • \n          Sorting: {sortOptions.preambleFirst ? 'Preamble first' : 'No preamble priority'} • \n          {sortOptions.numericOrder ? 'Numeric order' : 'No numeric order'} • \n          {sortOptions.alphabeticalFallback ? 'Alphabetical fallback' : 'No alphabetical fallback'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SortingInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}