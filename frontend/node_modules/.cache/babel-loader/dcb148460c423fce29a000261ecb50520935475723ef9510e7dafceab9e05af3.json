{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Database,RefreshCw,Save,AlertTriangle,CheckCircle,Eye,EyeOff,X}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StructureCleaner=_ref=>{let{config}=_ref;const[fieldAnalysis,setFieldAnalysis]=useState({});const[fieldMapping,setFieldMapping]=useState({});const[loading,setLoading]=useState(false);const[message,setMessage]=useState(null);const[showAdvanced,setShowAdvanced]=useState(false);const[customMappings,setCustomMappings]=useState({});const[validationRules,setValidationRules]=useState({});// Fetch field analysis\nconst fetchFieldAnalysis=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/v1/phase2/structure-analysis');const data=await response.json();if(data.success){setFieldAnalysis(data.field_analysis);// Initialize default field mapping\nconst defaultMapping={};Object.keys(data.field_analysis).forEach(field=>{// Convert field names to lowercase with underscores\nconst normalizedField=field.toLowerCase().replace(/[^a-zA-Z0-9]/g,'_');defaultMapping[field]=normalizedField;});setFieldMapping(defaultMapping);}else{setMessage({type:'error',text:'Failed to fetch field analysis'});}}catch(error){setMessage({type:'error',text:'Error fetching field analysis'});}finally{setLoading(false);}},[]);// Save field mapping\nconst saveFieldMapping=async()=>{try{const response=await fetch('/api/v1/phase2/update-field-mapping',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({field_mapping:fieldMapping})});const data=await response.json();if(data.success){setMessage({type:'success',text:'Field mapping saved successfully'});}else{setMessage({type:'error',text:'Failed to save field mapping'});}}catch(error){setMessage({type:'error',text:'Error saving field mapping'});}};// Add custom field mapping\nconst addCustomMapping=()=>{const newField=\"custom_field_\".concat(Object.keys(customMappings).length+1);setCustomMappings(prev=>_objectSpread(_objectSpread({},prev),{},{[newField]:''}));};// Remove custom field mapping\nconst removeCustomMapping=field=>{const newMappings=_objectSpread({},customMappings);delete newMappings[field];setCustomMappings(newMappings);};// Add validation rule\nconst addValidationRule=()=>{const newRule=\"rule_\".concat(Object.keys(validationRules).length+1);setValidationRules(prev=>_objectSpread(_objectSpread({},prev),{},{[newRule]:{field:'',type:'required',value:'',message:''}}));};// Remove validation rule\nconst removeValidationRule=rule=>{const newRules=_objectSpread({},validationRules);delete newRules[rule];setValidationRules(newRules);};// Update validation rule\nconst updateValidationRule=(rule,field,value)=>{setValidationRules(prev=>_objectSpread(_objectSpread({},prev),{},{[rule]:_objectSpread(_objectSpread({},prev[rule]),{},{[field]:value})}));};// Get field type color\nconst getFieldTypeColor=type=>{const colors={'str':'bg-blue-100 text-blue-800','int':'bg-green-100 text-green-800','float':'bg-yellow-100 text-yellow-800','bool':'bg-purple-100 text-purple-800','list':'bg-indigo-100 text-indigo-800','dict':'bg-pink-100 text-pink-800','ObjectId':'bg-gray-100 text-gray-800'};return colors[type]||'bg-gray-100 text-gray-800';};// Get presence percentage\nconst getPresencePercentage=count=>{const totalDocs=Object.values(fieldAnalysis).reduce((sum,field)=>sum+field.presence_count,0);if(totalDocs===0)return 0;return Math.round(count/totalDocs*100);};useEffect(()=>{fetchFieldAnalysis();},[fetchFieldAnalysis]);// Clear message after 5 seconds\nuseEffect(()=>{if(message){const timer=setTimeout(()=>setMessage(null),5000);return()=>clearTimeout(timer);}},[message]);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Structure Cleaning & Analysis\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Analyze document structure, configure field mappings, and set validation rules\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchFieldAnalysis,disabled:loading,className:\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"h-4 w-4 mr-2 \".concat(loading?'animate-spin':'')}),\"Refresh Analysis\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:saveFieldMapping,className:\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(Save,{className:\"h-4 w-4 mr-2\"}),\"Save Mapping\"]})]})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"rounded-md p-4 \".concat(message.type==='success'?'bg-green-50 border border-green-200':'bg-red-50 border border-red-200'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:message.type==='success'?/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5 text-green-400\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-red-400\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm \".concat(message.type==='success'?'text-green-800':'text-red-800'),children:message.text})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:\"Field Analysis\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Analysis of \",Object.keys(fieldAnalysis).length,\" fields found in documents\"]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"h-8 w-8 text-gray-400 mx-auto mb-4 animate-spin\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Analyzing document structure...\"})]}):Object.keys(fieldAnalysis).length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center\",children:[/*#__PURE__*/_jsx(Database,{className:\"h-8 w-8 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"No fields found to analyze\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Field Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Presence\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Sample Value\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:Object.entries(fieldAnalysis).map(_ref2=>{let[fieldName,fieldInfo]=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-900 font-mono\",children:fieldName})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(getFieldTypeColor(fieldInfo.type)),children:fieldInfo.type})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-900\",children:fieldInfo.presence_count}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 bg-gray-200 rounded-full h-2 w-20\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full\",style:{width:\"\".concat(getPresencePercentage(fieldInfo.presence_count),\"%\")}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[getPresencePercentage(fieldInfo.presence_count),\"%\"]})]})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 font-mono\",children:fieldInfo.sample_value})})]},fieldName);})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:\"Field Mapping Configuration\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Configure how source fields should be mapped to normalized fields\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:Object.entries(fieldAnalysis).map(_ref3=>{let[sourceField,fieldInfo]=_ref3;return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[sourceField,/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium \".concat(getFieldTypeColor(fieldInfo.type)),children:fieldInfo.type})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:fieldMapping[sourceField]||'',onChange:e=>setFieldMapping(prev=>_objectSpread(_objectSpread({},prev),{},{[sourceField]:e.target.value})),placeholder:\"Enter normalized field name\",className:\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"})]})},sourceField);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 pt-6 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-medium text-gray-900\",children:\"Custom Field Mappings\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addCustomMapping,className:\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500\",children:\"+ Add Custom Field\"})]}),Object.keys(customMappings).length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:Object.entries(customMappings).map(_ref4=>{let[customField,mappedField]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:customField}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:mappedField,onChange:e=>setCustomMappings(prev=>_objectSpread(_objectSpread({},prev),{},{[customField]:e.target.value})),placeholder:\"Enter mapped field name\",className:\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeCustomMapping(customField),className:\"text-red-600 hover:text-red-900 p-1\",children:/*#__PURE__*/_jsx(X,{className:\"h-4 w-4\"})})]},customField);})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAdvanced(!showAdvanced),className:\"flex items-center text-sm font-medium text-gray-900 hover:text-gray-700\",children:[showAdvanced?/*#__PURE__*/_jsx(EyeOff,{className:\"h-4 w-4 mr-2\"}):/*#__PURE__*/_jsx(Eye,{className:\"h-4 w-4 mr-2\"}),\"Advanced Options\"]})}),showAdvanced&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-medium text-gray-900\",children:\"Validation Rules\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addValidationRule,className:\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500\",children:\"+ Add Rule\"})]}),Object.keys(validationRules).length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(validationRules).map(_ref5=>{let[ruleName,rule]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 p-4 border border-gray-200 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-3 flex-1\",children:[/*#__PURE__*/_jsxs(\"select\",{value:rule.field,onChange:e=>updateValidationRule(ruleName,'field',e.target.value),className:\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Field\"}),Object.keys(fieldAnalysis).map(field=>/*#__PURE__*/_jsx(\"option\",{value:field,children:field},field))]}),/*#__PURE__*/_jsxs(\"select\",{value:rule.type,onChange:e=>updateValidationRule(ruleName,'type',e.target.value),className:\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"required\",children:\"Required\"}),/*#__PURE__*/_jsx(\"option\",{value:\"min_length\",children:\"Min Length\"}),/*#__PURE__*/_jsx(\"option\",{value:\"max_length\",children:\"Max Length\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pattern\",children:\"Pattern\"}),/*#__PURE__*/_jsx(\"option\",{value:\"range\",children:\"Range\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:rule.value,onChange:e=>updateValidationRule(ruleName,'value',e.target.value),placeholder:\"Value/Pattern\",className:\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:rule.message,onChange:e=>updateValidationRule(ruleName,'message',e.target.value),placeholder:\"Error Message\",className:\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeValidationRule(ruleName),className:\"text-red-600 hover:text-red-900 p-1\",children:/*#__PURE__*/_jsx(X,{className:\"h-4 w-4\"})})]},ruleName);})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-medium text-gray-900 mb-4\",children:\"Structure Validation\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"validate-required-fields\",className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"validate-required-fields\",className:\"text-sm text-gray-700\",children:\"Validate required fields are present\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"validate-field-types\",className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"validate-field-types\",className:\"text-sm text-gray-700\",children:\"Validate field data types\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"remove-empty-fields\",className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"remove-empty-fields\",className:\"text-sm text-gray-700\",children:\"Remove empty/null fields\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"normalize-strings\",className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"normalize-strings\",className:\"text-sm text-gray-700\",children:\"Normalize string values\"})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-900 mb-2\",children:\"Structure Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Total Fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:Object.keys(fieldAnalysis).length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"String Fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:Object.values(fieldAnalysis).filter(f=>f.type==='str').length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Numeric Fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:Object.values(fieldAnalysis).filter(f=>['int','float'].includes(f.type)).length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Custom Mappings:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:Object.keys(customMappings).length})]})]})]})]});};export default StructureCleaner;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Database","RefreshCw","Save","AlertTriangle","CheckCircle","Eye","EyeOff","X","jsx","_jsx","jsxs","_jsxs","StructureCleaner","_ref","config","fieldAnalysis","setFieldAnalysis","fieldMapping","setFieldMapping","loading","setLoading","message","setMessage","showAdvanced","setShowAdvanced","customMappings","setCustomMappings","validationRules","setValidationRules","fetchFieldAnalysis","response","fetch","data","json","success","field_analysis","defaultMapping","Object","keys","forEach","field","normalizedField","toLowerCase","replace","type","text","error","saveFieldMapping","method","headers","body","JSON","stringify","field_mapping","addCustomMapping","newField","concat","length","prev","_objectSpread","removeCustomMapping","newMappings","addValidationRule","newRule","value","removeValidationRule","rule","newRules","updateValidationRule","getFieldTypeColor","colors","getPresencePercentage","count","totalDocs","values","reduce","sum","presence_count","Math","round","timer","setTimeout","clearTimeout","className","children","onClick","disabled","entries","map","_ref2","fieldName","fieldInfo","style","width","sample_value","_ref3","sourceField","onChange","e","target","placeholder","_ref4","customField","mappedField","_ref5","ruleName","id","htmlFor","filter","f","includes"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/StructureCleaner.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Settings, Database, RefreshCw, Save, AlertTriangle, CheckCircle, Eye, EyeOff, X } from 'lucide-react';\r\n\r\ninterface FieldAnalysis {\r\n  [key: string]: {\r\n    type: string;\r\n    sample_value: string;\r\n    presence_count: number;\r\n  };\r\n}\r\n\r\ninterface FieldMapping {\r\n  [key: string]: string;\r\n}\r\n\r\ninterface StructureCleanerProps {\r\n  config: any;\r\n}\r\n\r\nconst StructureCleaner: React.FC<StructureCleanerProps> = ({ config }) => {\r\n  const [fieldAnalysis, setFieldAnalysis] = useState<FieldAnalysis>({});\r\n  const [fieldMapping, setFieldMapping] = useState<FieldMapping>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [customMappings, setCustomMappings] = useState<FieldMapping>({});\r\n  const [validationRules, setValidationRules] = useState<{[key: string]: any}>({});\r\n\r\n  // Fetch field analysis\r\n  const fetchFieldAnalysis = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/v1/phase2/structure-analysis');\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setFieldAnalysis(data.field_analysis);\r\n        \r\n        // Initialize default field mapping\r\n        const defaultMapping: FieldMapping = {};\r\n        Object.keys(data.field_analysis).forEach(field => {\r\n          // Convert field names to lowercase with underscores\r\n          const normalizedField = field.toLowerCase().replace(/[^a-zA-Z0-9]/g, '_');\r\n          defaultMapping[field] = normalizedField;\r\n        });\r\n        setFieldMapping(defaultMapping);\r\n      } else {\r\n        setMessage({ type: 'error', text: 'Failed to fetch field analysis' });\r\n      }\r\n    } catch (error) {\r\n      setMessage({ type: 'error', text: 'Error fetching field analysis' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Save field mapping\r\n  const saveFieldMapping = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase2/update-field-mapping', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ field_mapping: fieldMapping })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setMessage({ type: 'success', text: 'Field mapping saved successfully' });\r\n      } else {\r\n        setMessage({ type: 'error', text: 'Failed to save field mapping' });\r\n      }\r\n    } catch (error) {\r\n      setMessage({ type: 'error', text: 'Error saving field mapping' });\r\n    }\r\n  };\r\n\r\n  // Add custom field mapping\r\n  const addCustomMapping = () => {\r\n    const newField = `custom_field_${Object.keys(customMappings).length + 1}`;\r\n    setCustomMappings(prev => ({ ...prev, [newField]: '' }));\r\n  };\r\n\r\n  // Remove custom field mapping\r\n  const removeCustomMapping = (field: string) => {\r\n    const newMappings = { ...customMappings };\r\n    delete newMappings[field];\r\n    setCustomMappings(newMappings);\r\n  };\r\n\r\n  // Add validation rule\r\n  const addValidationRule = () => {\r\n    const newRule = `rule_${Object.keys(validationRules).length + 1}`;\r\n    setValidationRules(prev => ({ \r\n      ...prev, \r\n      [newRule]: { \r\n        field: '', \r\n        type: 'required', \r\n        value: '',\r\n        message: ''\r\n      } \r\n    }));\r\n  };\r\n\r\n  // Remove validation rule\r\n  const removeValidationRule = (rule: string) => {\r\n    const newRules = { ...validationRules };\r\n    delete newRules[rule];\r\n    setValidationRules(newRules);\r\n  };\r\n\r\n  // Update validation rule\r\n  const updateValidationRule = (rule: string, field: string, value: any) => {\r\n    setValidationRules(prev => ({\r\n      ...prev,\r\n      [rule]: { ...prev[rule], [field]: value }\r\n    }));\r\n  };\r\n\r\n  // Get field type color\r\n  const getFieldTypeColor = (type: string) => {\r\n    const colors: { [key: string]: string } = {\r\n      'str': 'bg-blue-100 text-blue-800',\r\n      'int': 'bg-green-100 text-green-800',\r\n      'float': 'bg-yellow-100 text-yellow-800',\r\n      'bool': 'bg-purple-100 text-purple-800',\r\n      'list': 'bg-indigo-100 text-indigo-800',\r\n      'dict': 'bg-pink-100 text-pink-800',\r\n      'ObjectId': 'bg-gray-100 text-gray-800'\r\n    };\r\n    return colors[type] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  // Get presence percentage\r\n  const getPresencePercentage = (count: number) => {\r\n    const totalDocs = Object.values(fieldAnalysis).reduce((sum, field) => sum + field.presence_count, 0);\r\n    if (totalDocs === 0) return 0;\r\n    return Math.round((count / totalDocs) * 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFieldAnalysis();\r\n  }, [fetchFieldAnalysis]);\r\n\r\n  // Clear message after 5 seconds\r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => setMessage(null), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Structure Cleaning & Analysis</h3>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Analyze document structure, configure field mappings, and set validation rules\r\n          </p>\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={fetchFieldAnalysis}\r\n            disabled={loading}\r\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Refresh Analysis\r\n          </button>\r\n          <button\r\n            onClick={saveFieldMapping}\r\n            className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            <Save className=\"h-4 w-4 mr-2\" />\r\n            Save Mapping\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Message Display */}\r\n      {message && (\r\n        <div className={`rounded-md p-4 ${\r\n          message.type === 'success' ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\r\n        }`}>\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              {message.type === 'success' ? (\r\n                <CheckCircle className=\"h-5 w-5 text-green-400\" />\r\n              ) : (\r\n                <AlertTriangle className=\"h-5 w-5 text-red-400\" />\r\n              )}\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className={`text-sm ${\r\n                message.type === 'success' ? 'text-green-800' : 'text-red-800'\r\n              }`}>\r\n                {message.text}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Field Analysis */}\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h4 className=\"text-lg font-medium text-gray-900\">Field Analysis</h4>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Analysis of {Object.keys(fieldAnalysis).length} fields found in documents\r\n          </p>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <div className=\"p-8 text-center\">\r\n            <RefreshCw className=\"h-8 w-8 text-gray-400 mx-auto mb-4 animate-spin\" />\r\n            <p className=\"text-gray-600\">Analyzing document structure...</p>\r\n          </div>\r\n        ) : Object.keys(fieldAnalysis).length === 0 ? (\r\n          <div className=\"p-8 text-center\">\r\n            <Database className=\"h-8 w-8 text-gray-400 mx-auto mb-4\" />\r\n            <p className=\"text-gray-600\">No fields found to analyze</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Field Name\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Type\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Presence\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Sample Value\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {Object.entries(fieldAnalysis).map(([fieldName, fieldInfo]) => (\r\n                  <tr key={fieldName} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm font-medium text-gray-900 font-mono\">\r\n                        {fieldName}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getFieldTypeColor(fieldInfo.type)}`}>\r\n                        {fieldInfo.type}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-sm text-gray-900\">{fieldInfo.presence_count}</span>\r\n                        <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-20\">\r\n                          <div \r\n                            className=\"bg-blue-600 h-2 rounded-full\" \r\n                            style={{ width: `${getPresencePercentage(fieldInfo.presence_count)}%` }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"text-xs text-gray-500\">{getPresencePercentage(fieldInfo.presence_count)}%</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <span className=\"text-sm text-gray-600 font-mono\">\r\n                        {fieldInfo.sample_value}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Field Mapping Configuration */}\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h4 className=\"text-lg font-medium text-gray-900\">Field Mapping Configuration</h4>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Configure how source fields should be mapped to normalized fields\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {Object.entries(fieldAnalysis).map(([sourceField, fieldInfo]) => (\r\n              <div key={sourceField} className=\"flex items-center space-x-3\">\r\n                <div className=\"flex-1\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {sourceField}\r\n                    <span className={`ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${getFieldTypeColor(fieldInfo.type)}`}>\r\n                      {fieldInfo.type}\r\n                    </span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={fieldMapping[sourceField] || ''}\r\n                    onChange={(e) => setFieldMapping(prev => ({ ...prev, [sourceField]: e.target.value }))}\r\n                    placeholder=\"Enter normalized field name\"\r\n                    className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Custom Field Mappings */}\r\n          <div className=\"mt-6 pt-6 border-t border-gray-200\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h5 className=\"text-sm font-medium text-gray-900\">Custom Field Mappings</h5>\r\n              <button\r\n                onClick={addCustomMapping}\r\n                className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              >\r\n                + Add Custom Field\r\n              </button>\r\n            </div>\r\n            \r\n            {Object.keys(customMappings).length > 0 && (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {Object.entries(customMappings).map(([customField, mappedField]) => (\r\n                  <div key={customField} className=\"flex items-center space-x-3\">\r\n                    <div className=\"flex-1\">\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {customField}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={mappedField}\r\n                        onChange={(e) => setCustomMappings(prev => ({ ...prev, [customField]: e.target.value }))}\r\n                        placeholder=\"Enter mapped field name\"\r\n                        className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={() => removeCustomMapping(customField)}\r\n                      className=\"text-red-600 hover:text-red-900 p-1\"\r\n                    >\r\n                      <X className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced Options */}\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <button\r\n            onClick={() => setShowAdvanced(!showAdvanced)}\r\n            className=\"flex items-center text-sm font-medium text-gray-900 hover:text-gray-700\"\r\n          >\r\n            {showAdvanced ? <EyeOff className=\"h-4 w-4 mr-2\" /> : <Eye className=\"h-4 w-4 mr-2\" />}\r\n            Advanced Options\r\n          </button>\r\n        </div>\r\n        \r\n        {showAdvanced && (\r\n          <div className=\"p-6\">\r\n            {/* Validation Rules */}\r\n            <div className=\"mb-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h5 className=\"text-sm font-medium text-gray-900\">Validation Rules</h5>\r\n                <button\r\n                  onClick={addValidationRule}\r\n                  className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                >\r\n                  + Add Rule\r\n                </button>\r\n              </div>\r\n              \r\n              {Object.keys(validationRules).length > 0 && (\r\n                <div className=\"space-y-4\">\r\n                  {Object.entries(validationRules).map(([ruleName, rule]) => (\r\n                    <div key={ruleName} className=\"flex items-center space-x-3 p-4 border border-gray-200 rounded-lg\">\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-3 flex-1\">\r\n                        <select\r\n                          value={rule.field}\r\n                          onChange={(e) => updateValidationRule(ruleName, 'field', e.target.value)}\r\n                          className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                        >\r\n                          <option value=\"\">Select Field</option>\r\n                          {Object.keys(fieldAnalysis).map(field => (\r\n                            <option key={field} value={field}>{field}</option>\r\n                          ))}\r\n                        </select>\r\n                        \r\n                        <select\r\n                          value={rule.type}\r\n                          onChange={(e) => updateValidationRule(ruleName, 'type', e.target.value)}\r\n                          className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                        >\r\n                          <option value=\"required\">Required</option>\r\n                          <option value=\"min_length\">Min Length</option>\r\n                          <option value=\"max_length\">Max Length</option>\r\n                          <option value=\"pattern\">Pattern</option>\r\n                          <option value=\"range\">Range</option>\r\n                        </select>\r\n                        \r\n                        <input\r\n                          type=\"text\"\r\n                          value={rule.value}\r\n                          onChange={(e) => updateValidationRule(ruleName, 'value', e.target.value)}\r\n                          placeholder=\"Value/Pattern\"\r\n                          className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                        />\r\n                        \r\n                        <input\r\n                          type=\"text\"\r\n                          value={rule.message}\r\n                          onChange={(e) => updateValidationRule(ruleName, 'message', e.target.value)}\r\n                          placeholder=\"Error Message\"\r\n                          className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <button\r\n                        onClick={() => removeValidationRule(ruleName)}\r\n                        className=\"text-red-600 hover:text-red-900 p-1\"\r\n                      >\r\n                        <X className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Structure Validation */}\r\n            <div>\r\n              <h5 className=\"text-sm font-medium text-gray-900 mb-4\">Structure Validation</h5>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"validate-required-fields\"\r\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                  />\r\n                  <label htmlFor=\"validate-required-fields\" className=\"text-sm text-gray-700\">\r\n                    Validate required fields are present\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"validate-field-types\"\r\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                  />\r\n                  <label htmlFor=\"validate-field-types\" className=\"text-sm text-gray-700\">\r\n                    Validate field data types\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"remove-empty-fields\"\r\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                  />\r\n                  <label htmlFor=\"remove-empty-fields\" className=\"text-sm text-gray-700\">\r\n                    Remove empty/null fields\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"normalize-strings\"\r\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                  />\r\n                  <label htmlFor=\"normalize-strings\" className=\"text-sm text-gray-700\">\r\n                    Normalize string values\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Summary */}\r\n      <div className=\"bg-gray-50 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Structure Summary</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">Total Fields:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">{Object.keys(fieldAnalysis).length}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">String Fields:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">\r\n              {Object.values(fieldAnalysis).filter(f => f.type === 'str').length}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">Numeric Fields:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">\r\n              {Object.values(fieldAnalysis).filter(f => ['int', 'float'].includes(f.type)).length}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">Custom Mappings:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">{Object.keys(customMappings).length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StructureCleaner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}