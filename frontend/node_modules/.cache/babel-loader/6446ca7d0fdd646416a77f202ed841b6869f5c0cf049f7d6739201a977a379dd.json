{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Scissors,Database,FileText,Settings,History,Eye,RotateCcw,Split,Layers,Loader2,AlertCircle}from'lucide-react';// Configuration interface - updated to match CLI flow\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Default configuration - matches CLI scripts\nconst DEFAULT_CONFIG={source_database:\"Statutes\",source_collection:\"normalized_statutes\",target_database:\"Batched-Statutes\",target_collection_prefix:\"batch_\",batch_size:10,enable_ai_cleaning:false};const Phase3=()=>{var _status$collection_st,_status$collection_st2,_status$collection_st3,_status$collection_st4,_validationResults$me,_validationResults$me2,_validationResults$me3,_validationResults$me4,_validationResults$me5,_statistics$statistic,_statistics$statistic2,_statistics$statistic3,_statistics$statistic4,_statistics$statistic5,_statistics$statistic6,_statistics$statistic7,_statistics$statistic8,_statistics$statistic9,_statistics$statistic0,_statistics$statistic1,_statistics$statistic10,_statistics$statistic11,_statistics$statistic12,_statistics$statistic13;const[activeTab,setActiveTab]=useState('overview');const[config,setConfig]=useState(DEFAULT_CONFIG);const[isProcessing,setIsProcessing]=useState(false);const[status,setStatus]=useState(null);const[statistics,setStatistics]=useState(null);const[batchPreview,setBatchPreview]=useState(null);const[progressStep,setProgressStep]=useState('');const[progressDetails,setProgressDetails]=useState('');const[processingStats,setProcessingStats]=useState(null);const[operationError,setOperationError]=useState(null);const[history,setHistory]=useState(null);const[availableBatches,setAvailableBatches]=useState(null);const[selectedBatches,setSelectedBatches]=useState([]);const[cleanAllBatches,setCleanAllBatches]=useState(true);const[dryRun,setDryRun]=useState(true);const[validationResults,setValidationResults]=useState(null);const[expandedStatutes,setExpandedStatutes]=useState({});const[expandedSections,setExpandedSections]=useState({});// Load config from localStorage on mount\nuseEffect(()=>{const savedConfig=localStorage.getItem('phase3_config');if(savedConfig){try{setConfig(JSON.parse(savedConfig));}catch(error){console.error('Error loading Phase 3 config:',error);}}},[]);// Save config to localStorage when it changes\nuseEffect(()=>{localStorage.setItem('phase3_config',JSON.stringify(config));},[config]);// Update configuration\nconst updateConfig=updates=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),updates));};// Reset configuration to defaults\nconst resetConfig=()=>{setConfig(DEFAULT_CONFIG);};// Fetch Phase 3 status\nconst fetchStatus=async()=>{try{const response=await fetch('/api/v1/phase3/status');if(response.ok){const data=await response.json();setStatus(data);}}catch(error){console.error('Error fetching Phase 3 status:',error);}};// Fetch statistics\nconst fetchStatistics=async()=>{try{const response=await fetch('/api/v1/phase3/statistics',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setStatistics(data);}}catch(error){console.error('Error fetching Phase 3 statistics:',error);}};// Fetch batch preview\nconst fetchBatchPreview=async()=>{try{const response=await fetch('/api/v1/phase3/preview-batches',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setBatchPreview(data);}}catch(error){console.error('Error fetching batch preview:',error);}};// Fetch history\nconst fetchHistory=async()=>{try{const response=await fetch('/api/v1/phase3/history');if(response.ok){const data=await response.json();setHistory(data);}}catch(error){console.error('Error fetching history:',error);}};// Fetch available batches for cleaning\nconst fetchAvailableBatches=async()=>{try{const response=await fetch('/api/v1/phase3/available-batches',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setAvailableBatches(data);}}catch(error){console.error('Error fetching available batches:',error);}};// Generate metadata\nconst generateMetadata=async()=>{try{const response=await fetch('/api/v1/phase3/generate-metadata',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const result=await response.json();alert(\"Metadata generated successfully! File: \".concat(result.metadata_file));fetchHistory();}else{const error=await response.json();alert(\"Error generating metadata: \".concat(error.detail));}}catch(error){console.error('Error generating metadata:',error);alert('Failed to generate metadata');}};// Start section splitting using modern service endpoint\nconst startSectionSplitting=async()=>{setIsProcessing(true);setOperationError(null);setProgressStep('Initializing section splitting process...');setProgressDetails('Preparing to analyze and split statute sections');setProcessingStats(null);try{// Step 1: Prepare request\nsetProgressStep('Preparing section splitting request');setProgressDetails(\"Source: \".concat(config.source_collection,\" \\u2192 Target: \").concat(config.target_collection_prefix,\"_sections\"));const statuteRequest={statute_text:\"Processing batches from \".concat(config.source_collection),metadata:{source_database:config.source_database,source_collection:config.source_collection,target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_size:config.batch_size,processing_type:\"section_splitting\"}};// Step 2: Send to service\nsetProgressStep('Connecting to section splitting service');setProgressDetails('Analyzing statute structure and identifying section boundaries...');const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(statuteRequest)});// Step 3: Process results\nsetProgressStep('Processing section splitting results');setProgressDetails('Analyzing split sections and organizing data...');if(response.ok){var _result$data,_result$data$sections,_result$data2,_result$data2$section;const result=await response.json();setProgressStep('Section splitting completed successfully!');setProgressDetails(\"Successfully processed \".concat(((_result$data=result.data)===null||_result$data===void 0?void 0:(_result$data$sections=_result$data.sections)===null||_result$data$sections===void 0?void 0:_result$data$sections.length)||0,\" sections\"));// Show success notification with details\nconst sectionsCount=((_result$data2=result.data)===null||_result$data2===void 0?void 0:(_result$data2$section=_result$data2.sections)===null||_result$data2$section===void 0?void 0:_result$data2$section.length)||0;setProcessingStats({processed:sectionsCount,total:sectionsCount,operation:'Section Splitting'});fetchStatus();// Clear progress after delay\nsetTimeout(()=>{setProgressStep('');setProgressDetails('');setProcessingStats(null);},3000);}else{const error=await response.json();throw new Error(error.detail||'Section splitting failed');}}catch(error){setProgressStep('Error during section splitting');const errorMessage=error instanceof Error?error.message:'Failed to start section splitting';setProgressDetails(errorMessage);setOperationError(errorMessage);}finally{setIsProcessing(false);}};// Start field cleaning using modern service endpoint\nconst startFieldCleaning=async()=>{setIsProcessing(true);setOperationError(null);setProgressStep('Initializing field cleaning process...');setProgressDetails('Preparing to clean and validate field data');setProcessingStats(null);try{// Step 1: Prepare cleaning request\nsetProgressStep('Preparing field cleaning request');setProgressDetails(\"Target: \".concat(config.target_collection_prefix,\" collections\"));const statuteRequest={statute_text:\"Field cleaning batches from \".concat(config.target_database),metadata:{target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_size:config.batch_size,enable_ai_cleaning:config.enable_ai_cleaning,processing_type:\"field_cleaning\"}};// Step 2: Execute cleaning\nsetProgressStep('Executing field cleaning operations');setProgressDetails(\"Processing \".concat(config.batch_size,\" records per batch with \").concat(config.enable_ai_cleaning?'AI-enhanced':'standard',\" cleaning...\"));const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(statuteRequest)});// Step 3: Process cleaning results\nsetProgressStep('Processing field cleaning results');setProgressDetails('Validating cleaned data and updating collections...');if(response.ok){var _result$data3,_result$data3$metadat;const result=await response.json();const fieldsProcessed=((_result$data3=result.data)===null||_result$data3===void 0?void 0:(_result$data3$metadat=_result$data3.metadata)===null||_result$data3$metadat===void 0?void 0:_result$data3$metadat.total_fields_cleaned)||0;setProgressStep('Field cleaning completed successfully!');setProgressDetails(\"Successfully cleaned \".concat(fieldsProcessed,\" fields with improved data quality\"));setProcessingStats({processed:fieldsProcessed,total:fieldsProcessed,operation:'Field Cleaning'});fetchStatus();// Clear progress after delay\nsetTimeout(()=>{setProgressStep('');setProgressDetails('');setProcessingStats(null);},3000);}else{const error=await response.json();throw new Error(error.detail||'Field cleaning failed');}}catch(error){setProgressStep('Error during field cleaning');const errorMessage=error instanceof Error?error.message:'Failed to start field cleaning';setProgressDetails(errorMessage);setOperationError(errorMessage);}finally{setIsProcessing(false);}};// Start batch cleaning (using service architecture)\nconst startBatchCleaning=async()=>{setIsProcessing(true);try{const serviceRequest={metadata:{processing_type:\"batch_cleaning\",target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_numbers:cleanAllBatches?null:selectedBatches,clean_all:cleanAllBatches}};const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(serviceRequest)});if(response.ok){const result=await response.json();alert(\"Batch cleaning started successfully!\");fetchStatus();fetchHistory();// Refresh history to show new metadata\n}else{const error=await response.json();alert(\"Error starting batch cleaning: \".concat(error.detail));}}catch(error){console.error('Error starting batch cleaning:',error);alert('Failed to start batch cleaning');}finally{setIsProcessing(false);}};// Start Pakistan Law Validation\nconst startPakistanLawValidation=async()=>{setIsProcessing(true);setValidationResults(null);try{const payload={target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_numbers:cleanAllBatches?null:selectedBatches,clean_all:cleanAllBatches};const url=\"/api/v1/phase3/validate-pakistan-batches?dry_run=\".concat(dryRun);const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(response.ok){const result=await response.json();setValidationResults(result);fetchStatus();fetchHistory();}else{const err=await response.json();alert(\"Error during validation: \".concat(err.message||err.detail));}}catch(error){console.error('Error validating Pakistan law batches:',error);alert('Pakistan law validation failed');}finally{setIsProcessing(false);}};// Preview validation metadata\nconst previewValidationMetadata=async()=>{setIsProcessing(true);try{const payload={target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_numbers:cleanAllBatches?null:selectedBatches,clean_all:cleanAllBatches};const response=await fetch('/api/v1/phase3/preview-validation-metadata',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(response.ok){const result=await response.json();alert(\"Metadata Preview:\\n\\nEstimated Documents: \".concat(result.estimated_documents,\"\\nBatches: \").concat(result.batches_to_process.length,\"\\n\\nMetadata structure generated successfully!\"));}else{const err=await response.json();alert(\"Error previewing metadata: \".concat(err.message||err.detail));}}catch(error){console.error('Error previewing validation metadata:',error);alert('Metadata preview failed');}finally{setIsProcessing(false);}};// Handle batch selection\nconst toggleBatchSelection=batchNumber=>{setSelectedBatches(prev=>prev.includes(batchNumber)?prev.filter(n=>n!==batchNumber):[...prev,batchNumber]);};// Toggle statute expansion\nconst toggleStatuteExpansion=statuteKey=>{setExpandedStatutes(prev=>_objectSpread(_objectSpread({},prev),{},{[statuteKey]:!prev[statuteKey]}));};// Toggle section expansion\nconst toggleSectionExpansion=sectionKey=>{setExpandedSections(prev=>_objectSpread(_objectSpread({},prev),{},{[sectionKey]:!prev[sectionKey]}));};// Rollback Phase 3\nconst rollbackPhase3=async()=>{if(!window.confirm('Are you sure you want to rollback Phase 3? This will delete all created batch collections and databases.')){return;}try{const response=await fetch('/api/v1/phase3/rollback',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const result=await response.json();alert('Phase 3 rollback completed successfully!');fetchStatus();fetchStatistics();}else{const error=await response.json();alert(\"Error rolling back Phase 3: \".concat(error.detail));}}catch(error){console.error('Error rolling back Phase 3:',error);alert('Failed to rollback Phase 3');}};// Load data on mount\nuseEffect(()=>{fetchStatus();fetchStatistics();},[]);// Auto-load batches when Pakistan Law Validation tab is active\nuseEffect(()=>{if(activeTab==='pakistan-law-validation'){fetchAvailableBatches();}},[activeTab]);const tabs=[{id:'overview',name:'Overview',icon:Database},{id:'section-splitting',name:'Section Splitting',icon:Split},{id:'field-cleaning',name:'Field Cleaning',icon:Scissors},{id:'pakistan-law-validation',name:'Pakistan Law Validation',icon:FileText},{id:'preview',name:'Batch Preview',icon:Eye},{id:'statistics',name:'Statistics',icon:Settings},{id:'history',name:'History',icon:History}];// Start Pakistan Law Validation (mirrors batch cleaning, but uses different processing_type)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-2\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900 mb-1\",children:\"Phase 3: Field Cleaning & Splitting\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm\",children:\"Split normalized statutes into batches, then clean each batch using CLI logic\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900\",children:\"Current Configuration\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:resetConfig,className:\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"h-4 w-4 mr-1\"}),\"Reset to Defaults\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Source DB:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.source_database,onChange:e=>updateConfig({source_database:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Source Collection:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.source_collection,onChange:e=>updateConfig({source_collection:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Target DB:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.target_database,onChange:e=>updateConfig({target_database:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Batch Prefix:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.target_collection_prefix,onChange:e=>updateConfig({target_collection_prefix:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Batch Size:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.batch_size,onChange:e=>updateConfig({batch_size:parseInt(e.target.value)||10}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-16\",min:\"1\",max:\"50\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:config.enable_ai_cleaning,onChange:e=>updateConfig({enable_ai_cleaning:e.target.checked}),className:\"mr-2\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"AI-enhanced Cleaning\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Use GPT-based enhancements for field cleaning when enabled.\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 mt-2\",children:/*#__PURE__*/_jsx(\"nav\",{className:\"flex space-x-8 px-4\",\"aria-label\":\"Tabs\",children:tabs.map(tab=>{const Icon=tab.icon;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab(tab.id),className:\"py-3 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 \".concat(activeTab===tab.id?'border-purple-500 text-purple-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(Icon,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(\"span\",{children:tab.name})]},tab.id);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-2\",children:[activeTab==='overview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-blue-900 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(Split,{className:\"h-5 w-5 mr-2\"}),\"Section Splitting\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-700 text-sm mb-3\",children:[\"Split normalized statutes from \",config.source_database,\".\",config.source_collection,\" into \",config.batch_size,\" batches in \",config.target_database,\".\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:startSectionSplitting,disabled:isProcessing,className:\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader2,{className:\"w-4 h-4 mr-2 inline animate-spin\"}),progressStep||'Processing...']}):'Start Section Splitting'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-green-900 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(Scissors,{className:\"h-5 w-5 mr-2\"}),\"Field Cleaning\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 text-sm mb-3\",children:\"Clean each batch using CLI logic: drop unnecessary fields, bring common fields up, handle single sections, remove duplicates, and sort sections.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startFieldCleaning,disabled:isProcessing,className:\"w-full bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader2,{className:\"w-4 h-4 mr-2 inline animate-spin\"}),progressStep||'Processing...']}):'Start Field Cleaning'})]})]}),isProcessing&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Processing Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Loader2,{className:\"w-5 h-5 text-blue-600 animate-spin mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-blue-700\",children:\"In Progress\"})]})]}),progressStep&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-base font-medium text-gray-800 mb-1\",children:progressStep}),progressDetails&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:progressDetails})]}),processingStats&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-4 border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:processingStats.operation}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[processingStats.processed.toLocaleString(),\" processed\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-purple-600 h-3 rounded-full transition-all duration-500 ease-out\",style:{width:\"\".concat(processingStats.processed/processingStats.total*100,\"%\")}})})]})]}),operationError&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 rounded-lg p-6 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-5 h-5 text-red-600 mr-3 mt-0.5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-base font-medium text-red-900 mb-2\",children:\"Operation Failed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-red-800 mb-3\",children:operationError}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-red-600\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Troubleshooting Steps:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mt-2 ml-4 list-disc space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Verify database connection is active\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Check that source collections contain data\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Ensure sufficient permissions for target database\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Review configuration settings for accuracy\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Try refreshing the page and attempting the operation again\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationError(null),className:\"mt-3 text-sm text-red-600 hover:text-red-800 underline\",children:\"Dismiss error\"})]})]})}),status&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-3\",children:\"Current Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:(_status$collection_st=status.collection_status)!==null&&_status$collection_st!==void 0&&_status$collection_st.source_exists?'✅':'❌'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Source Collection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[config.source_database,\".\",config.source_collection]}),((_status$collection_st2=status.collection_status)===null||_status$collection_st2===void 0?void 0:_status$collection_st2.source_count)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[status.collection_status.source_count,\" documents\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:(_status$collection_st3=status.collection_status)!==null&&_status$collection_st3!==void 0&&_status$collection_st3.target_database_exists?'✅':'❌'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Target Database\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:config.target_database})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-purple-600\",children:((_status$collection_st4=status.collection_status)===null||_status$collection_st4===void 0?void 0:_status$collection_st4.batch_count)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Batch Collections\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[config.target_collection_prefix,\"1, \",config.target_collection_prefix,\"2, ...\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-red-900 mb-2\",children:\"Rollback\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700 text-sm mb-3\",children:\"Rollback Phase 3 changes and restore previous state if needed.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:rollbackPhase3,className:\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\",children:\"Rollback Phase 3\"})]})]}),activeTab==='section-splitting'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Section Splitting Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-900 mb-2\",children:\"Section Splitting Process\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-blue-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Read all documents from \",config.source_database,\".\",config.source_collection]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Split into \",config.batch_size,\" equal batches\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Create collections: \",config.target_collection_prefix,\"1, \",config.target_collection_prefix,\"2, ...\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Distribute statutes across batches\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Maintain section structure and metadata\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startSectionSplitting,disabled:isProcessing,className:\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':'Start Section Splitting'}),/*#__PURE__*/_jsx(\"button\",{onClick:generateMetadata,className:\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\",children:\"Generate Metadata\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatus,className:\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\",children:\"Refresh Status\"})]})]}),activeTab==='field-cleaning'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Field Cleaning Configuration\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchAvailableBatches,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Available Batches\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-green-900 mb-2\",children:\"Field Cleaning Process (per batch)\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-green-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Drop unnecessary fields:\"}),\" Keep only essential fields for processing\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Bring common fields up:\"}),\" Move fields common across all sections to statute level\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Clean single-section statutes:\"}),\" Handle single-section statutes specially\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Remove preamble duplicates:\"}),\" Remove duplicate preamble sections\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Sort sections:\"}),\" Preamble first, then numeric, then text\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Validate Pakistan law:\"}),\" Drop non-Pakistan laws using CLI logic\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-3\",children:\"Cleaning Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"cleaningMode\",checked:cleanAllBatches,onChange:()=>setCleanAllBatches(true),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Clean All Batches\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"cleaningMode\",checked:!cleanAllBatches,onChange:()=>setCleanAllBatches(false),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Clean Selected Batches\"})]})]}),!cleanAllBatches&&availableBatches&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-700 mb-2\",children:\"Select Batches to Clean:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\",children:availableBatches.batches.map(batch=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedBatches.includes(batch.batch_number),onChange:()=>toggleBatchSelection(batch.batch_number),className:\"rounded\"}),/*#__PURE__*/_jsxs(\"span\",{className:batch.is_cleaned?\"text-green-600\":\"text-gray-700\",children:[batch.batch_name,\" (\",batch.document_count,\" docs)\",batch.is_cleaned&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:\" \\u2713\"})]})]},batch.batch_number))}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-2\",children:[\"Selected: \",selectedBatches.length,\" batches. Green items are already cleaned.\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startBatchCleaning,disabled:isProcessing||!cleanAllBatches&&selectedBatches.length===0,className:\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':cleanAllBatches?'Clean All Batches':\"Clean \".concat(selectedBatches.length,\" Selected Batches\")}),/*#__PURE__*/_jsx(\"button\",{onClick:generateMetadata,className:\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\",children:\"Generate Metadata\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatus,className:\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\",children:\"Refresh Status\"})]})]}),activeTab==='pakistan-law-validation'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center mr-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:dryRun,onChange:e=>setDryRun(e.target.checked),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Dry Run (Preview Only)\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:\"Preview which statutes will be dropped before actual deletion.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center mr-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:true,className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-sm\",children:\"Generate Metadata\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:\"Save validation statistics and analysis.\"})]})]}),validationResults&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Validation Results\"}),validationResults.metadata_file&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded\",children:[\"\\uD83D\\uDCC1 Metadata: \",validationResults.metadata_file]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 text-sm\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Scanned:\"}),\" \",validationResults.total_scanned,\" \\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Dropped:\"}),\" \",validationResults.total_dropped,\" \\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Kept:\"}),\" \",validationResults.total_kept,\" \\xA0\",/*#__PURE__*/_jsx(\"strong\",{children:\"Batches:\"}),\" \",validationResults.processed_batches]}),validationResults.metadata&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 text-xs bg-white p-2 rounded border\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Drop Analysis:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 mt-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Drop Rate: \",(_validationResults$me=validationResults.metadata.validation_results)===null||_validationResults$me===void 0?void 0:(_validationResults$me2=_validationResults$me.drop_rate)===null||_validationResults$me2===void 0?void 0:_validationResults$me2.toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Keep Rate: \",(_validationResults$me3=validationResults.metadata.validation_results)===null||_validationResults$me3===void 0?void 0:(_validationResults$me4=_validationResults$me3.keep_rate)===null||_validationResults$me4===void 0?void 0:_validationResults$me4.toFixed(1),\"%\"]})]}),((_validationResults$me5=validationResults.metadata.drop_reason_analysis)===null||_validationResults$me5===void 0?void 0:_validationResults$me5.top_drop_reasons)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Top Reasons:\"}),\" \",validationResults.metadata.drop_reason_analysis.top_drop_reasons.map(_ref=>{let[reason,count]=_ref;return\"\".concat(reason,\" (\").concat(count,\")\");}).join(', ')]})]}),validationResults.dropped_docs.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dropped Statutes:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc ml-6 text-xs\",children:validationResults.dropped_docs.map((doc,idx)=>/*#__PURE__*/_jsxs(\"li\",{children:[doc.name,/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-600\",children:[\" (\",doc.reason,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500\",children:[\" [\",doc.batch,\"]\"]})]},doc.name+idx))})]}),validationResults.kept_docs.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Kept Statutes:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc ml-6 text-xs\",children:validationResults.kept_docs.map((doc,idx)=>/*#__PURE__*/_jsxs(\"li\",{children:[doc.name,/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600\",children:\" [Kept]\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500\",children:[\" [\",doc.batch,\"]\"]})]},doc.name+idx))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:validationResults.dry_run?\"No changes made (preview only)\":\"Non-Pakistan statutes have been dropped.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Pakistan Law Validation Configuration\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchAvailableBatches,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Available Batches\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"text-yellow-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Drop non-Pakistan laws using CLI logic\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Validate all or selected batches\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:cleanAllBatches,onChange:()=>setCleanAllBatches(true),className:\"mr-2\"}),\"Validate All\"]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:!cleanAllBatches,onChange:()=>setCleanAllBatches(false),className:\"mr-2\"}),\"Validate Selected\"]})]}),availableBatches===null&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-500\",children:\"Click \\\"Load Available Batches\\\" to load batches for validation\"}),!cleanAllBatches&&availableBatches&&availableBatches.batches.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\",children:availableBatches.batches.map(b=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedBatches.includes(b.batch_number),onChange:()=>toggleBatchSelection(b.batch_number),className:\"rounded\"}),/*#__PURE__*/_jsxs(\"span\",{className:b.is_cleaned?'text-green-600':'text-gray-700',children:[b.batch_name,\" (\",b.document_count,\")\"]})]},b.batch_number))})]}),availableBatches&&availableBatches.batches.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-500\",children:\"No batch collections found. Run section splitting first to create batches.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startPakistanLawValidation,disabled:isProcessing||!cleanAllBatches&&selectedBatches.length===0,className:\"bg-yellow-600 text-white px-6 py-2 rounded-md hover:bg-yellow-700 disabled:opacity-50\",children:isProcessing?'Processing...':cleanAllBatches?'Validate All':'Validate Selected'}),/*#__PURE__*/_jsx(\"button\",{onClick:previewValidationMetadata,disabled:isProcessing||!cleanAllBatches&&selectedBatches.length===0,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50\",children:\"Preview Metadata\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatus,className:\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\",children:\"Refresh Status\"})]})]}),activeTab==='preview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Batch Preview\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchBatchPreview,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Batch Preview\"})]}),batchPreview?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:batchPreview.batches.length>0?batchPreview.batches.map((batch,index)=>{var _batch$sample_documen;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-2\",children:batch.batch_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Documents:\"}),\" \",batch.document_count]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Sample Documents:\"}),\" \",((_batch$sample_documen=batch.sample_documents)===null||_batch$sample_documen===void 0?void 0:_batch$sample_documen.length)||0]})]}),batch.sample_documents&&batch.sample_documents.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mb-2\",children:\"Sample Documents (click to expand):\"}),batch.sample_documents.map((doc,docIndex)=>{var _doc$Sections;const statuteKey=\"\".concat(batch.batch_name,\"-\").concat(docIndex);const isStatuteExpanded=expandedStatutes[statuteKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 cursor-pointer hover:bg-gray-50 flex items-center justify-between\",onClick:()=>toggleStatuteExpansion(statuteKey),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm text-gray-900\",children:doc.Statute_Name||'N/A'}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[((_doc$Sections=doc.Sections)===null||_doc$Sections===void 0?void 0:_doc$Sections.length)||0,\" sections \\u2022 Province: \",doc.Province||'N/A']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400\",children:isStatuteExpanded?'▼':'▶'})]}),isStatuteExpanded&&doc.section_details&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-100\",children:doc.section_details.map((section,sectionIndex)=>{const sectionKey=\"\".concat(statuteKey,\"-section-\").concat(sectionIndex);const isSectionExpanded=expandedSections[sectionKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-50 last:border-b-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 pl-6 cursor-pointer hover:bg-gray-25 flex items-center justify-between\",onClick:()=>toggleSectionExpansion(sectionKey),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm text-blue-900\",children:section.section_title}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:section.content_preview})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400 text-sm\",children:isSectionExpanded?'▼':'▶'})]}),isSectionExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 pl-8 bg-gray-50 border-t border-gray-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-800 whitespace-pre-wrap\",children:section.content||'No content available'})})]},sectionIndex);})}),isStatuteExpanded&&!doc.section_details&&doc.Sections&&/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-100 p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mb-2\",children:\"Basic Section Info:\"}),doc.Sections.map((section,sectionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-700 mb-1\",children:[\"\\u2022 \",section.Section||\"Section \".concat(sectionIndex+1)]},sectionIndex))]})]},docIndex);})]})]},index);}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Layers,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No batch collections found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Run section splitting first to create batches\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Eye,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click \\\"Load Batch Preview\\\" to see batch collections\"})]})]}),activeTab==='statistics'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Processing Statistics\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatistics,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Statistics\"})]}),statistics?/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:((_statistics$statistic=statistics.statistics)===null||_statistics$statistic===void 0?void 0:(_statistics$statistic2=_statistics$statistic.source_collection)===null||_statistics$statistic2===void 0?void 0:_statistics$statistic2.count)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-blue-600\",children:\"Source Documents\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-500\",children:(_statistics$statistic3=statistics.statistics)===null||_statistics$statistic3===void 0?void 0:(_statistics$statistic4=_statistics$statistic3.source_collection)===null||_statistics$statistic4===void 0?void 0:_statistics$statistic4.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:(_statistics$statistic5=statistics.statistics)!==null&&_statistics$statistic5!==void 0&&(_statistics$statistic6=_statistics$statistic5.source_collection)!==null&&_statistics$statistic6!==void 0&&_statistics$statistic6.exists?'✅ Exists':'❌ Missing'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:((_statistics$statistic7=statistics.statistics)===null||_statistics$statistic7===void 0?void 0:(_statistics$statistic8=_statistics$statistic7.target_database)===null||_statistics$statistic8===void 0?void 0:(_statistics$statistic9=_statistics$statistic8.batch_collections)===null||_statistics$statistic9===void 0?void 0:_statistics$statistic9.length)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-600\",children:\"Batch Collections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-500\",children:(_statistics$statistic0=statistics.statistics)===null||_statistics$statistic0===void 0?void 0:(_statistics$statistic1=_statistics$statistic0.target_database)===null||_statistics$statistic1===void 0?void 0:_statistics$statistic1.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:(_statistics$statistic10=statistics.statistics)!==null&&_statistics$statistic10!==void 0&&(_statistics$statistic11=_statistics$statistic10.target_database)!==null&&_statistics$statistic11!==void 0&&_statistics$statistic11.exists?'✅ Exists':'❌ Missing'})]}),((_statistics$statistic12=statistics.statistics)===null||_statistics$statistic12===void 0?void 0:(_statistics$statistic13=_statistics$statistic12.target_database)===null||_statistics$statistic13===void 0?void 0:_statistics$statistic13.batch_collections)&&/*#__PURE__*/_jsxs(\"div\",{className:\"md:col-span-2 bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-purple-900 mb-2\",children:\"Batch Collections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\",children:statistics.statistics.target_database.batch_collections.map((batch,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-2 rounded text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:batch})},index))})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Settings,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No statistics available\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatistics,className:\"mt-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Statistics\"})]})]}),activeTab==='history'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Processing History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchHistory,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Refresh History\"})]}),history?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:history.history.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Operation\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Database\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Collection\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Processed\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:history.history.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(item.operation_type==='split'?'bg-blue-100 text-blue-800':'bg-green-100 text-green-800'),children:item.operation_type==='split'?'Section Splitting':'Field Cleaning'})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:item.database}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:item.collection}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:new Date(item.created_at).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:[item.total_processed,\" items\"]}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.open(\"/api/v1/phase3/history/\".concat(item.filename),'_blank'),className:\"text-indigo-600 hover:text-indigo-900\",children:\"View Details\"})})]},index))})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(History,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No processing history found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Run section splitting or field cleaning to generate history\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(History,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click \\\"Refresh History\\\" to load processing history\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Section splitting creates batch collections\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Field cleaning processes each batch individually\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 All operations are logged with timestamps\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Metadata files contain detailed statistics\"})]})]})]})]})]});};export default Phase3;","map":{"version":3,"names":["React","useState","useEffect","Scissors","Database","FileText","Settings","History","Eye","RotateCcw","Split","Layers","Loader2","AlertCircle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DEFAULT_CONFIG","source_database","source_collection","target_database","target_collection_prefix","batch_size","enable_ai_cleaning","Phase3","_status$collection_st","_status$collection_st2","_status$collection_st3","_status$collection_st4","_validationResults$me","_validationResults$me2","_validationResults$me3","_validationResults$me4","_validationResults$me5","_statistics$statistic","_statistics$statistic2","_statistics$statistic3","_statistics$statistic4","_statistics$statistic5","_statistics$statistic6","_statistics$statistic7","_statistics$statistic8","_statistics$statistic9","_statistics$statistic0","_statistics$statistic1","_statistics$statistic10","_statistics$statistic11","_statistics$statistic12","_statistics$statistic13","activeTab","setActiveTab","config","setConfig","isProcessing","setIsProcessing","status","setStatus","statistics","setStatistics","batchPreview","setBatchPreview","progressStep","setProgressStep","progressDetails","setProgressDetails","processingStats","setProcessingStats","operationError","setOperationError","history","setHistory","availableBatches","setAvailableBatches","selectedBatches","setSelectedBatches","cleanAllBatches","setCleanAllBatches","dryRun","setDryRun","validationResults","setValidationResults","expandedStatutes","setExpandedStatutes","expandedSections","setExpandedSections","savedConfig","localStorage","getItem","JSON","parse","error","console","setItem","stringify","updateConfig","updates","prev","_objectSpread","resetConfig","fetchStatus","response","fetch","ok","data","json","fetchStatistics","method","headers","body","fetchBatchPreview","fetchHistory","fetchAvailableBatches","generateMetadata","result","alert","concat","metadata_file","detail","startSectionSplitting","statuteRequest","statute_text","metadata","processing_type","_result$data","_result$data$sections","_result$data2","_result$data2$section","sections","length","sectionsCount","processed","total","operation","setTimeout","Error","errorMessage","message","startFieldCleaning","_result$data3","_result$data3$metadat","fieldsProcessed","total_fields_cleaned","startBatchCleaning","serviceRequest","batch_numbers","clean_all","startPakistanLawValidation","payload","url","err","previewValidationMetadata","estimated_documents","batches_to_process","toggleBatchSelection","batchNumber","includes","filter","n","toggleStatuteExpansion","statuteKey","toggleSectionExpansion","sectionKey","rollbackPhase3","window","confirm","tabs","id","name","icon","className","children","onClick","type","value","onChange","e","target","parseInt","min","max","checked","map","tab","Icon","disabled","toLocaleString","style","width","collection_status","source_exists","source_count","target_database_exists","batch_count","batches","batch","batch_number","is_cleaned","batch_name","document_count","total_scanned","total_dropped","total_kept","processed_batches","validation_results","drop_rate","toFixed","keep_rate","drop_reason_analysis","top_drop_reasons","_ref","reason","count","join","dropped_docs","doc","idx","kept_docs","dry_run","b","index","_batch$sample_documen","sample_documents","docIndex","_doc$Sections","isStatuteExpanded","Statute_Name","Sections","Province","section_details","section","sectionIndex","isSectionExpanded","section_title","content_preview","content","Section","exists","batch_collections","item","operation_type","database","collection","Date","created_at","toLocaleDateString","total_processed","open","filename"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/pages/Phase3.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Scissors, Database, FileText, Settings, History, Eye, Play, RotateCcw, Split, Layers, Loader2, AlertCircle } from 'lucide-react';\r\n\r\n// Configuration interface - updated to match CLI flow\r\ninterface Phase3Config {\r\n  source_database: string;\r\n  source_collection: string;\r\n  target_database: string;\r\n  target_collection_prefix: string;\r\n  batch_size: number;\r\n  enable_ai_cleaning: boolean;\r\n}\r\n\r\n// Default configuration - matches CLI scripts\r\nconst DEFAULT_CONFIG: Phase3Config = {\r\n  source_database: \"Statutes\",\r\n  source_collection: \"normalized_statutes\",\r\n  target_database: \"Batched-Statutes\",\r\n  target_collection_prefix: \"batch_\",\r\n  batch_size: 10,\r\n  enable_ai_cleaning: false\r\n};\r\n\r\nconst Phase3: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [config, setConfig] = useState<Phase3Config>(DEFAULT_CONFIG);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [status, setStatus] = useState<any>(null);\r\n  const [statistics, setStatistics] = useState<any>(null);\r\n  const [batchPreview, setBatchPreview] = useState<any>(null);\r\n  const [progressStep, setProgressStep] = useState<string>('');\r\n  const [progressDetails, setProgressDetails] = useState<string>('');\r\n  const [processingStats, setProcessingStats] = useState<{processed: number, total: number, operation: string} | null>(null);\r\n  const [operationError, setOperationError] = useState<string | null>(null);\r\n  const [history, setHistory] = useState<any>(null);\r\n  const [availableBatches, setAvailableBatches] = useState<any>(null);\r\n  const [selectedBatches, setSelectedBatches] = useState<number[]>([]);\r\n  const [cleanAllBatches, setCleanAllBatches] = useState(true);\r\n  const [dryRun, setDryRun] = useState(true);\r\n  const [validationResults, setValidationResults] = useState<any>(null);\r\n  const [expandedStatutes, setExpandedStatutes] = useState<{[key: string]: boolean}>({});\r\n  const [expandedSections, setExpandedSections] = useState<{[key: string]: boolean}>({});\r\n\r\n  // Load config from localStorage on mount\r\n  useEffect(() => {\r\n    const savedConfig = localStorage.getItem('phase3_config');\r\n    if (savedConfig) {\r\n      try {\r\n        setConfig(JSON.parse(savedConfig));\r\n      } catch (error) {\r\n        console.error('Error loading Phase 3 config:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save config to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('phase3_config', JSON.stringify(config));\r\n  }, [config]);\r\n\r\n  // Update configuration\r\n  const updateConfig = (updates: Partial<Phase3Config>) => {\r\n    setConfig(prev => ({ ...prev, ...updates }));\r\n  };\r\n\r\n  // Reset configuration to defaults\r\n  const resetConfig = () => {\r\n    setConfig(DEFAULT_CONFIG);\r\n  };\r\n\r\n  // Fetch Phase 3 status\r\n  const fetchStatus = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/status');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStatus(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Phase 3 status:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch statistics\r\n  const fetchStatistics = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/statistics', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStatistics(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Phase 3 statistics:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch batch preview\r\n  const fetchBatchPreview = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/preview-batches', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setBatchPreview(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching batch preview:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch history\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/history');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setHistory(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch available batches for cleaning\r\n  const fetchAvailableBatches = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/available-batches', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAvailableBatches(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching available batches:', error);\r\n    }\r\n  };\r\n\r\n  // Generate metadata\r\n  const generateMetadata = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/generate-metadata', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Metadata generated successfully! File: ${result.metadata_file}`);\r\n        fetchHistory();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error generating metadata: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating metadata:', error);\r\n      alert('Failed to generate metadata');\r\n    }\r\n  };\r\n\r\n  // Start section splitting using modern service endpoint\r\n  const startSectionSplitting = async () => {\r\n    setIsProcessing(true);\r\n    setOperationError(null);\r\n    setProgressStep('Initializing section splitting process...');\r\n    setProgressDetails('Preparing to analyze and split statute sections');\r\n    setProcessingStats(null);\r\n    \r\n    try {\r\n      // Step 1: Prepare request\r\n      setProgressStep('Preparing section splitting request');\r\n      setProgressDetails(`Source: ${config.source_collection} → Target: ${config.target_collection_prefix}_sections`);\r\n      \r\n      const statuteRequest = {\r\n        statute_text: `Processing batches from ${config.source_collection}`,\r\n        metadata: {\r\n          source_database: config.source_database,\r\n          source_collection: config.source_collection,\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_size: config.batch_size,\r\n          processing_type: \"section_splitting\"\r\n        }\r\n      };\r\n\r\n      // Step 2: Send to service\r\n      setProgressStep('Connecting to section splitting service');\r\n      setProgressDetails('Analyzing statute structure and identifying section boundaries...');\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(statuteRequest)\r\n      });\r\n      \r\n      // Step 3: Process results\r\n      setProgressStep('Processing section splitting results');\r\n      setProgressDetails('Analyzing split sections and organizing data...');\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setProgressStep('Section splitting completed successfully!');\r\n        setProgressDetails(`Successfully processed ${result.data?.sections?.length || 0} sections`);\r\n        \r\n        // Show success notification with details\r\n        const sectionsCount = result.data?.sections?.length || 0;\r\n        setProcessingStats({\r\n          processed: sectionsCount,\r\n          total: sectionsCount,\r\n          operation: 'Section Splitting'\r\n        });\r\n        \r\n        fetchStatus();\r\n        \r\n        // Clear progress after delay\r\n        setTimeout(() => {\r\n          setProgressStep('');\r\n          setProgressDetails('');\r\n          setProcessingStats(null);\r\n        }, 3000);\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.detail || 'Section splitting failed');\r\n      }\r\n    } catch (error) {\r\n      setProgressStep('Error during section splitting');\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to start section splitting';\r\n      setProgressDetails(errorMessage);\r\n      setOperationError(errorMessage);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Start field cleaning using modern service endpoint\r\n  const startFieldCleaning = async () => {\r\n    setIsProcessing(true);\r\n    setOperationError(null);\r\n    setProgressStep('Initializing field cleaning process...');\r\n    setProgressDetails('Preparing to clean and validate field data');\r\n    setProcessingStats(null);\r\n    \r\n    try {\r\n      // Step 1: Prepare cleaning request\r\n      setProgressStep('Preparing field cleaning request');\r\n      setProgressDetails(`Target: ${config.target_collection_prefix} collections`);\r\n      \r\n      const statuteRequest = {\r\n        statute_text: `Field cleaning batches from ${config.target_database}`,\r\n        metadata: {\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_size: config.batch_size,\r\n          enable_ai_cleaning: config.enable_ai_cleaning,\r\n          processing_type: \"field_cleaning\"\r\n        }\r\n      };\r\n\r\n      // Step 2: Execute cleaning\r\n      setProgressStep('Executing field cleaning operations');\r\n      setProgressDetails(`Processing ${config.batch_size} records per batch with ${config.enable_ai_cleaning ? 'AI-enhanced' : 'standard'} cleaning...`);\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(statuteRequest)\r\n      });\r\n      \r\n      // Step 3: Process cleaning results\r\n      setProgressStep('Processing field cleaning results');\r\n      setProgressDetails('Validating cleaned data and updating collections...');\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        const fieldsProcessed = result.data?.metadata?.total_fields_cleaned || 0;\r\n        \r\n        setProgressStep('Field cleaning completed successfully!');\r\n        setProgressDetails(`Successfully cleaned ${fieldsProcessed} fields with improved data quality`);\r\n        \r\n        setProcessingStats({\r\n          processed: fieldsProcessed,\r\n          total: fieldsProcessed,\r\n          operation: 'Field Cleaning'\r\n        });\r\n        \r\n        fetchStatus();\r\n        \r\n        // Clear progress after delay\r\n        setTimeout(() => {\r\n          setProgressStep('');\r\n          setProgressDetails('');\r\n          setProcessingStats(null);\r\n        }, 3000);\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.detail || 'Field cleaning failed');\r\n      }\r\n    } catch (error) {\r\n      setProgressStep('Error during field cleaning');\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to start field cleaning';\r\n      setProgressDetails(errorMessage);\r\n      setOperationError(errorMessage);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Start batch cleaning (using service architecture)\r\n  const startBatchCleaning = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      const serviceRequest = {\r\n        metadata: {\r\n          processing_type: \"batch_cleaning\",\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_numbers: cleanAllBatches ? null : selectedBatches,\r\n          clean_all: cleanAllBatches\r\n        }\r\n      };\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(serviceRequest)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Batch cleaning started successfully!`);\r\n        fetchStatus();\r\n        fetchHistory(); // Refresh history to show new metadata\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error starting batch cleaning: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting batch cleaning:', error);\r\n      alert('Failed to start batch cleaning');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n  // Start Pakistan Law Validation\r\n  const startPakistanLawValidation = async () => {\r\n    setIsProcessing(true);\r\n    setValidationResults(null);\r\n    try {\r\n      const payload = {\r\n        target_database: config.target_database,\r\n        target_collection_prefix: config.target_collection_prefix,\r\n        batch_numbers: cleanAllBatches ? null : selectedBatches,\r\n        clean_all: cleanAllBatches\r\n      };\r\n      const url = `/api/v1/phase3/validate-pakistan-batches?dry_run=${dryRun}`;\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setValidationResults(result);\r\n        fetchStatus();\r\n        fetchHistory();\r\n      } else {\r\n        const err = await response.json();\r\n        alert(`Error during validation: ${err.message || err.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error validating Pakistan law batches:', error);\r\n      alert('Pakistan law validation failed');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Preview validation metadata\r\n  const previewValidationMetadata = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      const payload = {\r\n        target_database: config.target_database,\r\n        target_collection_prefix: config.target_collection_prefix,\r\n        batch_numbers: cleanAllBatches ? null : selectedBatches,\r\n        clean_all: cleanAllBatches\r\n      };\r\n      const response = await fetch('/api/v1/phase3/preview-validation-metadata', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Metadata Preview:\\n\\nEstimated Documents: ${result.estimated_documents}\\nBatches: ${result.batches_to_process.length}\\n\\nMetadata structure generated successfully!`);\r\n      } else {\r\n        const err = await response.json();\r\n        alert(`Error previewing metadata: ${err.message || err.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error previewing validation metadata:', error);\r\n      alert('Metadata preview failed');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle batch selection\r\n  const toggleBatchSelection = (batchNumber: number) => {\r\n    setSelectedBatches(prev => \r\n      prev.includes(batchNumber) \r\n        ? prev.filter(n => n !== batchNumber)\r\n        : [...prev, batchNumber]\r\n    );\r\n  };\r\n\r\n  // Toggle statute expansion\r\n  const toggleStatuteExpansion = (statuteKey: string) => {\r\n    setExpandedStatutes(prev => ({\r\n      ...prev,\r\n      [statuteKey]: !prev[statuteKey]\r\n    }));\r\n  };\r\n\r\n  // Toggle section expansion\r\n  const toggleSectionExpansion = (sectionKey: string) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [sectionKey]: !prev[sectionKey]\r\n    }));\r\n  };\r\n\r\n  // Rollback Phase 3\r\n  const rollbackPhase3 = async () => {\r\n    if (!window.confirm('Are you sure you want to rollback Phase 3? This will delete all created batch collections and databases.')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/rollback', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert('Phase 3 rollback completed successfully!');\r\n        fetchStatus();\r\n        fetchStatistics();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error rolling back Phase 3: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error rolling back Phase 3:', error);\r\n      alert('Failed to rollback Phase 3');\r\n    }\r\n  };\r\n\r\n  // Load data on mount\r\n  useEffect(() => {\r\n    fetchStatus();\r\n    fetchStatistics();\r\n  }, []);\r\n  // Auto-load batches when Pakistan Law Validation tab is active\r\n  useEffect(() => {\r\n    if (activeTab === 'pakistan-law-validation') {\r\n      fetchAvailableBatches();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  const tabs = [\r\n    { id: 'overview', name: 'Overview', icon: Database },\r\n    { id: 'section-splitting', name: 'Section Splitting', icon: Split },\r\n    { id: 'field-cleaning', name: 'Field Cleaning', icon: Scissors },\r\n    { id: 'pakistan-law-validation', name: 'Pakistan Law Validation', icon: FileText },\r\n    { id: 'preview', name: 'Batch Preview', icon: Eye },\r\n    { id: 'statistics', name: 'Statistics', icon: Settings },\r\n    { id: 'history', name: 'History', icon: History }\r\n  ];\r\n  // Start Pakistan Law Validation (mirrors batch cleaning, but uses different processing_type)\r\n\r\n  return (\r\n    <div className=\"space-y-0\">\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2\">\r\n        <h1 className=\"text-xl font-bold text-gray-900 mb-1\">\r\n          Phase 3: Field Cleaning & Splitting\r\n        </h1>\r\n        <p className=\"text-gray-600 text-sm\">\r\n          Split normalized statutes into batches, then clean each batch using CLI logic\r\n        </p>\r\n      </div>\r\n\r\n      {/* Current Configuration */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 mt-2\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Current Configuration</h2>\r\n          <button\r\n            onClick={resetConfig}\r\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            <RotateCcw className=\"h-4 w-4 mr-1\" />\r\n            Reset to Defaults\r\n          </button>\r\n        </div>\r\n  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\">\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Source DB:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.source_database}\r\n              onChange={(e) => updateConfig({ source_database: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Source Collection:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.source_collection}\r\n              onChange={(e) => updateConfig({ source_collection: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Target DB:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.target_database}\r\n              onChange={(e) => updateConfig({ target_database: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Batch Prefix:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.target_collection_prefix}\r\n              onChange={(e) => updateConfig({ target_collection_prefix: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Batch Size:</span>\r\n            <input\r\n              type=\"number\"\r\n              value={config.batch_size}\r\n              onChange={(e) => updateConfig({ batch_size: parseInt(e.target.value) || 10 })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-16\"\r\n              min=\"1\"\r\n              max=\"50\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={config.enable_ai_cleaning}\r\n              onChange={(e) => updateConfig({ enable_ai_cleaning: e.target.checked })}\r\n              className=\"mr-2\"\r\n            />\r\n            <div>\r\n              <span className=\"font-medium text-gray-700\">AI-enhanced Cleaning</span>\r\n              <p className=\"text-xs text-gray-500\">\r\n                Use GPT-based enhancements for field cleaning when enabled.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 mt-2\">\r\n        <nav className=\"flex space-x-8 px-4\" aria-label=\"Tabs\">\r\n          {tabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`py-3 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\r\n                  activeTab === tab.id\r\n                    ? 'border-purple-500 text-purple-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"h-4 w-4\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-2\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-2 flex items-center\">\r\n                  <Split className=\"h-5 w-5 mr-2\" />\r\n                  Section Splitting\r\n                </h3>\r\n                <p className=\"text-blue-700 text-sm mb-3\">\r\n                  Split normalized statutes from {config.source_database}.{config.source_collection} into {config.batch_size} batches in {config.target_database}.\r\n                </p>\r\n                <button\r\n                  onClick={startSectionSplitting}\r\n                  disabled={isProcessing}\r\n                  className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isProcessing ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 mr-2 inline animate-spin\" />\r\n                      {progressStep || 'Processing...'}\r\n                    </>\r\n                  ) : (\r\n                    'Start Section Splitting'\r\n                  )}\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-green-900 mb-2 flex items-center\">\r\n                  <Scissors className=\"h-5 w-5 mr-2\" />\r\n                  Field Cleaning\r\n                </h3>\r\n                <p className=\"text-green-700 text-sm mb-3\">\r\n                  Clean each batch using CLI logic: drop unnecessary fields, bring common fields up, handle single sections, remove duplicates, and sort sections.\r\n                </p>\r\n                <button\r\n                  onClick={startFieldCleaning}\r\n                  disabled={isProcessing}\r\n                  className=\"w-full bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isProcessing ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 mr-2 inline animate-spin\" />\r\n                      {progressStep || 'Processing...'}\r\n                    </>\r\n                  ) : (\r\n                    'Start Field Cleaning'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Enhanced Processing Progress Display */}\r\n            {isProcessing && (\r\n              <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-6 mb-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Processing Status</h3>\r\n                  <div className=\"flex items-center\">\r\n                    <Loader2 className=\"w-5 h-5 text-blue-600 animate-spin mr-2\" />\r\n                    <span className=\"text-sm font-medium text-blue-700\">In Progress</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {progressStep && (\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"text-base font-medium text-gray-800 mb-1\">\r\n                      {progressStep}\r\n                    </div>\r\n                    {progressDetails && (\r\n                      <div className=\"text-sm text-gray-600\">\r\n                        {progressDetails}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                {processingStats && (\r\n                  <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n                    <div className=\"flex justify-between items-center mb-2\">\r\n                      <span className=\"text-sm font-medium text-gray-700\">{processingStats.operation}</span>\r\n                      <span className=\"text-sm text-gray-600\">\r\n                        {processingStats.processed.toLocaleString()} processed\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-3\">\r\n                      <div \r\n                        className=\"bg-gradient-to-r from-blue-500 to-purple-600 h-3 rounded-full transition-all duration-500 ease-out\" \r\n                        style={{ width: `${(processingStats.processed / processingStats.total) * 100}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Enhanced Error Display */}\r\n            {operationError && (\r\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 mb-6\">\r\n                <div className=\"flex items-start\">\r\n                  <AlertCircle className=\"w-5 h-5 text-red-600 mr-3 mt-0.5\" />\r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"text-base font-medium text-red-900 mb-2\">Operation Failed</h3>\r\n                    <div className=\"text-sm text-red-800 mb-3\">{operationError}</div>\r\n                    <div className=\"text-xs text-red-600\">\r\n                      <strong>Troubleshooting Steps:</strong>\r\n                      <ul className=\"mt-2 ml-4 list-disc space-y-1\">\r\n                        <li>Verify database connection is active</li>\r\n                        <li>Check that source collections contain data</li>\r\n                        <li>Ensure sufficient permissions for target database</li>\r\n                        <li>Review configuration settings for accuracy</li>\r\n                        <li>Try refreshing the page and attempting the operation again</li>\r\n                      </ul>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => setOperationError(null)}\r\n                      className=\"mt-3 text-sm text-red-600 hover:text-red-800 underline\"\r\n                    >\r\n                      Dismiss error\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Status Overview */}\r\n            {status && (\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Current Status</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {status.collection_status?.source_exists ? '✅' : '❌'}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Source Collection</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.source_database}.{config.source_collection}</div>\r\n                    {status.collection_status?.source_count > 0 && (\r\n                      <div className=\"text-xs text-gray-500\">{status.collection_status.source_count} documents</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {status.collection_status?.target_database_exists ? '✅' : '❌'}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Target Database</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.target_database}</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {status.collection_status?.batch_count || 0}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Batch Collections</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.target_collection_prefix}1, {config.target_collection_prefix}2, ...</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Rollback Section */}\r\n            <div className=\"bg-red-50 p-4 rounded-lg\">\r\n              <h3 className=\"text-lg font-semibold text-red-900 mb-2\">Rollback</h3>\r\n              <p className=\"text-red-700 text-sm mb-3\">\r\n                Rollback Phase 3 changes and restore previous state if needed.\r\n              </p>\r\n              <button\r\n                onClick={rollbackPhase3}\r\n                className=\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\"\r\n              >\r\n                Rollback Phase 3\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'section-splitting' && (\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Section Splitting Configuration</h3>\r\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-blue-900 mb-2\">Section Splitting Process</h4>\r\n              <ul className=\"text-blue-700 text-sm space-y-1\">\r\n                <li>• Read all documents from {config.source_database}.{config.source_collection}</li>\r\n                <li>• Split into {config.batch_size} equal batches</li>\r\n                <li>• Create collections: {config.target_collection_prefix}1, {config.target_collection_prefix}2, ...</li>\r\n                <li>• Distribute statutes across batches</li>\r\n                <li>• Maintain section structure and metadata</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                onClick={startSectionSplitting}\r\n                disabled={isProcessing}\r\n                className=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isProcessing ? 'Processing...' : 'Start Section Splitting'}\r\n              </button>\r\n              <button\r\n                onClick={generateMetadata}\r\n                className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\"\r\n              >\r\n                Generate Metadata\r\n              </button>\r\n              <button\r\n                onClick={fetchStatus}\r\n                className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\"\r\n              >\r\n                Refresh Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'field-cleaning' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Field Cleaning Configuration</h3>\r\n              <button\r\n                onClick={fetchAvailableBatches}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Available Batches\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"bg-green-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-green-900 mb-2\">Field Cleaning Process (per batch)</h4>\r\n              <ul className=\"text-green-700 text-sm space-y-1\">\r\n                <li>• <strong>Drop unnecessary fields:</strong> Keep only essential fields for processing</li>\r\n                <li>• <strong>Bring common fields up:</strong> Move fields common across all sections to statute level</li>\r\n                <li>• <strong>Clean single-section statutes:</strong> Handle single-section statutes specially</li>\r\n                <li>• <strong>Remove preamble duplicates:</strong> Remove duplicate preamble sections</li>\r\n                <li>• <strong>Sort sections:</strong> Preamble first, then numeric, then text</li>\r\n                <li>• <strong>Validate Pakistan law:</strong> Drop non-Pakistan laws using CLI logic</li>\r\n              </ul>\r\n            </div>\r\n\r\n            {/* Cleaning Options */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-gray-900 mb-3\">Cleaning Options</h4>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"cleaningMode\"\r\n                    checked={cleanAllBatches}\r\n                    onChange={() => setCleanAllBatches(true)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"font-medium\">Clean All Batches</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"cleaningMode\"\r\n                    checked={!cleanAllBatches}\r\n                    onChange={() => setCleanAllBatches(false)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"font-medium\">Clean Selected Batches</span>\r\n                </label>\r\n              </div>\r\n\r\n              {/* Batch Selection */}\r\n              {!cleanAllBatches && availableBatches && (\r\n                <div className=\"mt-4\">\r\n                  <h5 className=\"font-medium text-gray-700 mb-2\">Select Batches to Clean:</h5>\r\n                  <div className=\"grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\">\r\n                    {availableBatches.batches.map((batch: any) => (\r\n                      <label key={batch.batch_number} className=\"flex items-center space-x-2 text-sm\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedBatches.includes(batch.batch_number)}\r\n                          onChange={() => toggleBatchSelection(batch.batch_number)}\r\n                          className=\"rounded\"\r\n                        />\r\n                        <span className={batch.is_cleaned ? \"text-green-600\" : \"text-gray-700\"}>\r\n                          {batch.batch_name} ({batch.document_count} docs)\r\n                          {batch.is_cleaned && <span className=\"text-xs\"> ✓</span>}\r\n                        </span>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-2\">\r\n                    Selected: {selectedBatches.length} batches. Green items are already cleaned.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                onClick={startBatchCleaning}\r\n                disabled={isProcessing || (!cleanAllBatches && selectedBatches.length === 0)}\r\n                className=\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isProcessing ? 'Processing...' : \r\n                  cleanAllBatches ? 'Clean All Batches' : `Clean ${selectedBatches.length} Selected Batches`}\r\n              </button>\r\n              <button\r\n                onClick={generateMetadata}\r\n                className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\"\r\n              >\r\n                Generate Metadata\r\n              </button>\r\n              <button\r\n                onClick={fetchStatus}\r\n                className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\"\r\n              >\r\n                Refresh Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Pakistan Law Validation Tab */}\r\n        {activeTab === 'pakistan-law-validation' && (\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center\">\r\n              <label className=\"flex items-center mr-4\">\r\n                <input type=\"checkbox\" checked={dryRun} onChange={e => setDryRun(e.target.checked)} className=\"mr-2\" />\r\n                <span className=\"font-medium\">Dry Run (Preview Only)</span>\r\n              </label>\r\n              <span className=\"text-xs text-gray-500\">Preview which statutes will be dropped before actual deletion.</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <label className=\"flex items-center mr-4\">\r\n                <input type=\"checkbox\" checked={true} className=\"mr-2\" />\r\n                <span className=\"font-medium text-sm\">Generate Metadata</span>\r\n              </label>\r\n              <span className=\"text-xs text-gray-500\">Save validation statistics and analysis.</span>\r\n            </div>\r\n          </div>\r\n          {validationResults && (\r\n            <div className=\"bg-gray-50 p-4 rounded-lg mt-4\">\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <h4 className=\"font-medium text-gray-900\">Validation Results</h4>\r\n                {validationResults.metadata_file && (\r\n                  <span className=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded\">\r\n                    📁 Metadata: {validationResults.metadata_file}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-2 text-sm\">\r\n                <strong>Scanned:</strong> {validationResults.total_scanned} &nbsp;\r\n                <strong>Dropped:</strong> {validationResults.total_dropped} &nbsp;\r\n                <strong>Kept:</strong> {validationResults.total_kept} &nbsp;\r\n                <strong>Batches:</strong> {validationResults.processed_batches}\r\n              </div>\r\n              {validationResults.metadata && (\r\n                <div className=\"mb-2 text-xs bg-white p-2 rounded border\">\r\n                  <strong>Drop Analysis:</strong>\r\n                  <div className=\"grid grid-cols-2 gap-2 mt-1\">\r\n                    <div>Drop Rate: {validationResults.metadata.validation_results?.drop_rate?.toFixed(1)}%</div>\r\n                    <div>Keep Rate: {validationResults.metadata.validation_results?.keep_rate?.toFixed(1)}%</div>\r\n                  </div>\r\n                  {validationResults.metadata.drop_reason_analysis?.top_drop_reasons && (\r\n                    <div className=\"mt-1\">\r\n                      <strong>Top Reasons:</strong> {validationResults.metadata.drop_reason_analysis.top_drop_reasons.map(([reason, count]: [string, number]) => `${reason} (${count})`).join(', ')}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {validationResults.dropped_docs.length > 0 && (\r\n                <div className=\"mb-2\">\r\n                  <strong>Dropped Statutes:</strong>\r\n                  <ul className=\"list-disc ml-6 text-xs\">\r\n                    {validationResults.dropped_docs.map((doc: any, idx: number) => (\r\n                      <li key={doc.name + idx}>\r\n                        {doc.name}\r\n                        <span className=\"text-red-600\"> ({doc.reason})</span>\r\n                        <span className=\"text-gray-500\"> [{doc.batch}]</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {validationResults.kept_docs.length > 0 && (\r\n                <div className=\"mb-2\">\r\n                  <strong>Kept Statutes:</strong>\r\n                  <ul className=\"list-disc ml-6 text-xs\">\r\n                    {validationResults.kept_docs.map((doc: any, idx: number) => (\r\n                      <li key={doc.name + idx}>\r\n                        {doc.name}\r\n                        <span className=\"text-green-600\"> [Kept]</span>\r\n                        <span className=\"text-gray-500\"> [{doc.batch}]</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              <div className=\"text-xs text-gray-500\">{validationResults.dry_run ? \"No changes made (preview only)\" : \"Non-Pakistan statutes have been dropped.\"}</div>\r\n            </div>\r\n          )}\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Pakistan Law Validation Configuration</h3>\r\n              <button\r\n                onClick={fetchAvailableBatches}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >Load Available Batches</button>\r\n            </div>\r\n            <div className=\"bg-yellow-50 p-4 rounded-lg\">\r\n              <ul className=\"text-yellow-700 text-sm space-y-1\">\r\n                <li>• Drop non-Pakistan laws using CLI logic</li>\r\n                <li>• Validate all or selected batches</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <div className=\"space-y-3\">\r\n                <label className=\"flex items-center\"><input type=\"radio\" checked={cleanAllBatches} onChange={() => setCleanAllBatches(true)} className=\"mr-2\"/>Validate All</label>\r\n                <label className=\"flex items-center\"><input type=\"radio\" checked={!cleanAllBatches} onChange={() => setCleanAllBatches(false)} className=\"mr-2\"/>Validate Selected</label>\r\n              </div>\r\n              {/* Show guidance when batches not loaded */}\r\n              {availableBatches === null && (\r\n                <div className=\"text-center py-4 text-gray-500\">\r\n                  Click \"Load Available Batches\" to load batches for validation\r\n                </div>\r\n              )}\r\n              {/* Batch Selection */}\r\n              {/* Batch Selection */}\r\n              {!cleanAllBatches && availableBatches && availableBatches.batches.length > 0 && (\r\n                <div className=\"mt-4 grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\">\r\n                  {availableBatches.batches.map((b: any) => (\r\n                    <label key={b.batch_number} className=\"flex items-center space-x-2 text-sm\">\r\n                      <input type=\"checkbox\" checked={selectedBatches.includes(b.batch_number)} onChange={() => toggleBatchSelection(b.batch_number)} className=\"rounded\"/>\r\n                      <span className={b.is_cleaned ? 'text-green-600' : 'text-gray-700'}>{b.batch_name} ({b.document_count})</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* No batches fallback */}\r\n            {availableBatches && availableBatches.batches.length === 0 && (\r\n              <div className=\"text-center py-4 text-gray-500\">\r\n                No batch collections found. Run section splitting first to create batches.\r\n              </div>\r\n            )}\r\n            <div className=\"flex space-x-4\">\r\n              <button onClick={startPakistanLawValidation} disabled={isProcessing || (!cleanAllBatches && selectedBatches.length===0)} className=\"bg-yellow-600 text-white px-6 py-2 rounded-md hover:bg-yellow-700 disabled:opacity-50\">{isProcessing?'Processing...':(cleanAllBatches?'Validate All':'Validate Selected')}</button>\r\n              <button onClick={previewValidationMetadata} disabled={isProcessing || (!cleanAllBatches && selectedBatches.length===0)} className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50\">Preview Metadata</button>\r\n              <button onClick={fetchStatus} className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\">Refresh Status</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'preview' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Batch Preview</h3>\r\n              <button\r\n                onClick={fetchBatchPreview}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Batch Preview\r\n              </button>\r\n            </div>\r\n            \r\n            {batchPreview ? (\r\n              <div className=\"space-y-4\">\r\n                {batchPreview.batches.length > 0 ? (\r\n                  batchPreview.batches.map((batch: any, index: number) => (\r\n                    <div key={index} className=\"bg-gray-50 p-4 rounded-lg\">\r\n                      <h4 className=\"font-medium text-gray-900 mb-2\">{batch.batch_name}</h4>\r\n                      <div className=\"grid grid-cols-2 gap-4 text-sm mb-3\">\r\n                        <div>\r\n                          <span className=\"font-medium\">Documents:</span> {batch.document_count}\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-medium\">Sample Documents:</span> {batch.sample_documents?.length || 0}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {batch.sample_documents && batch.sample_documents.length > 0 && (\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"text-xs text-gray-500 mb-2\">Sample Documents (click to expand):</div>\r\n                          {batch.sample_documents.map((doc: any, docIndex: number) => {\r\n                            const statuteKey = `${batch.batch_name}-${docIndex}`;\r\n                            const isStatuteExpanded = expandedStatutes[statuteKey];\r\n                            \r\n                            return (\r\n                              <div key={docIndex} className=\"bg-white border rounded-lg\">\r\n                                {/* Statute Header */}\r\n                                <div \r\n                                  className=\"p-3 cursor-pointer hover:bg-gray-50 flex items-center justify-between\"\r\n                                  onClick={() => toggleStatuteExpansion(statuteKey)}\r\n                                >\r\n                                  <div className=\"flex-1\">\r\n                                    <div className=\"font-medium text-sm text-gray-900\">\r\n                                      {doc.Statute_Name || 'N/A'}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500\">\r\n                                      {doc.Sections?.length || 0} sections • Province: {doc.Province || 'N/A'}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"text-gray-400\">\r\n                                    {isStatuteExpanded ? '▼' : '▶'}\r\n                                  </div>\r\n                                </div>\r\n                                \r\n                                {/* Expanded Sections */}\r\n                                {isStatuteExpanded && doc.section_details && (\r\n                                  <div className=\"border-t border-gray-100\">\r\n                                    {doc.section_details.map((section: any, sectionIndex: number) => {\r\n                                      const sectionKey = `${statuteKey}-section-${sectionIndex}`;\r\n                                      const isSectionExpanded = expandedSections[sectionKey];\r\n                                      \r\n                                      return (\r\n                                        <div key={sectionIndex} className=\"border-b border-gray-50 last:border-b-0\">\r\n                                          {/* Section Header */}\r\n                                          <div \r\n                                            className=\"p-3 pl-6 cursor-pointer hover:bg-gray-25 flex items-center justify-between\"\r\n                                            onClick={() => toggleSectionExpansion(sectionKey)}\r\n                                          >\r\n                                            <div className=\"flex-1\">\r\n                                              <div className=\"font-medium text-sm text-blue-900\">\r\n                                                {section.section_title}\r\n                                              </div>\r\n                                              <div className=\"text-xs text-gray-500 mt-1\">\r\n                                                {section.content_preview}\r\n                                              </div>\r\n                                            </div>\r\n                                            <div className=\"text-gray-400 text-sm\">\r\n                                              {isSectionExpanded ? '▼' : '▶'}\r\n                                            </div>\r\n                                          </div>\r\n                                          \r\n                                          {/* Full Section Content */}\r\n                                          {isSectionExpanded && (\r\n                                            <div className=\"p-3 pl-8 bg-gray-50 border-t border-gray-100\">\r\n                                              <div className=\"text-sm text-gray-800 whitespace-pre-wrap\">\r\n                                                {section.content || 'No content available'}\r\n                                              </div>\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                      );\r\n                                    })}\r\n                                  </div>\r\n                                )}\r\n                                \r\n                                {/* Fallback for documents without section_details */}\r\n                                {isStatuteExpanded && !doc.section_details && doc.Sections && (\r\n                                  <div className=\"border-t border-gray-100 p-3\">\r\n                                    <div className=\"text-xs text-gray-500 mb-2\">Basic Section Info:</div>\r\n                                    {doc.Sections.map((section: any, sectionIndex: number) => (\r\n                                      <div key={sectionIndex} className=\"text-xs text-gray-700 mb-1\">\r\n                                        • {section.Section || `Section ${sectionIndex + 1}`}\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"text-center py-8 text-gray-500\">\r\n                    <Layers className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                    <p>No batch collections found</p>\r\n                    <p className=\"text-sm\">Run section splitting first to create batches</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <Eye className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>Click \"Load Batch Preview\" to see batch collections</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'statistics' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Processing Statistics</h3>\r\n              <button\r\n                onClick={fetchStatistics}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Statistics\r\n              </button>\r\n            </div>\r\n            \r\n            {statistics ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">\r\n                    {statistics.statistics?.source_collection?.count || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-600\">Source Documents</div>\r\n                  <div className=\"text-xs text-blue-500\">{statistics.statistics?.source_collection?.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {statistics.statistics?.source_collection?.exists ? '✅ Exists' : '❌ Missing'}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">\r\n                    {statistics.statistics?.target_database?.batch_collections?.length || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-green-600\">Batch Collections</div>\r\n                  <div className=\"text-xs text-green-500\">{statistics.statistics?.target_database?.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {statistics.statistics?.target_database?.exists ? '✅ Exists' : '❌ Missing'}\r\n                  </div>\r\n                </div>\r\n                \r\n                {statistics.statistics?.target_database?.batch_collections && (\r\n                  <div className=\"md:col-span-2 bg-purple-50 p-4 rounded-lg\">\r\n                    <h4 className=\"font-medium text-purple-900 mb-2\">Batch Collections</h4>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\">\r\n                      {statistics.statistics.target_database.batch_collections.map((batch: string, index: number) => (\r\n                        <div key={index} className=\"bg-white p-2 rounded text-center\">\r\n                          <div className=\"font-medium\">{batch}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <Settings className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>No statistics available</p>\r\n                <button\r\n                  onClick={fetchStatistics}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n                >\r\n                  Load Statistics\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'history' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Processing History</h3>\r\n              <button\r\n                onClick={fetchHistory}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Refresh History\r\n              </button>\r\n            </div>\r\n            \r\n            {history ? (\r\n              <div className=\"space-y-4\">\r\n                {history.history.length > 0 ? (\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Operation\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Database\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Collection\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Date\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Processed\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Actions\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {history.history.map((item: any, index: number) => (\r\n                          <tr key={index} className=\"hover:bg-gray-50\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                                item.operation_type === 'split' \r\n                                  ? 'bg-blue-100 text-blue-800' \r\n                                  : 'bg-green-100 text-green-800'\r\n                              }`}>\r\n                                {item.operation_type === 'split' ? 'Section Splitting' : 'Field Cleaning'}\r\n                              </span>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.database}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.collection}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              {new Date(item.created_at).toLocaleDateString()}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.total_processed} items\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              <button\r\n                                onClick={() => window.open(`/api/v1/phase3/history/${item.filename}`, '_blank')}\r\n                                className=\"text-indigo-600 hover:text-indigo-900\"\r\n                              >\r\n                                View Details\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8 text-gray-500\">\r\n                    <History className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                    <p>No processing history found</p>\r\n                    <p className=\"text-sm\">Run section splitting or field cleaning to generate history</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <History className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>Click \"Refresh History\" to load processing history</p>\r\n                <div className=\"mt-4 text-xs text-gray-500\">\r\n                  <p>• Section splitting creates batch collections</p>\r\n                  <p>• Field cleaning processes each batch individually</p>\r\n                  <p>• All operations are logged with timestamps</p>\r\n                  <p>• Metadata files contain detailed statistics</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phase3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}