{"ast":null,"code":"var _jsxFileName = \"D:\\\\DigiFloat\\\\LawChronicle\\\\frontend\\\\src\\\\components\\\\phase2\\\\SortingInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { SortAsc, RefreshCw, Eye, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, ArrowUpDown, Hash, Text, FileText } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortingInterface = ({\n  config\n}) => {\n  _s();\n  var _previewData$sample_c;\n  const [statuteGroups, setStatuteGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sorting, setSorting] = useState(false);\n  const [previewData, setPreviewData] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [expandedGroups, setExpandedGroups] = useState(new Set());\n  const [sortOptions, setSortOptions] = useState({\n    preambleFirst: true,\n    numericOrder: true,\n    alphabeticalFallback: true,\n    customSortOrder: false\n  });\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(50);\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Fetch statute groups from normalized collection with pagination\n  const fetchStatuteGroups = useCallback(async (page = 1, limit = 50, search = \"\") => {\n    setLoading(true);\n    try {\n      const skip = (page - 1) * limit;\n      const queryParams = new URLSearchParams({\n        limit: limit.toString(),\n        skip: skip.toString(),\n        search: search\n      });\n      const response = await fetch(`/api/v1/phase2/preview-normalized-structure?${queryParams}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...config\n        })\n      });\n      const data = await response.json();\n      if (data.success && data.preview_data) {\n        var _data$pagination, _data$pagination2;\n        // Transform the data to match our interface\n        const groups = data.preview_data.map(statute => ({\n          _id: statute.statute_name || 'Unknown',\n          Statute_Name: statute.statute_name || 'Unknown',\n          Sections: statute.sections_preview || [],\n          section_count: statute.section_count || 0\n        }));\n        setStatuteGroups(groups);\n        // Set pagination info from backend response\n        setTotalItems(data.filtered_count || data.total_statutes || 0);\n        setTotalPages(((_data$pagination = data.pagination) === null || _data$pagination === void 0 ? void 0 : _data$pagination.total_pages) || Math.ceil((data.filtered_count || data.total_statutes || 0) / limit));\n        setCurrentPage(((_data$pagination2 = data.pagination) === null || _data$pagination2 === void 0 ? void 0 : _data$pagination2.current_page) || page);\n      } else {\n        setStatuteGroups([]);\n        setTotalItems(0);\n        setTotalPages(0);\n        setCurrentPage(1);\n        setMessage({\n          type: 'error',\n          text: data.message || 'Failed to fetch statute groups'\n        });\n      }\n    } catch (error) {\n      setStatuteGroups([]);\n      setTotalItems(0);\n      setTotalPages(0);\n      setCurrentPage(1);\n      setMessage({\n        type: 'error',\n        text: 'Error fetching statute groups'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  // Pagination handlers\n  const handlePageChange = page => {\n    fetchStatuteGroups(page, itemsPerPage, searchTerm);\n  };\n  const handleItemsPerPageChange = newItemsPerPage => {\n    setItemsPerPage(newItemsPerPage);\n    fetchStatuteGroups(1, newItemsPerPage, searchTerm);\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n    fetchStatuteGroups(1, itemsPerPage, term);\n  };\n  const refreshData = () => {\n    fetchStatuteGroups(currentPage, itemsPerPage, searchTerm);\n  };\n\n  // Toggle group expansion\n  const toggleGroupExpansion = groupId => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Section sort key function (replicating backend logic)\n  const sectionSortKey = section => {\n    const num = section.number || section.section_number || \"\";\n\n    // Preamble always first\n    if (typeof num === 'string' && num.trim().toLowerCase() === 'preamble') {\n      return [0, ''];\n    }\n\n    // Try to parse as numeric\n    try {\n      const numStr = String(num).trim();\n      if (numStr.replace(/[.-]/g, '').match(/^\\d+$/)) {\n        return [1, parseFloat(numStr)];\n      }\n    } catch (e) {\n      // Ignore parsing errors\n    }\n\n    // Non-numeric sections last, sorted alphabetically\n    return [2, String(num).toLowerCase()];\n  };\n\n  // Preview sorting changes\n  const previewSorting = async () => {\n    setSorting(true);\n    try {\n      // Create a preview showing how sections would be sorted\n      const preview = {\n        success: true,\n        message: 'Sorting preview generated',\n        sample_changes: statuteGroups.slice(0, 5).map(statute => {\n          const originalSections = [...statute.Sections];\n          const sortedSections = [...statute.Sections].sort((a, b) => {\n            const [aType, aValue] = sectionSortKey(a);\n            const [bType, bValue] = sectionSortKey(b);\n            if (aType !== bType) return aType - bType;\n            if (aType === 1) return aValue - bValue; // Numeric comparison\n            return String(aValue).localeCompare(String(bValue)); // String comparison\n          });\n          return {\n            statute_name: statute.Statute_Name,\n            original_order: originalSections.slice(0, 3).map((section, index) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            })),\n            sorted_order: sortedSections.slice(0, 3).map((section, index) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            }))\n          };\n        })\n      };\n      setPreviewData(preview);\n      setMessage({\n        type: 'success',\n        text: 'Sorting preview generated successfully'\n      });\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Error generating sorting preview'\n      });\n    } finally {\n      setSorting(false);\n    }\n  };\n\n  // Execute sorting\n  const executeSorting = async () => {\n    setSorting(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({\n        type: 'error',\n        text: 'Sorting execution requires backend implementation for the new grouped schema'\n      });\n\n      // TODO: Implement backend endpoint to re-sort sections in grouped format\n      // This would need to:\n      // 1. Apply the section sort key to all sections in all statutes\n      // 2. Update the normalized_statutes collection with re-sorted sections\n      // 3. Return summary of sorting changes made\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Error executing sorting'\n      });\n    } finally {\n      setSorting(false);\n    }\n  };\n  useEffect(() => {\n    fetchStatuteGroups(currentPage, itemsPerPage, searchTerm);\n  }, [fetchStatuteGroups, currentPage, itemsPerPage, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(SortAsc, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), \"Sorting Interface - Grouped Sections\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Configure and preview how sections within each statute group should be sorted. Default sorting: preamble first, then numeric sections, then text sections.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search statute names...\",\n          value: searchTerm,\n          onChange: e => handleSearch(e.target.value),\n          className: \"w-64 pl-3 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Show:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: itemsPerPage,\n            onChange: e => handleItemsPerPageChange(Number(e.target.value)),\n            className: \"border border-gray-300 rounded px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 25,\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 50,\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 75,\n              children: \"75\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 100,\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 200,\n              children: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [currentPage, \" \\u2013 \", Math.min(currentPage * itemsPerPage, totalItems), \" of \", totalItems.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          disabled: loading,\n          className: \"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: `w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), \"Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row justify-between items-center gap-4 mt-6 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Showing \", (currentPage - 1) * itemsPerPage + 1, \" to \", Math.min(currentPage * itemsPerPage, totalItems), \" of \", totalItems.toLocaleString(), \" results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage - 1),\n            disabled: currentPage === 1,\n            className: \"px-3 py-2 text-sm border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: Array.from({\n              length: Math.min(totalPages, 7)\n            }, (_, i) => {\n              let page;\n              if (totalPages <= 7) {\n                page = i + 1;\n              } else if (currentPage <= 4) {\n                page = i + 1;\n              } else if (currentPage >= totalPages - 3) {\n                page = totalPages - 6 + i;\n              } else {\n                page = currentPage - 3 + i;\n              }\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageChange(page),\n                className: `px-3 py-2 text-sm border rounded-lg ${currentPage === page ? 'bg-blue-500 text-white border-blue-500' : 'border-gray-300 hover:bg-gray-100'}`,\n                children: page\n              }, page, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage + 1),\n            disabled: currentPage === totalPages,\n            className: \"px-3 py-2 text-sm border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), \");\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4\",\n        children: \"Sorting Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Configure the sorting behavior for sections within each statute group.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sortOptions.preambleFirst,\n            onChange: e => setSortOptions(prev => ({\n              ...prev,\n              preambleFirst: e.target.checked\n            })),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: \"Preamble First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Always place preamble sections at the beginning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sortOptions.numericOrder,\n            onChange: e => setSortOptions(prev => ({\n              ...prev,\n              numericOrder: e.target.checked\n            })),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: \"Numeric Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Sort numeric sections in ascending order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sortOptions.alphabeticalFallback,\n            onChange: e => setSortOptions(prev => ({\n              ...prev,\n              alphabeticalFallback: e.target.checked\n            })),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: \"Alphabetical Fallback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Sort non-numeric sections alphabetically\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sortOptions.customSortOrder,\n            onChange: e => setSortOptions(prev => ({\n              ...prev,\n              customSortOrder: e.target.checked\n            })),\n            className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: \"Custom Sort Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Enable custom sorting rules (advanced)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 rounded-lg flex items-center ${message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`,\n      children: [message.type === 'success' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"w-5 h-5 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AlertTriangle, {\n        className: \"w-5 h-5 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }, this), message.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), previewData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Eye, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), \"Sorting Preview\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: (_previewData$sample_c = previewData.sample_changes) === null || _previewData$sample_c === void 0 ? void 0 : _previewData$sample_c.map((statute, index) => {\n          var _statute$original_ord, _statute$sorted_order;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium text-gray-900 mb-3\",\n              children: statute.statute_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 p-3 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm font-medium text-gray-700 mb-2 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(ArrowUpDown, {\n                    className: \"w-4 h-4 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 23\n                  }, this), \"Original Order\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: (_statute$original_ord = statute.original_order) === null || _statute$original_ord === void 0 ? void 0 : _statute$original_ord.map((section, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2 text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-500\",\n                      children: [section.position, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: section.number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 rounded text-xs ${section.type === 'preamble' ? 'bg-blue-100 text-blue-800' : section.type === 'numeric' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: [section.type === 'preamble' ? /*#__PURE__*/_jsxDEV(FileText, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 60\n                      }, this) : section.type === 'numeric' ? /*#__PURE__*/_jsxDEV(Hash, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 59\n                      }, this) : /*#__PURE__*/_jsxDEV(Text, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 30\n                      }, this), section.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 27\n                    }, this)]\n                  }, sIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-3 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm font-medium text-blue-700 mb-2 flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(SortAsc, {\n                    className: \"w-4 h-4 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 23\n                  }, this), \"Sorted Order\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: (_statute$sorted_order = statute.sorted_order) === null || _statute$sorted_order === void 0 ? void 0 : _statute$sorted_order.map((section, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2 text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-blue-500\",\n                      children: [section.position, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: section.number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 rounded text-xs ${section.type === 'preamble' ? 'bg-blue-100 text-blue-800' : section.type === 'numeric' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: [section.type === 'preamble' ? /*#__PURE__*/_jsxDEV(FileText, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 60\n                      }, this) : section.type === 'numeric' ? /*#__PURE__*/_jsxDEV(Hash, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 59\n                      }, this) : /*#__PURE__*/_jsxDEV(Text, {\n                        className: \"w-3 h-3 inline mr-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 30\n                      }, this), section.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 27\n                    }, this)]\n                  }, sIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: \"Statute Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [statuteGroups.length, \" groups loaded \\u2022 Click to expand and view current section order\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-8 h-8 mx-auto mb-2 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), \"Loading statute groups...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this) : statuteGroups.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-center text-gray-500\",\n        children: \"No statute groups found. Run normalization first to populate the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divide-y divide-gray-200\",\n        children: statuteGroups.map(statute => {\n          var _statute$Sections;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleGroupExpansion(statute._id),\n                className: \"flex items-center space-x-2 text-left hover:text-blue-600\",\n                children: [expandedGroups.has(statute._id) ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-900\",\n                  children: statute.Statute_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [\"(\", statute.section_count, \" sections)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Current order: \", statute.Sections.length > 0 ? `${statute.Sections[0].number || 'N/A'} → ${((_statute$Sections = statute.Sections[statute.Sections.length - 1]) === null || _statute$Sections === void 0 ? void 0 : _statute$Sections.number) || 'N/A'}` : 'No sections']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), expandedGroups.has(statute._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 ml-8 space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 font-medium\",\n                children: \"Current Section Order:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this), statute.Sections && statute.Sections.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\",\n                children: statute.Sections.map((section, index) => {\n                  const [sortType] = sectionSortKey(section);\n                  const sectionType = sortType === 0 ? 'preamble' : sortType === 1 ? 'numeric' : 'text';\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `p-2 rounded text-sm border-l-4 ${sectionType === 'preamble' ? 'border-l-blue-500 bg-blue-50' : sectionType === 'numeric' ? 'border-l-green-500 bg-green-50' : 'border-l-gray-500 bg-gray-50'}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium text-gray-700\",\n                        children: section.number || section.section_number || `Section ${index + 1}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 519,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `px-2 py-1 rounded text-xs ${sectionType === 'preamble' ? 'bg-blue-100 text-blue-800' : sectionType === 'numeric' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`,\n                        children: sectionType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-600 mt-1 truncate\",\n                      children: section.definition || section.content || 'No content'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 31\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"No sections found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this)]\n          }, statute._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"Total: \", statuteGroups.length, \" statute group(s) \\u2022 Total sections: \", statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0), \" \\u2022 Sorting: \", sortOptions.preambleFirst ? 'Preamble first' : 'No preamble priority', \" \\u2022\", sortOptions.numericOrder ? 'Numeric order' : 'No numeric order', \" \\u2022\", sortOptions.alphabeticalFallback ? 'Alphabetical fallback' : 'No alphabetical fallback']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg flex items-center ${message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(SortingInterface, \"cnRhQ7Du8zTAT7g9I8hkmCGEUDA=\");\n_c = SortingInterface;\nexport default SortingInterface;\nvar _c;\n$RefreshReg$(_c, \"SortingInterface\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SortAsc","RefreshCw","Eye","AlertTriangle","CheckCircle","ChevronDown","ChevronRight","ArrowUpDown","Hash","Text","FileText","jsxDEV","_jsxDEV","SortingInterface","config","_s","_previewData$sample_c","statuteGroups","setStatuteGroups","loading","setLoading","sorting","setSorting","previewData","setPreviewData","message","setMessage","expandedGroups","setExpandedGroups","Set","sortOptions","setSortOptions","preambleFirst","numericOrder","alphabeticalFallback","customSortOrder","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","totalItems","setTotalItems","totalPages","setTotalPages","searchTerm","setSearchTerm","fetchStatuteGroups","page","limit","search","skip","queryParams","URLSearchParams","toString","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","data","json","success","preview_data","_data$pagination","_data$pagination2","groups","map","statute","_id","statute_name","Statute_Name","Sections","sections_preview","section_count","filtered_count","total_statutes","pagination","total_pages","Math","ceil","current_page","type","text","error","handlePageChange","handleItemsPerPageChange","newItemsPerPage","handleSearch","term","refreshData","toggleGroupExpansion","groupId","newExpanded","has","delete","add","sectionSortKey","section","num","number","section_number","trim","toLowerCase","numStr","String","replace","match","parseFloat","e","previewSorting","preview","sample_changes","slice","originalSections","sortedSections","sort","a","b","aType","aValue","bType","bValue","localeCompare","original_order","index","position","sorted_order","executeSorting","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","Number","min","toLocaleString","onClick","disabled","Array","from","length","_","i","checked","prev","_statute$original_ord","_statute$sorted_order","sIndex","_statute$Sections","sortType","sectionType","definition","content","reduce","sum","_c","$RefreshReg$"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/SortingInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { SortAsc, RefreshCw, Play, Eye, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, ArrowUpDown, Hash, Text, FileText } from 'lucide-react';\n\ninterface StatuteGroup {\n  _id: string;\n  Statute_Name: string;\n  Sections: any[];\n  section_count: number;\n}\n\ninterface SortingInterfaceProps {\n  config: any;\n}\n\nconst SortingInterface: React.FC<SortingInterfaceProps> = ({ config }) => {\n  const [statuteGroups, setStatuteGroups] = useState<StatuteGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [sorting, setSorting] = useState(false);\n  const [previewData, setPreviewData] = useState<any>(null);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n  const [sortOptions, setSortOptions] = useState({\n    preambleFirst: true,\n    numericOrder: true,\n    alphabeticalFallback: true,\n    customSortOrder: false\n  });\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(50);\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Fetch statute groups from normalized collection with pagination\n  const fetchStatuteGroups = useCallback(async (page: number = 1, limit: number = 50, search: string = \"\") => {\n    setLoading(true);\n    try {\n      const skip = (page - 1) * limit;\n      const queryParams = new URLSearchParams({\n        limit: limit.toString(),\n        skip: skip.toString(),\n        search: search\n      });\n      const response = await fetch(`/api/v1/phase2/preview-normalized-structure?${queryParams}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...config\n        })\n      });\n      const data = await response.json();\n      if (data.success && data.preview_data) {\n        // Transform the data to match our interface\n        const groups = data.preview_data.map((statute: any) => ({\n          _id: statute.statute_name || 'Unknown',\n          Statute_Name: statute.statute_name || 'Unknown',\n          Sections: statute.sections_preview || [],\n          section_count: statute.section_count || 0\n        }));\n        setStatuteGroups(groups);\n        // Set pagination info from backend response\n        setTotalItems(data.filtered_count || data.total_statutes || 0);\n        setTotalPages(data.pagination?.total_pages || Math.ceil((data.filtered_count || data.total_statutes || 0) / limit));\n        setCurrentPage(data.pagination?.current_page || page);\n      } else {\n        setStatuteGroups([]);\n        setTotalItems(0);\n        setTotalPages(0);\n        setCurrentPage(1);\n        setMessage({ type: 'error', text: data.message || 'Failed to fetch statute groups' });\n      }\n    } catch (error) {\n      setStatuteGroups([]);\n      setTotalItems(0);\n      setTotalPages(0);\n      setCurrentPage(1);\n      setMessage({ type: 'error', text: 'Error fetching statute groups' });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  // Pagination handlers\n  const handlePageChange = (page: number) => {\n    fetchStatuteGroups(page, itemsPerPage, searchTerm);\n  };\n\n  const handleItemsPerPageChange = (newItemsPerPage: number) => {\n    setItemsPerPage(newItemsPerPage);\n    fetchStatuteGroups(1, newItemsPerPage, searchTerm);\n  };\n\n  const handleSearch = (term: string) => {\n    setSearchTerm(term);\n    fetchStatuteGroups(1, itemsPerPage, term);\n  };\n\n  const refreshData = () => {\n    fetchStatuteGroups(currentPage, itemsPerPage, searchTerm);\n  };\n\n  // Toggle group expansion\n  const toggleGroupExpansion = (groupId: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Section sort key function (replicating backend logic)\n  const sectionSortKey = (section: any) => {\n    const num = section.number || section.section_number || \"\";\n    \n    // Preamble always first\n    if (typeof num === 'string' && num.trim().toLowerCase() === 'preamble') {\n      return [0, ''];\n    }\n    \n    // Try to parse as numeric\n    try {\n      const numStr = String(num).trim();\n      if (numStr.replace(/[.-]/g, '').match(/^\\d+$/)) {\n        return [1, parseFloat(numStr)];\n      }\n    } catch (e) {\n      // Ignore parsing errors\n    }\n    \n    // Non-numeric sections last, sorted alphabetically\n    return [2, String(num).toLowerCase()];\n  };\n\n  // Preview sorting changes\n  const previewSorting = async () => {\n    setSorting(true);\n    try {\n      // Create a preview showing how sections would be sorted\n      const preview = {\n        success: true,\n        message: 'Sorting preview generated',\n        sample_changes: statuteGroups.slice(0, 5).map(statute => {\n          const originalSections = [...statute.Sections];\n          const sortedSections = [...statute.Sections].sort((a, b) => {\n            const [aType, aValue] = sectionSortKey(a);\n            const [bType, bValue] = sectionSortKey(b);\n            \n            if (aType !== bType) return (aType as number) - (bType as number);\n            if (aType === 1) return (aValue as number) - (bValue as number); // Numeric comparison\n            return String(aValue).localeCompare(String(bValue)); // String comparison\n          });\n          \n          return {\n            statute_name: statute.Statute_Name,\n            original_order: originalSections.slice(0, 3).map((section: any, index: number) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : \n                    sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            })),\n            sorted_order: sortedSections.slice(0, 3).map((section: any, index: number) => ({\n              position: index + 1,\n              number: section.number || section.section_number || `Section ${index + 1}`,\n              type: sectionSortKey(section)[0] === 0 ? 'preamble' : \n                    sectionSortKey(section)[0] === 1 ? 'numeric' : 'text'\n            }))\n          };\n        })\n      };\n      \n      setPreviewData(preview);\n      setMessage({ type: 'success', text: 'Sorting preview generated successfully' });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error generating sorting preview' });\n    } finally {\n      setSorting(false);\n    }\n  };\n\n  // Execute sorting\n  const executeSorting = async () => {\n    setSorting(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({ \n        type: 'error', \n        text: 'Sorting execution requires backend implementation for the new grouped schema' \n      });\n      \n      // TODO: Implement backend endpoint to re-sort sections in grouped format\n      // This would need to:\n      // 1. Apply the section sort key to all sections in all statutes\n      // 2. Update the normalized_statutes collection with re-sorted sections\n      // 3. Return summary of sorting changes made\n      \n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error executing sorting' });\n    } finally {\n      setSorting(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStatuteGroups(currentPage, itemsPerPage, searchTerm);\n  }, [fetchStatuteGroups, currentPage, itemsPerPage, searchTerm]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n          <SortAsc className=\"w-5 h-5 mr-2\" />\n          Sorting Interface - Grouped Sections\n        </h2>\n        <p className=\"text-gray-600 mb-4\">\n          Configure and preview how sections within each statute group should be sorted. \n          Default sorting: preamble first, then numeric sections, then text sections.\n        </p>\n        {/* Search and Controls */}\n        <div className=\"flex flex-wrap gap-4 items-center mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Search statute names...\"\n            value={searchTerm}\n            onChange={(e) => handleSearch(e.target.value)}\n            className=\"w-64 pl-3 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm text-gray-600\">Show:</span>\n            <select\n              value={itemsPerPage}\n              onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n              className=\"border border-gray-300 rounded px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n              <option value={75}>75</option>\n              <option value={100}>100</option>\n              <option value={200}>200</option>\n            </select>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {currentPage} – {Math.min(currentPage * itemsPerPage, totalItems)} of {totalItems.toLocaleString()}\n          </div>\n          <button\n            onClick={refreshData}\n            disabled={loading}\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\"\n          >\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh\n          </button>\n        </div>\n        {/* Pagination Controls */}\n        {totalPages > 1 && (\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 mt-6 p-4 bg-gray-50 rounded-lg\">\n            <div className=\"text-sm text-gray-600\">\n              Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, totalItems)} of {totalItems.toLocaleString()} results\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => handlePageChange(currentPage - 1)}\n                disabled={currentPage === 1}\n                className=\"px-3 py-2 text-sm border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100\"\n              >\n                Previous\n              </button>\n              <div className=\"flex items-center gap-1\">\n                {Array.from({ length: Math.min(totalPages, 7) }, (_, i) => {\n                  let page: number;\n                  if (totalPages <= 7) {\n                    page = i + 1;\n                  } else if (currentPage <= 4) {\n                    page = i + 1;\n                        } else if (currentPage >= totalPages - 3) {\n                          page = totalPages - 6 + i;\n                        } else {\n                          page = currentPage - 3 + i;\n                        }\n                        return (\n                          <button\n                            key={page}\n                            onClick={() => handlePageChange(page)}\n                            className={`px-3 py-2 text-sm border rounded-lg ${\n                              currentPage === page\n                                ? 'bg-blue-500 text-white border-blue-500'\n                                : 'border-gray-300 hover:bg-gray-100'\n                            }`}\n                          >\n                            {page}\n                          </button>\n                        );\n                      })}\n                    </div>\n                    <button\n                      onClick={() => handlePageChange(currentPage + 1)}\n                      disabled={currentPage === totalPages}\n                      className=\"px-3 py-2 text-sm border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100\"\n                    >\n                      Next\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n\n      {/* Sorting Options */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sorting Configuration</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Configure the sorting behavior for sections within each statute group.\n        </p>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.preambleFirst}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, preambleFirst: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Preamble First</div>\n              <div className=\"text-sm text-gray-600\">Always place preamble sections at the beginning</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.numericOrder}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, numericOrder: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Numeric Order</div>\n              <div className=\"text-sm text-gray-600\">Sort numeric sections in ascending order</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.alphabeticalFallback}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, alphabeticalFallback: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Alphabetical Fallback</div>\n              <div className=\"text-sm text-gray-600\">Sort non-numeric sections alphabetically</div>\n            </div>\n          </label>\n          \n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={sortOptions.customSortOrder}\n              onChange={(e) => setSortOptions(prev => ({ ...prev, customSortOrder: e.target.checked }))}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <div>\n              <div className=\"font-medium text-gray-900\">Custom Sort Order</div>\n              <div className=\"text-sm text-gray-600\">Enable custom sorting rules (advanced)</div>\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center ${\n          message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircle className=\"w-5 h-5 mr-2\" />\n          ) : (\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n          )}\n          {message.text}\n        </div>\n      )}\n\n      {/* Preview Data */}\n      {previewData && (\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Eye className=\"w-5 h-5 mr-2\" />\n            Sorting Preview\n          </h3>\n          \n          <div className=\"space-y-4\">\n            {previewData.sample_changes?.map((statute: any, index: number) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">{statute.statute_name}</h4>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 p-3 rounded\">\n                    <div className=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                      <ArrowUpDown className=\"w-4 h-4 mr-1\" />\n                      Original Order\n                    </div>\n                    <div className=\"space-y-1\">\n                      {statute.original_order?.map((section: any, sIndex: number) => (\n                        <div key={sIndex} className=\"flex items-center space-x-2 text-sm\">\n                          <span className=\"text-gray-500\">{section.position}.</span>\n                          <span className=\"font-medium\">{section.number}</span>\n                          <span className={`px-2 py-1 rounded text-xs ${\n                            section.type === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                            section.type === 'numeric' ? 'bg-green-100 text-green-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {section.type === 'preamble' ? <FileText className=\"w-3 h-3 inline mr-1\" /> :\n                             section.type === 'numeric' ? <Hash className=\"w-3 h-3 inline mr-1\" /> :\n                             <Text className=\"w-3 h-3 inline mr-1\" />}\n                            {section.type}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-blue-50 p-3 rounded\">\n                    <div className=\"text-sm font-medium text-blue-700 mb-2 flex items-center\">\n                      <SortAsc className=\"w-4 h-4 mr-1\" />\n                      Sorted Order\n                    </div>\n                    <div className=\"space-y-1\">\n                      {statute.sorted_order?.map((section: any, sIndex: number) => (\n                        <div key={sIndex} className=\"flex items-center space-x-2 text-sm\">\n                          <span className=\"text-blue-500\">{section.position}.</span>\n                          <span className=\"font-medium\">{section.number}</span>\n                          <span className={`px-2 py-1 rounded text-xs ${\n                            section.type === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                            section.type === 'numeric' ? 'bg-green-100 text-green-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {section.type === 'preamble' ? <FileText className=\"w-3 h-3 inline mr-1\" /> :\n                             section.type === 'numeric' ? <Hash className=\"w-3 h-3 inline mr-1\" /> :\n                             <Text className=\"w-3 h-3 inline mr-1\" />}\n                            {section.type}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Statute Groups List */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Statute Groups</h3>\n          <p className=\"text-sm text-gray-600\">\n            {statuteGroups.length} groups loaded • Click to expand and view current section order\n          </p>\n        </div>\n        \n        {loading ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            <RefreshCw className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n            Loading statute groups...\n          </div>\n        ) : statuteGroups.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            No statute groups found. Run normalization first to populate the database.\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {statuteGroups.map((statute) => (\n              <div key={statute._id} className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    onClick={() => toggleGroupExpansion(statute._id)}\n                    className=\"flex items-center space-x-2 text-left hover:text-blue-600\"\n                  >\n                    {expandedGroups.has(statute._id) ? (\n                      <ChevronDown className=\"w-4 h-4\" />\n                    ) : (\n                      <ChevronRight className=\"w-4 h-4\" />\n                    )}\n                    <span className=\"font-medium text-gray-900\">{statute.Statute_Name}</span>\n                    <span className=\"text-sm text-gray-500\">({statute.section_count} sections)</span>\n                  </button>\n                  \n                  <div className=\"text-sm text-gray-500\">\n                    Current order: {statute.Sections.length > 0 ? \n                      `${statute.Sections[0].number || 'N/A'} → ${statute.Sections[statute.Sections.length - 1]?.number || 'N/A'}` : \n                      'No sections'}\n                  </div>\n                </div>\n                \n                {/* Expanded Sections View */}\n                {expandedGroups.has(statute._id) && (\n                  <div className=\"mt-3 ml-8 space-y-2\">\n                    <div className=\"text-sm text-gray-600 font-medium\">Current Section Order:</div>\n                    {statute.Sections && statute.Sections.length > 0 ? (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {statute.Sections.map((section: any, index: number) => {\n                          const [sortType] = sectionSortKey(section);\n                          const sectionType = sortType === 0 ? 'preamble' : sortType === 1 ? 'numeric' : 'text';\n                          \n                          return (\n                            <div key={index} className={`p-2 rounded text-sm border-l-4 ${\n                              sectionType === 'preamble' ? 'border-l-blue-500 bg-blue-50' :\n                              sectionType === 'numeric' ? 'border-l-green-500 bg-green-50' :\n                              'border-l-gray-500 bg-gray-50'\n                            }`}>\n                              <div className=\"flex items-center justify-between\">\n                                <span className=\"font-medium text-gray-700\">\n                                  {section.number || section.section_number || `Section ${index + 1}`}\n                                </span>\n                                <span className={`px-2 py-1 rounded text-xs ${\n                                  sectionType === 'preamble' ? 'bg-blue-100 text-blue-800' :\n                                  sectionType === 'numeric' ? 'bg-green-100 text-green-800' :\n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {sectionType}\n                                </span>\n                              </div>\n                              <div className=\"text-xs text-gray-600 mt-1 truncate\">\n                                {section.definition || section.content || 'No content'}\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-500 text-sm\">No sections found</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {statuteGroups.length} statute group(s) • \n          Total sections: {statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0)} • \n          Sorting: {sortOptions.preambleFirst ? 'Preamble first' : 'No preamble priority'} • \n          {sortOptions.numericOrder ? 'Numeric order' : 'No numeric order'} • \n          {sortOptions.alphabeticalFallback ? 'Alphabetical fallback' : 'No alphabetical fallback'}\n        </div>\n        {message && (\n          <div className={`p-4 rounded-lg flex items-center ${message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`}>\n            {message.text}\n          </div>\n        )}\n      </div>\n  </div>\n  );\n};\n\nexport default SortingInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,OAAO,EAAEC,SAAS,EAAQC,GAAG,EAAEC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAavJ,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACxE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAiB,EAAE,CAAC;EACtE,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAqD,IAAI,CAAC;EAChG,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAc,IAAIgC,GAAG,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC;IAC7CmC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,oBAAoB,EAAE,IAAI;IAC1BC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMiD,kBAAkB,GAAG/C,WAAW,CAAC,OAAOgD,IAAY,GAAG,CAAC,EAAEC,KAAa,GAAG,EAAE,EAAEC,MAAc,GAAG,EAAE,KAAK;IAC1G7B,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM8B,IAAI,GAAG,CAACH,IAAI,GAAG,CAAC,IAAIC,KAAK;MAC/B,MAAMG,WAAW,GAAG,IAAIC,eAAe,CAAC;QACtCJ,KAAK,EAAEA,KAAK,CAACK,QAAQ,CAAC,CAAC;QACvBH,IAAI,EAAEA,IAAI,CAACG,QAAQ,CAAC,CAAC;QACrBJ,MAAM,EAAEA;MACV,CAAC,CAAC;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CJ,WAAW,EAAE,EAAE;QACzFK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UAC1D,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,GAAGhD;QACL,CAAC;MACH,CAAC,CAAC;MACF,MAAMiD,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACG,YAAY,EAAE;QAAA,IAAAC,gBAAA,EAAAC,iBAAA;QACrC;QACA,MAAMC,MAAM,GAAGN,IAAI,CAACG,YAAY,CAACI,GAAG,CAAEC,OAAY,KAAM;UACtDC,GAAG,EAAED,OAAO,CAACE,YAAY,IAAI,SAAS;UACtCC,YAAY,EAAEH,OAAO,CAACE,YAAY,IAAI,SAAS;UAC/CE,QAAQ,EAAEJ,OAAO,CAACK,gBAAgB,IAAI,EAAE;UACxCC,aAAa,EAAEN,OAAO,CAACM,aAAa,IAAI;QAC1C,CAAC,CAAC,CAAC;QACH3D,gBAAgB,CAACmD,MAAM,CAAC;QACxB;QACA5B,aAAa,CAACsB,IAAI,CAACe,cAAc,IAAIf,IAAI,CAACgB,cAAc,IAAI,CAAC,CAAC;QAC9DpC,aAAa,CAAC,EAAAwB,gBAAA,GAAAJ,IAAI,CAACiB,UAAU,cAAAb,gBAAA,uBAAfA,gBAAA,CAAiBc,WAAW,KAAIC,IAAI,CAACC,IAAI,CAAC,CAACpB,IAAI,CAACe,cAAc,IAAIf,IAAI,CAACgB,cAAc,IAAI,CAAC,IAAI/B,KAAK,CAAC,CAAC;QACnHX,cAAc,CAAC,EAAA+B,iBAAA,GAAAL,IAAI,CAACiB,UAAU,cAAAZ,iBAAA,uBAAfA,iBAAA,CAAiBgB,YAAY,KAAIrC,IAAI,CAAC;MACvD,CAAC,MAAM;QACL7B,gBAAgB,CAAC,EAAE,CAAC;QACpBuB,aAAa,CAAC,CAAC,CAAC;QAChBE,aAAa,CAAC,CAAC,CAAC;QAChBN,cAAc,CAAC,CAAC,CAAC;QACjBX,UAAU,CAAC;UAAE2D,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAEvB,IAAI,CAACtC,OAAO,IAAI;QAAiC,CAAC,CAAC;MACvF;IACF,CAAC,CAAC,OAAO8D,KAAK,EAAE;MACdrE,gBAAgB,CAAC,EAAE,CAAC;MACpBuB,aAAa,CAAC,CAAC,CAAC;MAChBE,aAAa,CAAC,CAAC,CAAC;MAChBN,cAAc,CAAC,CAAC,CAAC;MACjBX,UAAU,CAAC;QAAE2D,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAgC,CAAC,CAAC;IACtE,CAAC,SAAS;MACRlE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMoE,gBAAgB,GAAIzC,IAAY,IAAK;IACzCD,kBAAkB,CAACC,IAAI,EAAET,YAAY,EAAEM,UAAU,CAAC;EACpD,CAAC;EAED,MAAM6C,wBAAwB,GAAIC,eAAuB,IAAK;IAC5DnD,eAAe,CAACmD,eAAe,CAAC;IAChC5C,kBAAkB,CAAC,CAAC,EAAE4C,eAAe,EAAE9C,UAAU,CAAC;EACpD,CAAC;EAED,MAAM+C,YAAY,GAAIC,IAAY,IAAK;IACrC/C,aAAa,CAAC+C,IAAI,CAAC;IACnB9C,kBAAkB,CAAC,CAAC,EAAER,YAAY,EAAEsD,IAAI,CAAC;EAC3C,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB/C,kBAAkB,CAACV,WAAW,EAAEE,YAAY,EAAEM,UAAU,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMkD,oBAAoB,GAAIC,OAAe,IAAK;IAChD,MAAMC,WAAW,GAAG,IAAInE,GAAG,CAACF,cAAc,CAAC;IAC3C,IAAIqE,WAAW,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MAC5BC,WAAW,CAACE,MAAM,CAACH,OAAO,CAAC;IAC7B,CAAC,MAAM;MACLC,WAAW,CAACG,GAAG,CAACJ,OAAO,CAAC;IAC1B;IACAnE,iBAAiB,CAACoE,WAAW,CAAC;EAChC,CAAC;;EAED;EACA,MAAMI,cAAc,GAAIC,OAAY,IAAK;IACvC,MAAMC,GAAG,GAAGD,OAAO,CAACE,MAAM,IAAIF,OAAO,CAACG,cAAc,IAAI,EAAE;;IAE1D;IACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,EAAE;MACtE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;IAChB;;IAEA;IACA,IAAI;MACF,MAAMC,MAAM,GAAGC,MAAM,CAACN,GAAG,CAAC,CAACG,IAAI,CAAC,CAAC;MACjC,IAAIE,MAAM,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,EAAE;QAC9C,OAAO,CAAC,CAAC,EAAEC,UAAU,CAACJ,MAAM,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV;IAAA;;IAGF;IACA,OAAO,CAAC,CAAC,EAAEJ,MAAM,CAACN,GAAG,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC3F,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAM4F,OAAO,GAAG;QACdjD,OAAO,EAAE,IAAI;QACbxC,OAAO,EAAE,2BAA2B;QACpC0F,cAAc,EAAElG,aAAa,CAACmG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC9C,GAAG,CAACC,OAAO,IAAI;UACvD,MAAM8C,gBAAgB,GAAG,CAAC,GAAG9C,OAAO,CAACI,QAAQ,CAAC;UAC9C,MAAM2C,cAAc,GAAG,CAAC,GAAG/C,OAAO,CAACI,QAAQ,CAAC,CAAC4C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YAC1D,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAGvB,cAAc,CAACoB,CAAC,CAAC;YACzC,MAAM,CAACI,KAAK,EAAEC,MAAM,CAAC,GAAGzB,cAAc,CAACqB,CAAC,CAAC;YAEzC,IAAIC,KAAK,KAAKE,KAAK,EAAE,OAAQF,KAAK,GAAeE,KAAgB;YACjE,IAAIF,KAAK,KAAK,CAAC,EAAE,OAAQC,MAAM,GAAeE,MAAiB,CAAC,CAAC;YACjE,OAAOjB,MAAM,CAACe,MAAM,CAAC,CAACG,aAAa,CAAClB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,CAAC;UACvD,CAAC,CAAC;UAEF,OAAO;YACLpD,YAAY,EAAEF,OAAO,CAACG,YAAY;YAClCqD,cAAc,EAAEV,gBAAgB,CAACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC9C,GAAG,CAAC,CAAC+B,OAAY,EAAE2B,KAAa,MAAM;cACjFC,QAAQ,EAAED,KAAK,GAAG,CAAC;cACnBzB,MAAM,EAAEF,OAAO,CAACE,MAAM,IAAIF,OAAO,CAACG,cAAc,IAAI,WAAWwB,KAAK,GAAG,CAAC,EAAE;cAC1E3C,IAAI,EAAEe,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,UAAU,GAC7CD,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;YACvD,CAAC,CAAC,CAAC;YACH6B,YAAY,EAAEZ,cAAc,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC9C,GAAG,CAAC,CAAC+B,OAAY,EAAE2B,KAAa,MAAM;cAC7EC,QAAQ,EAAED,KAAK,GAAG,CAAC;cACnBzB,MAAM,EAAEF,OAAO,CAACE,MAAM,IAAIF,OAAO,CAACG,cAAc,IAAI,WAAWwB,KAAK,GAAG,CAAC,EAAE;cAC1E3C,IAAI,EAAEe,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,UAAU,GAC7CD,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;YACvD,CAAC,CAAC;UACJ,CAAC;QACH,CAAC;MACH,CAAC;MAED7E,cAAc,CAAC0F,OAAO,CAAC;MACvBxF,UAAU,CAAC;QAAE2D,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAyC,CAAC,CAAC;IACjF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd7D,UAAU,CAAC;QAAE2D,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAmC,CAAC,CAAC;IACzE,CAAC,SAAS;MACRhE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM6G,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC7G,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACAI,UAAU,CAAC;QACT2D,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd7D,UAAU,CAAC;QAAE2D,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAA0B,CAAC,CAAC;IAChE,CAAC,SAAS;MACRhE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACdgD,kBAAkB,CAACV,WAAW,EAAEE,YAAY,EAAEM,UAAU,CAAC;EAC3D,CAAC,EAAE,CAACE,kBAAkB,EAAEV,WAAW,EAAEE,YAAY,EAAEM,UAAU,CAAC,CAAC;EAE/D,oBACEhC,OAAA;IAAKwH,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBzH,OAAA;MAAKwH,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CzH,OAAA;QAAIwH,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACxEzH,OAAA,CAACZ,OAAO;UAACoI,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,wCAEtC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL7H,OAAA;QAAGwH,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAGlC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJ7H,OAAA;QAAKwH,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDzH,OAAA;UACEyE,IAAI,EAAC,MAAM;UACXqD,WAAW,EAAC,yBAAyB;UACrCC,KAAK,EAAE/F,UAAW;UAClBgG,QAAQ,EAAG5B,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAC9CP,SAAS,EAAC;QAAiH;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5H,CAAC,eACF7H,OAAA;UAAKwH,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtCzH,OAAA;YAAMwH,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpD7H,OAAA;YACE+H,KAAK,EAAErG,YAAa;YACpBsG,QAAQ,EAAG5B,CAAC,IAAKvB,wBAAwB,CAACqD,MAAM,CAAC9B,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAC,CAAE;YAClEP,SAAS,EAAC,mFAAmF;YAAAC,QAAA,gBAE7FzH,OAAA;cAAQ+H,KAAK,EAAE,EAAG;cAAAN,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9B7H,OAAA;cAAQ+H,KAAK,EAAE,EAAG;cAAAN,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9B7H,OAAA;cAAQ+H,KAAK,EAAE,EAAG;cAAAN,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9B7H,OAAA;cAAQ+H,KAAK,EAAE,GAAI;cAAAN,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChC7H,OAAA;cAAQ+H,KAAK,EAAE,GAAI;cAAAN,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN7H,OAAA;UAAKwH,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GACnCjG,WAAW,EAAC,UAAG,EAAC8C,IAAI,CAAC6D,GAAG,CAAC3G,WAAW,GAAGE,YAAY,EAAEE,UAAU,CAAC,EAAC,MAAI,EAACA,UAAU,CAACwG,cAAc,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/F,CAAC,eACN7H,OAAA;UACEqI,OAAO,EAAEpD,WAAY;UACrBqD,QAAQ,EAAE/H,OAAQ;UAClBiH,SAAS,EAAC,qGAAqG;UAAAC,QAAA,gBAE/GzH,OAAA,CAACX,SAAS;YAACmI,SAAS,EAAE,gBAAgBjH,OAAO,GAAG,cAAc,GAAG,EAAE;UAAG;YAAAmH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,WAE3E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL/F,UAAU,GAAG,CAAC,iBACb9B,OAAA;QAAKwH,SAAS,EAAC,6FAA6F;QAAAC,QAAA,gBAC1GzH,OAAA;UAAKwH,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,UAC7B,EAAE,CAACjG,WAAW,GAAG,CAAC,IAAIE,YAAY,GAAI,CAAC,EAAC,MAAI,EAAC4C,IAAI,CAAC6D,GAAG,CAAC3G,WAAW,GAAGE,YAAY,EAAEE,UAAU,CAAC,EAAC,MAAI,EAACA,UAAU,CAACwG,cAAc,CAAC,CAAC,EAAC,UACzI;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN7H,OAAA;UAAKwH,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtCzH,OAAA;YACEqI,OAAO,EAAEA,CAAA,KAAMzD,gBAAgB,CAACpD,WAAW,GAAG,CAAC,CAAE;YACjD8G,QAAQ,EAAE9G,WAAW,KAAK,CAAE;YAC5BgG,SAAS,EAAC,uHAAuH;YAAAC,QAAA,EAClI;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7H,OAAA;YAAKwH,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACrCc,KAAK,CAACC,IAAI,CAAC;cAAEC,MAAM,EAAEnE,IAAI,CAAC6D,GAAG,CAACrG,UAAU,EAAE,CAAC;YAAE,CAAC,EAAE,CAAC4G,CAAC,EAAEC,CAAC,KAAK;cACzD,IAAIxG,IAAY;cAChB,IAAIL,UAAU,IAAI,CAAC,EAAE;gBACnBK,IAAI,GAAGwG,CAAC,GAAG,CAAC;cACd,CAAC,MAAM,IAAInH,WAAW,IAAI,CAAC,EAAE;gBAC3BW,IAAI,GAAGwG,CAAC,GAAG,CAAC;cACR,CAAC,MAAM,IAAInH,WAAW,IAAIM,UAAU,GAAG,CAAC,EAAE;gBACxCK,IAAI,GAAGL,UAAU,GAAG,CAAC,GAAG6G,CAAC;cAC3B,CAAC,MAAM;gBACLxG,IAAI,GAAGX,WAAW,GAAG,CAAC,GAAGmH,CAAC;cAC5B;cACA,oBACE3I,OAAA;gBAEEqI,OAAO,EAAEA,CAAA,KAAMzD,gBAAgB,CAACzC,IAAI,CAAE;gBACtCqF,SAAS,EAAE,uCACThG,WAAW,KAAKW,IAAI,GAChB,wCAAwC,GACxC,mCAAmC,EACtC;gBAAAsF,QAAA,EAEFtF;cAAI,GARAA,IAAI;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASH,CAAC;YAEb,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN7H,OAAA;YACEqI,OAAO,EAAEA,CAAA,KAAMzD,gBAAgB,CAACpD,WAAW,GAAG,CAAC,CAAE;YACjD8G,QAAQ,EAAE9G,WAAW,KAAKM,UAAW;YACrC0F,SAAS,EAAC,uHAAuH;YAAAC,QAAA,EAClI;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,MAGZ,eACA7H,OAAA;MAAKwH,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CzH,OAAA;QAAIwH,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnF7H,OAAA;QAAGwH,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAElC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJ7H,OAAA;QAAKwH,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDzH,OAAA;UAAOwH,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC5CzH,OAAA;YACEyE,IAAI,EAAC,UAAU;YACfmE,OAAO,EAAE1H,WAAW,CAACE,aAAc;YACnC4G,QAAQ,EAAG5B,CAAC,IAAKjF,cAAc,CAAC0H,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEzH,aAAa,EAAEgF,CAAC,CAAC6B,MAAM,CAACW;YAAQ,CAAC,CAAC,CAAE;YACxFpB,SAAS,EAAC;UAA2D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACF7H,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAKwH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/D7H,OAAA;cAAKwH,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAA+C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAER7H,OAAA;UAAOwH,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC5CzH,OAAA;YACEyE,IAAI,EAAC,UAAU;YACfmE,OAAO,EAAE1H,WAAW,CAACG,YAAa;YAClC2G,QAAQ,EAAG5B,CAAC,IAAKjF,cAAc,CAAC0H,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAExH,YAAY,EAAE+E,CAAC,CAAC6B,MAAM,CAACW;YAAQ,CAAC,CAAC,CAAE;YACvFpB,SAAS,EAAC;UAA2D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACF7H,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAKwH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9D7H,OAAA;cAAKwH,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAwC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAER7H,OAAA;UAAOwH,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC5CzH,OAAA;YACEyE,IAAI,EAAC,UAAU;YACfmE,OAAO,EAAE1H,WAAW,CAACI,oBAAqB;YAC1C0G,QAAQ,EAAG5B,CAAC,IAAKjF,cAAc,CAAC0H,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEvH,oBAAoB,EAAE8E,CAAC,CAAC6B,MAAM,CAACW;YAAQ,CAAC,CAAC,CAAE;YAC/FpB,SAAS,EAAC;UAA2D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACF7H,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAKwH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtE7H,OAAA;cAAKwH,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAwC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAER7H,OAAA;UAAOwH,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC5CzH,OAAA;YACEyE,IAAI,EAAC,UAAU;YACfmE,OAAO,EAAE1H,WAAW,CAACK,eAAgB;YACrCyG,QAAQ,EAAG5B,CAAC,IAAKjF,cAAc,CAAC0H,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEtH,eAAe,EAAE6E,CAAC,CAAC6B,MAAM,CAACW;YAAQ,CAAC,CAAC,CAAE;YAC1FpB,SAAS,EAAC;UAA2D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACF7H,OAAA;YAAAyH,QAAA,gBACEzH,OAAA;cAAKwH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClE7H,OAAA;cAAKwH,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAsC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLhH,OAAO,iBACNb,OAAA;MAAKwH,SAAS,EAAE,oCACd3G,OAAO,CAAC4D,IAAI,KAAK,SAAS,GAAG,4BAA4B,GAAG,wBAAwB,EACnF;MAAAgD,QAAA,GACA5G,OAAO,CAAC4D,IAAI,KAAK,SAAS,gBACzBzE,OAAA,CAACR,WAAW;QAACgI,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExC7H,OAAA,CAACT,aAAa;QAACiI,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC1C,EACAhH,OAAO,CAAC6D,IAAI;IAAA;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,EAGAlH,WAAW,iBACVX,OAAA;MAAKwH,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CzH,OAAA;QAAIwH,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACxEzH,OAAA,CAACV,GAAG;UAACkI,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,mBAElC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEL7H,OAAA;QAAKwH,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAArH,qBAAA,GACvBO,WAAW,CAAC4F,cAAc,cAAAnG,qBAAA,uBAA1BA,qBAAA,CAA4BsD,GAAG,CAAC,CAACC,OAAY,EAAEyD,KAAa;UAAA,IAAA0B,qBAAA,EAAAC,qBAAA;UAAA,oBAC3D/I,OAAA;YAAiBwH,SAAS,EAAC,uCAAuC;YAAAC,QAAA,gBAChEzH,OAAA;cAAIwH,SAAS,EAAC,gCAAgC;cAAAC,QAAA,EAAE9D,OAAO,CAACE;YAAY;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAE1E7H,OAAA;cAAKwH,SAAS,EAAC,uCAAuC;cAAAC,QAAA,gBACpDzH,OAAA;gBAAKwH,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBACrCzH,OAAA;kBAAKwH,SAAS,EAAC,0DAA0D;kBAAAC,QAAA,gBACvEzH,OAAA,CAACL,WAAW;oBAAC6H,SAAS,EAAC;kBAAc;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,kBAE1C;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACN7H,OAAA;kBAAKwH,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAAqB,qBAAA,GACvBnF,OAAO,CAACwD,cAAc,cAAA2B,qBAAA,uBAAtBA,qBAAA,CAAwBpF,GAAG,CAAC,CAAC+B,OAAY,EAAEuD,MAAc,kBACxDhJ,OAAA;oBAAkBwH,SAAS,EAAC,qCAAqC;oBAAAC,QAAA,gBAC/DzH,OAAA;sBAAMwH,SAAS,EAAC,eAAe;sBAAAC,QAAA,GAAEhC,OAAO,CAAC4B,QAAQ,EAAC,GAAC;oBAAA;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC1D7H,OAAA;sBAAMwH,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAAEhC,OAAO,CAACE;oBAAM;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACrD7H,OAAA;sBAAMwH,SAAS,EAAE,6BACf/B,OAAO,CAAChB,IAAI,KAAK,UAAU,GAAG,2BAA2B,GACzDgB,OAAO,CAAChB,IAAI,KAAK,SAAS,GAAG,6BAA6B,GAC1D,2BAA2B,EAC1B;sBAAAgD,QAAA,GACAhC,OAAO,CAAChB,IAAI,KAAK,UAAU,gBAAGzE,OAAA,CAACF,QAAQ;wBAAC0H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,GAC1EpC,OAAO,CAAChB,IAAI,KAAK,SAAS,gBAAGzE,OAAA,CAACJ,IAAI;wBAAC4H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBACrE7H,OAAA,CAACH,IAAI;wBAAC2H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,EACxCpC,OAAO,CAAChB,IAAI;oBAAA;sBAAAiD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACT,CAAC;kBAAA,GAZCmB,MAAM;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAaX,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAEN7H,OAAA;gBAAKwH,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBACrCzH,OAAA;kBAAKwH,SAAS,EAAC,0DAA0D;kBAAAC,QAAA,gBACvEzH,OAAA,CAACZ,OAAO;oBAACoI,SAAS,EAAC;kBAAc;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBAEtC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACN7H,OAAA;kBAAKwH,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAAsB,qBAAA,GACvBpF,OAAO,CAAC2D,YAAY,cAAAyB,qBAAA,uBAApBA,qBAAA,CAAsBrF,GAAG,CAAC,CAAC+B,OAAY,EAAEuD,MAAc,kBACtDhJ,OAAA;oBAAkBwH,SAAS,EAAC,qCAAqC;oBAAAC,QAAA,gBAC/DzH,OAAA;sBAAMwH,SAAS,EAAC,eAAe;sBAAAC,QAAA,GAAEhC,OAAO,CAAC4B,QAAQ,EAAC,GAAC;oBAAA;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC1D7H,OAAA;sBAAMwH,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAAEhC,OAAO,CAACE;oBAAM;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACrD7H,OAAA;sBAAMwH,SAAS,EAAE,6BACf/B,OAAO,CAAChB,IAAI,KAAK,UAAU,GAAG,2BAA2B,GACzDgB,OAAO,CAAChB,IAAI,KAAK,SAAS,GAAG,6BAA6B,GAC1D,2BAA2B,EAC1B;sBAAAgD,QAAA,GACAhC,OAAO,CAAChB,IAAI,KAAK,UAAU,gBAAGzE,OAAA,CAACF,QAAQ;wBAAC0H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,GAC1EpC,OAAO,CAAChB,IAAI,KAAK,SAAS,gBAAGzE,OAAA,CAACJ,IAAI;wBAAC4H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBACrE7H,OAAA,CAACH,IAAI;wBAAC2H,SAAS,EAAC;sBAAqB;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,EACxCpC,OAAO,CAAChB,IAAI;oBAAA;sBAAAiD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACT,CAAC;kBAAA,GAZCmB,MAAM;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAaX,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,GArDET,KAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsDV,CAAC;QAAA,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD7H,OAAA;MAAKwH,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCzH,OAAA;QAAKwH,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3CzH,OAAA;UAAIwH,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvE7H,OAAA;UAAGwH,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GACjCpH,aAAa,CAACoI,MAAM,EAAC,sEACxB;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAELtH,OAAO,gBACNP,OAAA;QAAKwH,SAAS,EAAC,+BAA+B;QAAAC,QAAA,gBAC5CzH,OAAA,CAACX,SAAS;UAACmI,SAAS,EAAC;QAAmC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,6BAE7D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACJxH,aAAa,CAACoI,MAAM,KAAK,CAAC,gBAC5BzI,OAAA;QAAKwH,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEN7H,OAAA;QAAKwH,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EACtCpH,aAAa,CAACqD,GAAG,CAAEC,OAAO;UAAA,IAAAsF,iBAAA;UAAA,oBACzBjJ,OAAA;YAAuBwH,SAAS,EAAC,KAAK;YAAAC,QAAA,gBACpCzH,OAAA;cAAKwH,SAAS,EAAC,mCAAmC;cAAAC,QAAA,gBAChDzH,OAAA;gBACEqI,OAAO,EAAEA,CAAA,KAAMnD,oBAAoB,CAACvB,OAAO,CAACC,GAAG,CAAE;gBACjD4D,SAAS,EAAC,2DAA2D;gBAAAC,QAAA,GAEpE1G,cAAc,CAACsE,GAAG,CAAC1B,OAAO,CAACC,GAAG,CAAC,gBAC9B5D,OAAA,CAACP,WAAW;kBAAC+H,SAAS,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAEnC7H,OAAA,CAACN,YAAY;kBAAC8H,SAAS,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CACpC,eACD7H,OAAA;kBAAMwH,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,EAAE9D,OAAO,CAACG;gBAAY;kBAAA4D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACzE7H,OAAA;kBAAMwH,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,GAAC,GAAC,EAAC9D,OAAO,CAACM,aAAa,EAAC,YAAU;gBAAA;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3E,CAAC,eAET7H,OAAA;gBAAKwH,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAC,iBACtB,EAAC9D,OAAO,CAACI,QAAQ,CAAC0E,MAAM,GAAG,CAAC,GACzC,GAAG9E,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC4B,MAAM,IAAI,KAAK,MAAM,EAAAsD,iBAAA,GAAAtF,OAAO,CAACI,QAAQ,CAACJ,OAAO,CAACI,QAAQ,CAAC0E,MAAM,GAAG,CAAC,CAAC,cAAAQ,iBAAA,uBAA7CA,iBAAA,CAA+CtD,MAAM,KAAI,KAAK,EAAE,GAC5G,aAAa;cAAA;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EAGL9G,cAAc,CAACsE,GAAG,CAAC1B,OAAO,CAACC,GAAG,CAAC,iBAC9B5D,OAAA;cAAKwH,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClCzH,OAAA;gBAAKwH,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAC;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EAC9ElE,OAAO,CAACI,QAAQ,IAAIJ,OAAO,CAACI,QAAQ,CAAC0E,MAAM,GAAG,CAAC,gBAC9CzI,OAAA;gBAAKwH,SAAS,EAAC,sDAAsD;gBAAAC,QAAA,EAClE9D,OAAO,CAACI,QAAQ,CAACL,GAAG,CAAC,CAAC+B,OAAY,EAAE2B,KAAa,KAAK;kBACrD,MAAM,CAAC8B,QAAQ,CAAC,GAAG1D,cAAc,CAACC,OAAO,CAAC;kBAC1C,MAAM0D,WAAW,GAAGD,QAAQ,KAAK,CAAC,GAAG,UAAU,GAAGA,QAAQ,KAAK,CAAC,GAAG,SAAS,GAAG,MAAM;kBAErF,oBACElJ,OAAA;oBAAiBwH,SAAS,EAAE,kCAC1B2B,WAAW,KAAK,UAAU,GAAG,8BAA8B,GAC3DA,WAAW,KAAK,SAAS,GAAG,gCAAgC,GAC5D,8BAA8B,EAC7B;oBAAA1B,QAAA,gBACDzH,OAAA;sBAAKwH,SAAS,EAAC,mCAAmC;sBAAAC,QAAA,gBAChDzH,OAAA;wBAAMwH,SAAS,EAAC,2BAA2B;wBAAAC,QAAA,EACxChC,OAAO,CAACE,MAAM,IAAIF,OAAO,CAACG,cAAc,IAAI,WAAWwB,KAAK,GAAG,CAAC;sBAAE;wBAAAM,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC/D,CAAC,eACP7H,OAAA;wBAAMwH,SAAS,EAAE,6BACf2B,WAAW,KAAK,UAAU,GAAG,2BAA2B,GACxDA,WAAW,KAAK,SAAS,GAAG,6BAA6B,GACzD,2BAA2B,EAC1B;wBAAA1B,QAAA,EACA0B;sBAAW;wBAAAzB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACR,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACN7H,OAAA;sBAAKwH,SAAS,EAAC,qCAAqC;sBAAAC,QAAA,EACjDhC,OAAO,CAAC2D,UAAU,IAAI3D,OAAO,CAAC4D,OAAO,IAAI;oBAAY;sBAAA3B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnD,CAAC;kBAAA,GAnBET,KAAK;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAoBV,CAAC;gBAEV,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,gBAEN7H,OAAA;gBAAKwH,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAC9D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN;UAAA,GA7DOlE,OAAO,CAACC,GAAG;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA8DhB,CAAC;QAAA,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGN7H,OAAA;MAAKwH,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCzH,OAAA;QAAKwH,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,SAC9B,EAACpH,aAAa,CAACoI,MAAM,EAAC,2CACb,EAACpI,aAAa,CAACiJ,MAAM,CAAC,CAACC,GAAG,EAAE5F,OAAO,KAAK4F,GAAG,GAAG5F,OAAO,CAACM,aAAa,EAAE,CAAC,CAAC,EAAC,mBAC/E,EAAC/C,WAAW,CAACE,aAAa,GAAG,gBAAgB,GAAG,sBAAsB,EAAC,SAChF,EAACF,WAAW,CAACG,YAAY,GAAG,eAAe,GAAG,kBAAkB,EAAC,SACjE,EAACH,WAAW,CAACI,oBAAoB,GAAG,uBAAuB,GAAG,0BAA0B;MAAA;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,EACLhH,OAAO,iBACNb,OAAA;QAAKwH,SAAS,EAAE,oCAAoC3G,OAAO,CAAC4D,IAAI,KAAK,SAAS,GAAG,4BAA4B,GAAG,wBAAwB,EAAG;QAAAgD,QAAA,EACxI5G,OAAO,CAAC6D;MAAI;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAAC1H,EAAA,CAtiBIF,gBAAiD;AAAAuJ,EAAA,GAAjDvJ,gBAAiD;AAwiBvD,eAAeA,gBAAgB;AAAC,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}