{"ast":null,"code":"var _jsxFileName = \"D:\\\\DigiFloat\\\\LawChronicle\\\\frontend\\\\src\\\\components\\\\phase2\\\\StructureCleaner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Settings, RefreshCw, Play, Eye, AlertTriangle, CheckCircle } from 'lucide-react';\nimport FieldMappingEditor from './FieldMappingEditor';\nimport StatuteGroupList from './StatuteGroupList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StructureCleaner = ({\n  config\n}) => {\n  _s();\n  var _previewData$sample_c;\n  // Pagination and search state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(100);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [statuteGroups, setStatuteGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [cleaning, setCleaning] = useState(false);\n  const [previewData, setPreviewData] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [expandedGroups, setExpandedGroups] = useState(new Set());\n  const [fieldMappings, setFieldMappings] = useState([{\n    source: 'number',\n    target: 'section_number',\n    enabled: true\n  }, {\n    source: 'definition',\n    target: 'section_content',\n    enabled: true\n  }, {\n    source: 'content',\n    target: 'section_text',\n    enabled: true\n  }, {\n    source: 'year',\n    target: 'section_year',\n    enabled: true\n  }, {\n    source: 'date',\n    target: 'section_date',\n    enabled: true\n  }]);\n\n  // Fetch statute groups from normalized collection\n  const fetchStatuteGroups = useCallback(async () => {\n    setLoading(true);\n    try {\n      const skip = (currentPage - 1) * itemsPerPage;\n      const queryParams = new URLSearchParams({\n        limit: itemsPerPage.toString(),\n        skip: skip.toString(),\n        search: searchTerm || ''\n      });\n      const response = await fetch(`/api/v1/phase2/preview-normalized-structure?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      if (data.success && data.preview_data) {\n        var _data$pagination, _data$pagination2;\n        // Transform the data to match our interface\n        const groups = data.preview_data.map(statute => ({\n          _id: statute.statute_name || 'Unknown',\n          Statute_Name: statute.statute_name || 'Unknown',\n          Sections: statute.sections_preview || [],\n          section_count: statute.section_count || 0\n        }));\n        setStatuteGroups(groups);\n        // Set pagination info from backend response if available\n        setTotalItems(data.filtered_count || data.total_statutes || 0);\n        setTotalPages(((_data$pagination = data.pagination) === null || _data$pagination === void 0 ? void 0 : _data$pagination.total_pages) || Math.ceil((data.filtered_count || data.total_statutes || 0) / itemsPerPage));\n        setCurrentPage(((_data$pagination2 = data.pagination) === null || _data$pagination2 === void 0 ? void 0 : _data$pagination2.current_page) || currentPage);\n      } else {\n        setStatuteGroups([]);\n        setTotalItems(0);\n        setTotalPages(0);\n        setCurrentPage(1);\n        setMessage({\n          type: 'error',\n          text: data.message || 'Failed to fetch statute groups'\n        });\n      }\n    } catch (error) {\n      setStatuteGroups([]);\n      setTotalItems(0);\n      setTotalPages(0);\n      setCurrentPage(1);\n      setMessage({\n        type: 'error',\n        text: 'Error fetching statute groups'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Toggle group expansion\n  const toggleGroupExpansion = groupId => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Update field mapping\n  const updateFieldMapping = (index, field, value) => {\n    const newMappings = [...fieldMappings];\n    newMappings[index] = {\n      ...newMappings[index],\n      [field]: value\n    };\n    setFieldMappings(newMappings);\n  };\n\n  // Add new field mapping\n  const addFieldMapping = () => {\n    setFieldMappings([...fieldMappings, {\n      source: '',\n      target: '',\n      enabled: true\n    }]);\n  };\n\n  // Remove field mapping\n  const removeFieldMapping = index => {\n    const newMappings = fieldMappings.filter((_, i) => i !== index);\n    setFieldMappings(newMappings);\n  };\n\n  // Preview structure cleaning\n  const previewCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, create a preview based on current field mappings\n      const preview = {\n        success: true,\n        message: 'Structure cleaning preview generated',\n        sample_changes: statuteGroups.slice(0, 3).map(statute => ({\n          statute_name: statute.Statute_Name,\n          original_sections: statute.Sections.slice(0, 2).map(section => ({\n            original: section,\n            cleaned: fieldMappings.reduce((cleaned, mapping) => {\n              if (mapping.enabled && section[mapping.source] !== undefined) {\n                cleaned[mapping.target] = section[mapping.source];\n              }\n              return cleaned;\n            }, {})\n          }))\n        }))\n      };\n      setPreviewData(preview);\n      setMessage({\n        type: 'success',\n        text: 'Preview generated successfully'\n      });\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Error generating preview'\n      });\n    } finally {\n      setCleaning(false);\n    }\n  };\n\n  // Execute structure cleaning\n  const executeCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({\n        type: 'error',\n        text: 'Structure cleaning execution requires backend implementation for the new grouped schema'\n      });\n\n      // TODO: Implement backend endpoint to clean structure in grouped format\n      // This would need to:\n      // 1. Apply field mappings to all sections in all statutes\n      // 2. Clean and standardize field values\n      // 3. Update the normalized_statutes collection\n      // 4. Return summary of changes made\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Error executing structure cleaning'\n      });\n    } finally {\n      setCleaning(false);\n    }\n  };\n  useEffect(() => {\n    fetchStatuteGroups();\n  }, [fetchStatuteGroups]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Settings, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), \"Structure Cleaner - Grouped Schema\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Clean and standardize the structure of sections within each statute group. Map fields, clean values, and ensure consistency across all sections.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchStatuteGroups,\n          disabled: loading,\n          className: \"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: `w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), \"Refresh Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previewCleaning,\n          disabled: cleaning || statuteGroups.length === 0,\n          className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Eye, {\n            className: \"w-4 h-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), \"Preview Changes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCleaning,\n          disabled: cleaning || statuteGroups.length === 0,\n          className: \"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-4 h-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), \"Execute Cleaning\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldMappingEditor, {\n      fieldMappings: fieldMappings,\n      updateFieldMapping: updateFieldMapping,\n      addFieldMapping: addFieldMapping,\n      removeFieldMapping: removeFieldMapping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 rounded-lg flex items-center ${message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`,\n      children: [message.type === 'success' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"w-5 h-5 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AlertTriangle, {\n        className: \"w-5 h-5 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), message.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), previewData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Eye, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), \"Cleaning Preview\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: (_previewData$sample_c = previewData.sample_changes) === null || _previewData$sample_c === void 0 ? void 0 : _previewData$sample_c.map((statute, index) => {\n          var _statute$original_sec;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium text-gray-900 mb-3\",\n              children: statute.statute_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: (_statute$original_sec = statute.original_sections) === null || _statute$original_sec === void 0 ? void 0 : _statute$original_sec.map((section, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 p-3 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-gray-700 mb-2\",\n                    children: \"Original\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"text-xs text-gray-600 overflow-auto\",\n                    children: JSON.stringify(section.original, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-50 p-3 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm font-medium text-blue-700 mb-2\",\n                    children: \"Cleaned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"text-xs text-blue-600 overflow-auto\",\n                    children: JSON.stringify(section.cleaned, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, sIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 text-center text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n        className: \"w-8 h-8 mx-auto mb-2 animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), \"Loading statute groups...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StatuteGroupList, {\n      statuteGroups: statuteGroups,\n      selectedGroups: new Set() // Selection not used in StructureCleaner yet\n      ,\n      expandedGroups: expandedGroups,\n      expandedSections: new Set() // Section expansion not used in StructureCleaner yet\n      ,\n      editingId: null // Editing not used in StructureCleaner yet\n      ,\n      editingName: '',\n      onToggleSelection: () => {} // No-op for now\n      ,\n      onToggleGroupExpansion: toggleGroupExpansion,\n      onToggleSectionExpansion: () => {} // No-op for now\n      ,\n      onStartEdit: () => {} // No-op for now\n      ,\n      onEditNameChange: () => {} // No-op for now\n      ,\n      onSaveEdit: () => {} // No-op for now\n      ,\n      onCancelEdit: () => {} // No-op for now\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 rounded-lg p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"Total: \", statuteGroups.length, \" statute group(s) \\u2022 Total sections: \", statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0), \" \\u2022 Active mappings: \", fieldMappings.filter(m => m.enabled).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(StructureCleaner, \"P5zQLJfkjVcwsF+kfK63dACMRtI=\");\n_c = StructureCleaner;\nexport default StructureCleaner;\nvar _c;\n$RefreshReg$(_c, \"StructureCleaner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Settings","RefreshCw","Play","Eye","AlertTriangle","CheckCircle","FieldMappingEditor","StatuteGroupList","jsxDEV","_jsxDEV","StructureCleaner","config","_s","_previewData$sample_c","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","searchTerm","setSearchTerm","totalItems","setTotalItems","totalPages","setTotalPages","statuteGroups","setStatuteGroups","loading","setLoading","cleaning","setCleaning","previewData","setPreviewData","message","setMessage","expandedGroups","setExpandedGroups","Set","fieldMappings","setFieldMappings","source","target","enabled","fetchStatuteGroups","skip","queryParams","URLSearchParams","limit","toString","search","response","fetch","headers","localStorage","getItem","data","json","success","preview_data","_data$pagination","_data$pagination2","groups","map","statute","_id","statute_name","Statute_Name","Sections","sections_preview","section_count","filtered_count","total_statutes","pagination","total_pages","Math","ceil","current_page","type","text","error","toggleGroupExpansion","groupId","newExpanded","has","delete","add","updateFieldMapping","index","field","value","newMappings","addFieldMapping","removeFieldMapping","filter","_","i","previewCleaning","preview","sample_changes","slice","original_sections","section","original","cleaned","reduce","mapping","undefined","executeCleaning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","_statute$original_sec","sIndex","JSON","stringify","selectedGroups","expandedSections","editingId","editingName","onToggleSelection","onToggleGroupExpansion","onToggleSectionExpansion","onStartEdit","onEditNameChange","onSaveEdit","onCancelEdit","sum","m","_c","$RefreshReg$"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/StructureCleaner.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Settings, RefreshCw, Play, Eye, Save, AlertTriangle, CheckCircle, ChevronDown, ChevronRight, Database, X, Plus } from 'lucide-react';\nimport PaginationControls from './PaginationControls';\nimport FieldMappingEditor from './FieldMappingEditor';\nimport StatuteGroupList from './StatuteGroupList';\n\ninterface StatuteGroup {\n  _id: string;\n  Statute_Name: string;\n  Sections: any[];\n  section_count: number;\n}\n\ninterface FieldMapping {\n  source: string;\n  target: string;\n  enabled: boolean;\n}\n\ninterface StructureCleanerProps {\n  config: any;\n}\n\nconst StructureCleaner: React.FC<StructureCleanerProps> = ({ config }) => {\n  // Pagination and search state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(100);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [totalItems, setTotalItems] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [statuteGroups, setStatuteGroups] = useState<StatuteGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [cleaning, setCleaning] = useState(false);\n  const [previewData, setPreviewData] = useState<any>(null);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n  const [fieldMappings, setFieldMappings] = useState<FieldMapping[]>([\n    { source: 'number', target: 'section_number', enabled: true },\n    { source: 'definition', target: 'section_content', enabled: true },\n    { source: 'content', target: 'section_text', enabled: true },\n    { source: 'year', target: 'section_year', enabled: true },\n    { source: 'date', target: 'section_date', enabled: true }\n  ]);\n\n  // Fetch statute groups from normalized collection\n  const fetchStatuteGroups = useCallback(async () => {\n    setLoading(true);\n    try {\n      const skip = (currentPage - 1) * itemsPerPage;\n      const queryParams = new URLSearchParams({\n        limit: itemsPerPage.toString(),\n        skip: skip.toString(),\n        search: searchTerm || ''\n      });\n      const response = await fetch(`/api/v1/phase2/preview-normalized-structure?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      if (data.success && data.preview_data) {\n        // Transform the data to match our interface\n        const groups = data.preview_data.map((statute: any) => ({\n          _id: statute.statute_name || 'Unknown',\n          Statute_Name: statute.statute_name || 'Unknown',\n          Sections: statute.sections_preview || [],\n          section_count: statute.section_count || 0\n        }));\n        setStatuteGroups(groups);\n        // Set pagination info from backend response if available\n        setTotalItems(data.filtered_count || data.total_statutes || 0);\n        setTotalPages(data.pagination?.total_pages || Math.ceil((data.filtered_count || data.total_statutes || 0) / itemsPerPage));\n        setCurrentPage(data.pagination?.current_page || currentPage);\n      } else {\n        setStatuteGroups([]);\n        setTotalItems(0);\n        setTotalPages(0);\n        setCurrentPage(1);\n        setMessage({ type: 'error', text: data.message || 'Failed to fetch statute groups' });\n      }\n    } catch (error) {\n      setStatuteGroups([]);\n      setTotalItems(0);\n      setTotalPages(0);\n      setCurrentPage(1);\n      setMessage({ type: 'error', text: 'Error fetching statute groups' });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Toggle group expansion\n  const toggleGroupExpansion = (groupId: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupId)) {\n      newExpanded.delete(groupId);\n    } else {\n      newExpanded.add(groupId);\n    }\n    setExpandedGroups(newExpanded);\n  };\n\n  // Update field mapping\n  const updateFieldMapping = (index: number, field: keyof FieldMapping, value: any) => {\n    const newMappings = [...fieldMappings];\n    newMappings[index] = { ...newMappings[index], [field]: value };\n    setFieldMappings(newMappings);\n  };\n\n  // Add new field mapping\n  const addFieldMapping = () => {\n    setFieldMappings([...fieldMappings, { source: '', target: '', enabled: true }]);\n  };\n\n  // Remove field mapping\n  const removeFieldMapping = (index: number) => {\n    const newMappings = fieldMappings.filter((_, i) => i !== index);\n    setFieldMappings(newMappings);\n  };\n\n  // Preview structure cleaning\n  const previewCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, create a preview based on current field mappings\n      const preview = {\n        success: true,\n        message: 'Structure cleaning preview generated',\n        sample_changes: statuteGroups.slice(0, 3).map(statute => ({\n          statute_name: statute.Statute_Name,\n          original_sections: statute.Sections.slice(0, 2).map((section: any) => ({\n            original: section,\n            cleaned: fieldMappings.reduce((cleaned: any, mapping) => {\n              if (mapping.enabled && section[mapping.source] !== undefined) {\n                cleaned[mapping.target] = section[mapping.source];\n              }\n              return cleaned;\n            }, {})\n          }))\n        }))\n      };\n      \n      setPreviewData(preview);\n      setMessage({ type: 'success', text: 'Preview generated successfully' });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error generating preview' });\n    } finally {\n      setCleaning(false);\n    }\n  };\n\n  // Execute structure cleaning\n  const executeCleaning = async () => {\n    setCleaning(true);\n    try {\n      // For now, show a message that this feature needs backend implementation\n      setMessage({ \n        type: 'error', \n        text: 'Structure cleaning execution requires backend implementation for the new grouped schema' \n      });\n      \n      // TODO: Implement backend endpoint to clean structure in grouped format\n      // This would need to:\n      // 1. Apply field mappings to all sections in all statutes\n      // 2. Clean and standardize field values\n      // 3. Update the normalized_statutes collection\n      // 4. Return summary of changes made\n      \n    } catch (error) {\n      setMessage({ type: 'error', text: 'Error executing structure cleaning' });\n    } finally {\n      setCleaning(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStatuteGroups();\n  }, [fetchStatuteGroups]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n          <Settings className=\"w-5 h-5 mr-2\" />\n          Structure Cleaner - Grouped Schema\n        </h2>\n        <p className=\"text-gray-600 mb-4\">\n          Clean and standardize the structure of sections within each statute group. \n          Map fields, clean values, and ensure consistency across all sections.\n        </p>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-4 items-center\">\n          <button\n            onClick={fetchStatuteGroups}\n            disabled={loading}\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center\"\n          >\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh Data\n          </button>\n          \n          <button\n            onClick={previewCleaning}\n            disabled={cleaning || statuteGroups.length === 0}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            Preview Changes\n          </button>\n          \n          <button\n            onClick={executeCleaning}\n            disabled={cleaning || statuteGroups.length === 0}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center\"\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Execute Cleaning\n          </button>\n        </div>\n      </div>\n\n      {/* Field Mappings */}\n      <FieldMappingEditor\n        fieldMappings={fieldMappings}\n        updateFieldMapping={updateFieldMapping}\n        addFieldMapping={addFieldMapping}\n        removeFieldMapping={removeFieldMapping}\n      />\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center ${\n          message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircle className=\"w-5 h-5 mr-2\" />\n          ) : (\n            <AlertTriangle className=\"w-5 h-5 mr-2\" />\n          )}\n          {message.text}\n        </div>\n      )}\n\n      {/* Preview Data */}\n      {previewData && (\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Eye className=\"w-5 h-5 mr-2\" />\n            Cleaning Preview\n          </h3>\n          \n          <div className=\"space-y-4\">\n            {previewData.sample_changes?.map((statute: any, index: number) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">{statute.statute_name}</h4>\n                \n                <div className=\"space-y-3\">\n                  {statute.original_sections?.map((section: any, sIndex: number) => (\n                    <div key={sIndex} className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"bg-gray-50 p-3 rounded\">\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Original</div>\n                        <pre className=\"text-xs text-gray-600 overflow-auto\">\n                          {JSON.stringify(section.original, null, 2)}\n                        </pre>\n                      </div>\n                      \n                      <div className=\"bg-blue-50 p-3 rounded\">\n                        <div className=\"text-sm font-medium text-blue-700 mb-2\">Cleaned</div>\n                        <pre className=\"text-xs text-blue-600 overflow-auto\">\n                          {JSON.stringify(section.cleaned, null, 2)}\n                        </pre>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Statute Groups List */}\n      {loading ? (\n        <div className=\"p-8 text-center text-gray-500\">\n          <RefreshCw className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n          Loading statute groups...\n        </div>\n      ) : (\n        <StatuteGroupList\n          statuteGroups={statuteGroups}\n          selectedGroups={new Set()} // Selection not used in StructureCleaner yet\n          expandedGroups={expandedGroups}\n          expandedSections={new Set()} // Section expansion not used in StructureCleaner yet\n          editingId={null} // Editing not used in StructureCleaner yet\n          editingName={''}\n          onToggleSelection={() => {}} // No-op for now\n          onToggleGroupExpansion={toggleGroupExpansion}\n          onToggleSectionExpansion={() => {}} // No-op for now\n          onStartEdit={() => {}} // No-op for now\n          onEditNameChange={() => {}} // No-op for now\n          onSaveEdit={() => {}} // No-op for now\n          onCancelEdit={() => {}} // No-op for now\n        />\n      )}\n\n      {/* Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {statuteGroups.length} statute group(s) • \n          Total sections: {statuteGroups.reduce((sum, statute) => sum + statute.section_count, 0)} • \n          Active mappings: {fieldMappings.filter(m => m.enabled).length}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StructureCleaner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAQC,aAAa,EAAEC,WAAW,QAAsD,cAAc;AAE7I,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBlD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACxE;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAiB,EAAE,CAAC;EACtE,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAqD,IAAI,CAAC;EAChG,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAc,IAAIuC,GAAG,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAiB,CACjE;IAAE0C,MAAM,EAAE,QAAQ;IAAEC,MAAM,EAAE,gBAAgB;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC7D;IAAEF,MAAM,EAAE,YAAY;IAAEC,MAAM,EAAE,iBAAiB;IAAEC,OAAO,EAAE;EAAK,CAAC,EAClE;IAAEF,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAK,CAAC,EAC5D;IAAEF,MAAM,EAAE,MAAM;IAAEC,MAAM,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAK,CAAC,EACzD;IAAEF,MAAM,EAAE,MAAM;IAAEC,MAAM,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAK,CAAC,CAC1D,CAAC;;EAEF;EACA,MAAMC,kBAAkB,GAAG3C,WAAW,CAAC,YAAY;IACjD4B,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMgB,IAAI,GAAG,CAAC7B,WAAW,GAAG,CAAC,IAAIE,YAAY;MAC7C,MAAM4B,WAAW,GAAG,IAAIC,eAAe,CAAC;QACtCC,KAAK,EAAE9B,YAAY,CAAC+B,QAAQ,CAAC,CAAC;QAC9BJ,IAAI,EAAEA,IAAI,CAACI,QAAQ,CAAC,CAAC;QACrBC,MAAM,EAAE9B,UAAU,IAAI;MACxB,CAAC,CAAC;MACF,MAAM+B,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CN,WAAW,EAAE,EAAE;QACzFO,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACG,YAAY,EAAE;QAAA,IAAAC,gBAAA,EAAAC,iBAAA;QACrC;QACA,MAAMC,MAAM,GAAGN,IAAI,CAACG,YAAY,CAACI,GAAG,CAAEC,OAAY,KAAM;UACtDC,GAAG,EAAED,OAAO,CAACE,YAAY,IAAI,SAAS;UACtCC,YAAY,EAAEH,OAAO,CAACE,YAAY,IAAI,SAAS;UAC/CE,QAAQ,EAAEJ,OAAO,CAACK,gBAAgB,IAAI,EAAE;UACxCC,aAAa,EAAEN,OAAO,CAACM,aAAa,IAAI;QAC1C,CAAC,CAAC,CAAC;QACH3C,gBAAgB,CAACmC,MAAM,CAAC;QACxB;QACAvC,aAAa,CAACiC,IAAI,CAACe,cAAc,IAAIf,IAAI,CAACgB,cAAc,IAAI,CAAC,CAAC;QAC9D/C,aAAa,CAAC,EAAAmC,gBAAA,GAAAJ,IAAI,CAACiB,UAAU,cAAAb,gBAAA,uBAAfA,gBAAA,CAAiBc,WAAW,KAAIC,IAAI,CAACC,IAAI,CAAC,CAACpB,IAAI,CAACe,cAAc,IAAIf,IAAI,CAACgB,cAAc,IAAI,CAAC,IAAItD,YAAY,CAAC,CAAC;QAC1HD,cAAc,CAAC,EAAA4C,iBAAA,GAAAL,IAAI,CAACiB,UAAU,cAAAZ,iBAAA,uBAAfA,iBAAA,CAAiBgB,YAAY,KAAI7D,WAAW,CAAC;MAC9D,CAAC,MAAM;QACLW,gBAAgB,CAAC,EAAE,CAAC;QACpBJ,aAAa,CAAC,CAAC,CAAC;QAChBE,aAAa,CAAC,CAAC,CAAC;QAChBR,cAAc,CAAC,CAAC,CAAC;QACjBkB,UAAU,CAAC;UAAE2C,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAEvB,IAAI,CAACtB,OAAO,IAAI;QAAiC,CAAC,CAAC;MACvF;IACF,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdrD,gBAAgB,CAAC,EAAE,CAAC;MACpBJ,aAAa,CAAC,CAAC,CAAC;MAChBE,aAAa,CAAC,CAAC,CAAC;MAChBR,cAAc,CAAC,CAAC,CAAC;MACjBkB,UAAU,CAAC;QAAE2C,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAgC,CAAC,CAAC;IACtE,CAAC,SAAS;MACRlD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMoD,oBAAoB,GAAIC,OAAe,IAAK;IAChD,MAAMC,WAAW,GAAG,IAAI7C,GAAG,CAACF,cAAc,CAAC;IAC3C,IAAI+C,WAAW,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MAC5BC,WAAW,CAACE,MAAM,CAACH,OAAO,CAAC;IAC7B,CAAC,MAAM;MACLC,WAAW,CAACG,GAAG,CAACJ,OAAO,CAAC;IAC1B;IACA7C,iBAAiB,CAAC8C,WAAW,CAAC;EAChC,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAGA,CAACC,KAAa,EAAEC,KAAyB,EAAEC,KAAU,KAAK;IACnF,MAAMC,WAAW,GAAG,CAAC,GAAGpD,aAAa,CAAC;IACtCoD,WAAW,CAACH,KAAK,CAAC,GAAG;MAAE,GAAGG,WAAW,CAACH,KAAK,CAAC;MAAE,CAACC,KAAK,GAAGC;IAAM,CAAC;IAC9DlD,gBAAgB,CAACmD,WAAW,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BpD,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE;MAAEE,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC;EACjF,CAAC;;EAED;EACA,MAAMkD,kBAAkB,GAAIL,KAAa,IAAK;IAC5C,MAAMG,WAAW,GAAGpD,aAAa,CAACuD,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKR,KAAK,CAAC;IAC/DhD,gBAAgB,CAACmD,WAAW,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClClE,WAAW,CAAC,IAAI,CAAC;IACjB,IAAI;MACF;MACA,MAAMmE,OAAO,GAAG;QACdxC,OAAO,EAAE,IAAI;QACbxB,OAAO,EAAE,sCAAsC;QAC/CiE,cAAc,EAAEzE,aAAa,CAAC0E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACrC,GAAG,CAACC,OAAO,KAAK;UACxDE,YAAY,EAAEF,OAAO,CAACG,YAAY;UAClCkC,iBAAiB,EAAErC,OAAO,CAACI,QAAQ,CAACgC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACrC,GAAG,CAAEuC,OAAY,KAAM;YACrEC,QAAQ,EAAED,OAAO;YACjBE,OAAO,EAAEjE,aAAa,CAACkE,MAAM,CAAC,CAACD,OAAY,EAAEE,OAAO,KAAK;cACvD,IAAIA,OAAO,CAAC/D,OAAO,IAAI2D,OAAO,CAACI,OAAO,CAACjE,MAAM,CAAC,KAAKkE,SAAS,EAAE;gBAC5DH,OAAO,CAACE,OAAO,CAAChE,MAAM,CAAC,GAAG4D,OAAO,CAACI,OAAO,CAACjE,MAAM,CAAC;cACnD;cACA,OAAO+D,OAAO;YAChB,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC;MAEDvE,cAAc,CAACiE,OAAO,CAAC;MACvB/D,UAAU,CAAC;QAAE2C,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAiC,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd7C,UAAU,CAAC;QAAE2C,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAA2B,CAAC,CAAC;IACjE,CAAC,SAAS;MACRhD,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAM6E,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC7E,WAAW,CAAC,IAAI,CAAC;IACjB,IAAI;MACF;MACAI,UAAU,CAAC;QACT2C,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd7C,UAAU,CAAC;QAAE2C,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAqC,CAAC,CAAC;IAC3E,CAAC,SAAS;MACRhD,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED/B,SAAS,CAAC,MAAM;IACd4C,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,oBACEjC,OAAA;IAAKkG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBnG,OAAA;MAAKkG,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CnG,OAAA;QAAIkG,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACxEnG,OAAA,CAACT,QAAQ;UAAC2G,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,sCAEvC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvG,OAAA;QAAGkG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAGlC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAGJvG,OAAA;QAAKkG,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChDnG,OAAA;UACEwG,OAAO,EAAEvE,kBAAmB;UAC5BwE,QAAQ,EAAExF,OAAQ;UAClBiF,SAAS,EAAC,qGAAqG;UAAAC,QAAA,gBAE/GnG,OAAA,CAACR,SAAS;YAAC0G,SAAS,EAAE,gBAAgBjF,OAAO,GAAG,cAAc,GAAG,EAAE;UAAG;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE3E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETvG,OAAA;UACEwG,OAAO,EAAElB,eAAgB;UACzBmB,QAAQ,EAAEtF,QAAQ,IAAIJ,aAAa,CAAC2F,MAAM,KAAK,CAAE;UACjDR,SAAS,EAAC,qGAAqG;UAAAC,QAAA,gBAE/GnG,OAAA,CAACN,GAAG;YAACwG,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,mBAElC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETvG,OAAA;UACEwG,OAAO,EAAEP,eAAgB;UACzBQ,QAAQ,EAAEtF,QAAQ,IAAIJ,aAAa,CAAC2F,MAAM,KAAK,CAAE;UACjDR,SAAS,EAAC,uGAAuG;UAAAC,QAAA,gBAEjHnG,OAAA,CAACP,IAAI;YAACyG,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,oBAEnC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNvG,OAAA,CAACH,kBAAkB;MACjB+B,aAAa,EAAEA,aAAc;MAC7BgD,kBAAkB,EAAEA,kBAAmB;MACvCK,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA;IAAmB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAGDhF,OAAO,iBACNvB,OAAA;MAAKkG,SAAS,EAAE,oCACd3E,OAAO,CAAC4C,IAAI,KAAK,SAAS,GAAG,4BAA4B,GAAG,wBAAwB,EACnF;MAAAgC,QAAA,GACA5E,OAAO,CAAC4C,IAAI,KAAK,SAAS,gBACzBnE,OAAA,CAACJ,WAAW;QAACsG,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExCvG,OAAA,CAACL,aAAa;QAACuG,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC1C,EACAhF,OAAO,CAAC6C,IAAI;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,EAGAlF,WAAW,iBACVrB,OAAA;MAAKkG,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CnG,OAAA;QAAIkG,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACxEnG,OAAA,CAACN,GAAG;UAACwG,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,oBAElC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAELvG,OAAA;QAAKkG,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAA/F,qBAAA,GACvBiB,WAAW,CAACmE,cAAc,cAAApF,qBAAA,uBAA1BA,qBAAA,CAA4BgD,GAAG,CAAC,CAACC,OAAY,EAAEwB,KAAa;UAAA,IAAA8B,qBAAA;UAAA,oBAC3D3G,OAAA;YAAiBkG,SAAS,EAAC,uCAAuC;YAAAC,QAAA,gBAChEnG,OAAA;cAAIkG,SAAS,EAAC,gCAAgC;cAAAC,QAAA,EAAE9C,OAAO,CAACE;YAAY;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAE1EvG,OAAA;cAAKkG,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAAQ,qBAAA,GACvBtD,OAAO,CAACqC,iBAAiB,cAAAiB,qBAAA,uBAAzBA,qBAAA,CAA2BvD,GAAG,CAAC,CAACuC,OAAY,EAAEiB,MAAc,kBAC3D5G,OAAA;gBAAkBkG,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBAClDnG,OAAA;kBAAKkG,SAAS,EAAC,wBAAwB;kBAAAC,QAAA,gBACrCnG,OAAA;oBAAKkG,SAAS,EAAC,wCAAwC;oBAAAC,QAAA,EAAC;kBAAQ;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtEvG,OAAA;oBAAKkG,SAAS,EAAC,qCAAqC;oBAAAC,QAAA,EACjDU,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACC,QAAQ,EAAE,IAAI,EAAE,CAAC;kBAAC;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eAENvG,OAAA;kBAAKkG,SAAS,EAAC,wBAAwB;kBAAAC,QAAA,gBACrCnG,OAAA;oBAAKkG,SAAS,EAAC,wCAAwC;oBAAAC,QAAA,EAAC;kBAAO;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACrEvG,OAAA;oBAAKkG,SAAS,EAAC,qCAAqC;oBAAAC,QAAA,EACjDU,IAAI,CAACC,SAAS,CAACnB,OAAO,CAACE,OAAO,EAAE,IAAI,EAAE,CAAC;kBAAC;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA,GAbEK,MAAM;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcX,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA,GArBE1B,KAAK;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBV,CAAC;QAAA,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAtF,OAAO,gBACNjB,OAAA;MAAKkG,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC5CnG,OAAA,CAACR,SAAS;QAAC0G,SAAS,EAAC;MAAmC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,6BAE7D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENvG,OAAA,CAACF,gBAAgB;MACfiB,aAAa,EAAEA,aAAc;MAC7BgG,cAAc,EAAE,IAAIpF,GAAG,CAAC,CAAE,CAAC;MAAA;MAC3BF,cAAc,EAAEA,cAAe;MAC/BuF,gBAAgB,EAAE,IAAIrF,GAAG,CAAC,CAAE,CAAC;MAAA;MAC7BsF,SAAS,EAAE,IAAK,CAAC;MAAA;MACjBC,WAAW,EAAE,EAAG;MAChBC,iBAAiB,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MAC7BC,sBAAsB,EAAE9C,oBAAqB;MAC7C+C,wBAAwB,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MACpCC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MACvBC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MAC5BC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MACtBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;IAAA;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACF,eAGDvG,OAAA;MAAKkG,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACxCnG,OAAA;QAAKkG,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,SAC9B,EAACpF,aAAa,CAAC2F,MAAM,EAAC,2CACb,EAAC3F,aAAa,CAAC+E,MAAM,CAAC,CAAC4B,GAAG,EAAErE,OAAO,KAAKqE,GAAG,GAAGrE,OAAO,CAACM,aAAa,EAAE,CAAC,CAAC,EAAC,2BACvE,EAAC/B,aAAa,CAACuD,MAAM,CAACwC,CAAC,IAAIA,CAAC,CAAC3F,OAAO,CAAC,CAAC0E,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpG,EAAA,CAtSIF,gBAAiD;AAAA2H,EAAA,GAAjD3H,gBAAiD;AAwSvD,eAAeA,gBAAgB;AAAC,IAAA2H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}