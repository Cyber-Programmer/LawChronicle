{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Database,Activity,Play,Square,Download,CheckCircle,Clock,FileText,Zap,Settings,BarChart3}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Phase4Dashboard=()=>{var _status$total_documen;const[status,setStatus]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('configuration');// Processing Configuration State\nconst[processingMode,setProcessingMode]=useState('all');const[selectedBatch,setSelectedBatch]=useState('');const[collectionPrefix,setCollectionPrefix]=useState('batch');const[availableBatches,setAvailableBatches]=useState([]);// Additional configuration state\nconst[sourceDb,setSourceDb]=useState('Batched-Statutes');const[sourceCollection,setSourceCollection]=useState('');const[targetDb,setTargetDb]=useState('Date-Enriched-Batches');const[batchSize,setBatchSize]=useState(100);const[dryRun,setDryRun]=useState(false);const[testConnStatus,setTestConnStatus]=useState('idle');const[testConnMessage,setTestConnMessage]=useState('');const[testGptStatus,setTestGptStatus]=useState('idle');const[testGptMessage,setTestGptMessage]=useState('');// Processing State\nconst[isProcessing,setIsProcessing]=useState(false);const[progress,setProgress]=useState(null);const[processingComplete,setProcessingComplete]=useState(false);useEffect(()=>{fetchStatus();loadConfig();},[]);// Refetch available batches when sourceDb changes\nuseEffect(()=>{fetchAvailableBatches();},[sourceDb]);// Auto-select first available batch when switching to single mode\nuseEffect(()=>{if(processingMode==='single'&&availableBatches.length>0&&!selectedBatch){setSelectedBatch(availableBatches[0]);}},[processingMode,availableBatches,selectedBatch]);const loadConfig=()=>{try{var _cfg$dryRun;const raw=localStorage.getItem('phase4_config');if(!raw)return;const cfg=JSON.parse(raw);setSourceDb(cfg.sourceDb||'Batched-Statutes');setSourceCollection(cfg.sourceCollection||'');setTargetDb(cfg.targetDb||'Date-Enriched-Batches');setCollectionPrefix(cfg.collectionPrefix||'batch');setBatchSize(cfg.batchSize||100);setDryRun((_cfg$dryRun=cfg.dryRun)!==null&&_cfg$dryRun!==void 0?_cfg$dryRun:false);}catch(e){console.error('Failed to load Phase4 config',e);}};const handleSaveConfig=()=>{const cfg={sourceDb,sourceCollection,targetDb,collectionPrefix,batchSize,dryRun};try{localStorage.setItem('phase4_config',JSON.stringify(cfg));// small feedback - keep it minimal\nconsole.info('Phase4 configuration saved');}catch(e){console.error('Failed to save config',e);}};const handleResetConfig=()=>{setSourceDb('Batched-Statutes');setSourceCollection('');setTargetDb('Date-Enriched-Batches');setCollectionPrefix('batch');setBatchSize(100);setDryRun(false);localStorage.removeItem('phase4_config');};const handleTestConnection=async()=>{setTestConnStatus('testing');setTestConnMessage('Testing connection...');try{const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');const headers={'Content-Type':'application/json'};if(token)headers['Authorization']=\"Bearer \".concat(token);const body={connection_string:\"\",database_name:sourceDb,test_connection:true};const res=await fetch('/api/v1/database/connect',{method:'POST',headers,body:JSON.stringify(body)});const data=await res.json();if(res.ok&&data.success){var _data$data$collection,_data$data;setTestConnStatus('success');setTestConnMessage('Connection OK â€” '+((_data$data$collection=(_data$data=data.data)===null||_data$data===void 0?void 0:_data$data.collection_count)!==null&&_data$data$collection!==void 0?_data$data$collection:'unknown')+' collections');}else{setTestConnStatus('error');setTestConnMessage(data.detail||data.error||'Connection failed');}}catch(e){setTestConnStatus('error');setTestConnMessage(e.message||String(e));}};const handleTestGpt=async()=>{setTestGptStatus('testing');setTestGptMessage('Testing GPT...');try{const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');const headers={};if(token)headers['Authorization']=\"Bearer \".concat(token);const res=await fetch('/api/v1/phase4/test-gpt',{headers});const data=await res.json();if(res.ok&&data.success){setTestGptStatus('success');setTestGptMessage('GPT OK');}else{setTestGptStatus('error');setTestGptMessage(data.message||'GPT test failed');}}catch(e){setTestGptStatus('error');setTestGptMessage(e.message||String(e));}};const fetchStatus=async()=>{try{const headers={};const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');if(token)headers['Authorization']=\"Bearer \".concat(token);const res=await fetch('/api/v1/phase4/status',{headers});const data=await res.json();if(data.success){setStatus(data);}setLoading(false);}catch(e){console.error(e);setError('Failed to fetch status');setLoading(false);}};const fetchAvailableBatches=async()=>{try{const headers={};const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');if(token)headers['Authorization']=\"Bearer \".concat(token);const url=\"/api/v1/phase4/available-batches?db_name=\".concat(encodeURIComponent(sourceDb));const res=await fetch(url,{headers});const data=await res.json();if(data.success){var _data$batches;setAvailableBatches(data.batches||[]);if(((_data$batches=data.batches)===null||_data$batches===void 0?void 0:_data$batches.length)>0&&!selectedBatch){setSelectedBatch(data.batches[0]);}}}catch(e){console.error('Failed to fetch available batches:',e);}};const handleStartProcessing=async()=>{try{setIsProcessing(true);setProcessingComplete(false);setProgress(null);setActiveTab('processing');// Auto-navigate to processing tab\nconst headers={'Content-Type':'application/json'};const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');if(token)headers['Authorization']=\"Bearer \".concat(token);const requestBody={processing_mode:processingMode,selected_batch:processingMode==='single'?selectedBatch:null,collection_prefix:collectionPrefix,batch_size:batchSize,dry_run:dryRun,source_collection:sourceCollection};const response=await fetch('/api/v1/phase4/start-processing',{method:'POST',headers,body:JSON.stringify(requestBody)});if(response.ok){// Start listening for progress updates\nconst eventSource=new EventSource('/api/v1/phase4/processing-progress');eventSource.onmessage=event=>{const data=JSON.parse(event.data);setProgress(data);if(data.status==='completed'){setIsProcessing(false);setProcessingComplete(true);setActiveTab('results');// Auto-navigate to results tab when completed\neventSource.close();fetchStatus();}else if(data.status==='error'){var _data$log_messages;setIsProcessing(false);eventSource.close();setError('Processing failed: '+((_data$log_messages=data.log_messages)===null||_data$log_messages===void 0?void 0:_data$log_messages.slice(-1)[0]));}};eventSource.onerror=()=>{setIsProcessing(false);eventSource.close();setError('Connection to progress stream lost');};}else{setIsProcessing(false);setError('Failed to start processing');}}catch(error){console.error('Failed to start processing:',error);setIsProcessing(false);setError('Failed to start processing');}};const handleStopProcessing=async()=>{try{const headers={};const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');if(token)headers['Authorization']=\"Bearer \".concat(token);await fetch('/api/v1/phase4/stop-processing',{method:'POST',headers});setIsProcessing(false);setProgress(null);}catch(error){console.error('Failed to stop processing:',error);}};const handleExportResults=async()=>{try{const headers={};const token=localStorage.getItem('access_token')||sessionStorage.getItem('access_token');if(token)headers['Authorization']=\"Bearer \".concat(token);const response=await fetch('/api/v1/phase4/export-results',{headers});if(response.ok){const blob=await response.blob();const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"phase4_date_processed_results_\".concat(new Date().toISOString().split('T')[0],\".xlsx\");document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);}}catch(error){console.error('Failed to export results:',error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5 text-red-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-red-800\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-700\",children:error})]})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-bold text-gray-900 flex items-center\",children:[/*#__PURE__*/_jsx(Database,{className:\"h-8 w-8 text-blue-600 mr-3\"}),\"Phase 4: Enhanced Date Processing\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1\",children:\"Consolidate date fields and extract missing dates using AI assistance\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-4\",children:(status===null||status===void 0?void 0:status.database_info)&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Target Database\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:\"Date-Enriched-Batches\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"-mb-px flex space-x-8\",\"aria-label\":\"Tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('configuration'),className:\"whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm \".concat(activeTab==='configuration'?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(Settings,{className:\"h-5 w-5 inline mr-2\"}),\"Configuration\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('processing'),className:\"whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm \".concat(activeTab==='processing'?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(Activity,{className:\"h-5 w-5 inline mr-2\"}),\"Processing\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('results'),className:\"whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm \".concat(activeTab==='results'?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-5 w-5 inline mr-2\"}),\"Results & Export\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[activeTab==='configuration'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Settings,{className:\"h-5 w-5 text-gray-600 mr-2\"}),\"Configuration\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Source Database\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:sourceDb,onChange:e=>setSourceDb(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTestConnection,className:\"px-3 py-2 bg-blue-600 text-white rounded-md\",children:\"Test\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTestGpt,className:\"px-3 py-2 bg-indigo-600 text-white rounded-md\",children:\"Test GPT\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Click Test to verify backend connection to the configured backend MongoDB (backend config is used).\"}),testConnStatus!=='idle'&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-sm \".concat(testConnStatus==='success'?'text-green-700':'text-red-700'),children:testConnMessage}),testGptStatus!=='idle'&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-sm \".concat(testGptStatus==='success'?'text-green-700':'text-red-700'),children:testGptMessage})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Source Collection (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:sourceCollection,onChange:e=>setSourceCollection(e.target.value),placeholder:\"leave empty to use all batch_* collections\",className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Target Database\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:targetDb,onChange:e=>setTargetDb(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-3\",children:\"Processing Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"all\",checked:processingMode==='all',onChange:e=>setProcessingMode(e.target.value),className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm text-gray-700\",children:\"Process All Batches\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"single\",checked:processingMode==='single',onChange:e=>setProcessingMode(e.target.value),className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm text-gray-700\",children:\"Process Single Batch\"})]})]})]}),processingMode==='single'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Select Batch\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedBatch,onChange:e=>setSelectedBatch(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md\",children:availableBatches.map(batch=>/*#__PURE__*/_jsx(\"option\",{value:batch,children:batch},batch))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"md:col-span-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Target Collection Prefix\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:collectionPrefix,onChange:e=>setCollectionPrefix(e.target.value),placeholder:\"e.g., batch, filled, processed\",className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Output collections will be named: \",collectionPrefix,\"_1, \",collectionPrefix,\"_2, etc.\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Batch Size\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:batchSize,onChange:e=>setBatchSize(Number(e.target.value)||1),min:1,className:\"w-full px-3 py-2 border border-gray-300 rounded-md\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Number of documents to process per chunk (performance tuning).\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"md:col-span-2 border-l pl-4\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center text-sm font-medium text-gray-700 mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:dryRun,onChange:e=>setDryRun(e.target.checked),className:\"mr-2\"}),\"Dry Run (do not write to target DB)\"]})})]}),availableBatches.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-blue-50 rounded-lg\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-800\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Available Source Batches:\"}),\" \",availableBatches.join(', ')]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveConfig,className:\"px-4 py-2 bg-gray-100 rounded-md border\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetConfig,className:\"px-4 py-2 bg-white rounded-md border\",children:\"Reset\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('processing'),disabled:processingMode==='single'&&!selectedBatch,className:\"flex items-center px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\",children:[\"Next: Start Processing\",/*#__PURE__*/_jsx(Play,{className:\"h-4 w-4 ml-2\"})]})]})]})]}),activeTab==='processing'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Activity,{className:\"h-5 w-5 text-gray-600 mr-2\"}),\"Processing Control\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[!isProcessing?/*#__PURE__*/_jsxs(\"button\",{onClick:handleStartProcessing,disabled:processingMode==='single'&&!selectedBatch,className:\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\",children:[/*#__PURE__*/_jsx(Play,{className:\"h-4 w-4 mr-2\"}),\"Start Processing\"]}):/*#__PURE__*/_jsxs(\"button\",{onClick:handleStopProcessing,className:\"flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\",children:[/*#__PURE__*/_jsx(Square,{className:\"h-4 w-4 mr-2\"}),\"Stop Processing\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2 text-sm text-gray-600\",children:isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Clock,{className:\"h-4 w-4 text-orange-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing...\"})]}):processingComplete?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 text-green-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Completed\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Activity,{className:\"h-4 w-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Ready\"})]})})]}),(isProcessing||progress)&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:progress&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:\"Overall Progress\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[progress.documents_processed,\"/\",progress.total_documents,\" documents\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(progress.overall_progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right text-xs text-gray-500 mt-1\",children:[progress.overall_progress.toFixed(1),\"%\"]})]}),progress.current_batch&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-700\",children:[\"Current Batch: \",progress.current_batch]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[progress.current_batch_progress.toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(progress.current_batch_progress,\"%\")}})})]}),progress.current_document&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded-lg p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-4 w-4 text-gray-500 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Processing:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-700 ml-2 truncate\",children:progress.current_document})]})}),progress.batch_summary&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-green-800\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-green-900\",children:progress.batch_summary.completed_batches.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600\",children:progress.batch_summary.completed_batches.slice(-3).join(', ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-blue-800\",children:\"Current\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-blue-900\",children:progress.batch_summary.current_batch||'None'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-800\",children:\"Remaining\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-gray-900\",children:progress.batch_summary.remaining_batches.length})]})]})]})}),(progress===null||progress===void 0?void 0:progress.log_messages)&&progress.log_messages.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-md font-semibold mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(Zap,{className:\"h-4 w-4 text-gray-600 mr-2\"}),\"Live Processing Log\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-900 text-green-400 font-mono text-sm p-4 rounded-lg max-h-64 overflow-y-auto\",children:progress.log_messages.slice(-20).map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:message},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('configuration'),className:\"flex items-center px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\",children:\"Back to Configuration\"}),processingComplete&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('results'),className:\"flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\",children:[\"View Results\",/*#__PURE__*/_jsx(BarChart3,{className:\"h-4 w-4 ml-2\"})]})]})]}),activeTab==='results'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-5 w-5 text-gray-600 mr-2\"}),\"Results & Export\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 border border-green-200 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-green-800\",children:\"Processing Complete!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 mt-1\",children:\"Your date enrichment processing has finished successfully. You can now export the results.\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleExportResults,className:\"flex items-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 font-semibold\",children:[/*#__PURE__*/_jsx(Download,{className:\"h-5 w-5 mr-2\"}),\"Export to Excel\"]})]})}),status&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold mb-3\",children:\"Processing Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-blue-800\",children:\"Current Phase\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-blue-900\",children:status.current_phase})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-green-800\",children:\"Total Documents\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-green-900\",children:((_status$total_documen=status.total_documents)===null||_status$total_documen===void 0?void 0:_status$total_documen.toLocaleString())||'N/A'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-purple-800\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-purple-900\",children:status.status})]})]})]}),(progress===null||progress===void 0?void 0:progress.batch_summary)&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold mb-3\",children:\"Batch Processing Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-green-800\",children:\"Completed Batches\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-green-900\",children:progress.batch_summary.completed_batches.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-2\",children:progress.batch_summary.completed_batches.join(', ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-blue-800\",children:\"Documents Processed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-blue-900\",children:progress.documents_processed.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-purple-800\",children:\"Success Rate\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-purple-900\",children:[progress.overall_progress.toFixed(1),\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('processing'),className:\"flex items-center px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\",children:\"Back to Processing\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setActiveTab('configuration');setProcessingComplete(false);setProgress(null);},className:\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",children:\"Start New Processing\"})]})]})]})]})]});};export default Phase4Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Database","Activity","Play","Square","Download","CheckCircle","Clock","FileText","Zap","Settings","BarChart3","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Phase4Dashboard","_status$total_documen","status","setStatus","loading","setLoading","error","setError","activeTab","setActiveTab","processingMode","setProcessingMode","selectedBatch","setSelectedBatch","collectionPrefix","setCollectionPrefix","availableBatches","setAvailableBatches","sourceDb","setSourceDb","sourceCollection","setSourceCollection","targetDb","setTargetDb","batchSize","setBatchSize","dryRun","setDryRun","testConnStatus","setTestConnStatus","testConnMessage","setTestConnMessage","testGptStatus","setTestGptStatus","testGptMessage","setTestGptMessage","isProcessing","setIsProcessing","progress","setProgress","processingComplete","setProcessingComplete","fetchStatus","loadConfig","fetchAvailableBatches","length","_cfg$dryRun","raw","localStorage","getItem","cfg","JSON","parse","e","console","handleSaveConfig","setItem","stringify","info","handleResetConfig","removeItem","handleTestConnection","token","sessionStorage","headers","concat","body","connection_string","database_name","test_connection","res","fetch","method","data","json","ok","success","_data$data$collection","_data$data","collection_count","detail","message","String","handleTestGpt","url","encodeURIComponent","_data$batches","batches","handleStartProcessing","requestBody","processing_mode","selected_batch","collection_prefix","batch_size","dry_run","source_collection","response","eventSource","EventSource","onmessage","event","close","_data$log_messages","log_messages","slice","onerror","handleStopProcessing","handleExportResults","blob","window","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","split","appendChild","click","revokeObjectURL","removeChild","className","children","database_info","onClick","type","value","onChange","target","placeholder","checked","map","batch","Number","min","join","disabled","documents_processed","total_documents","style","width","overall_progress","toFixed","current_batch","current_batch_progress","current_document","batch_summary","completed_batches","remaining_batches","index","current_phase","toLocaleString"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/Phase4Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Database,\r\n  Activity,\r\n  Play,\r\n  Square,\r\n  Download,\r\n  CheckCircle,\r\n  Clock,\r\n  FileText,\r\n  Zap,\r\n  Settings,\r\n  BarChart3\r\n} from 'lucide-react';\r\n\r\ninterface Phase4Status {\r\n  current_phase: string;\r\n  total_documents?: number;\r\n  processed_documents?: number;\r\n  status: string;\r\n  available_batches?: string[];\r\n  database_info?: {\r\n    source_db: string;\r\n    target_db: string;\r\n    collections_count: number;\r\n  };\r\n}\r\n\r\ninterface ProcessingProgress {\r\n  overall_progress: number;\r\n  current_batch_progress: number;\r\n  current_document: string;\r\n  current_batch: string;\r\n  documents_processed: number;\r\n  total_documents: number;\r\n  status: string;\r\n  log_messages: string[];\r\n  batch_summary?: {\r\n    completed_batches: string[];\r\n    current_batch: string;\r\n    remaining_batches: string[];\r\n  };\r\n}\r\n\r\nconst Phase4Dashboard: React.FC = () => {\r\n  const [status, setStatus] = useState<Phase4Status | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [activeTab, setActiveTab] = useState<'configuration' | 'processing' | 'results'>('configuration');\r\n\r\n  // Processing Configuration State\r\n  const [processingMode, setProcessingMode] = useState<'single' | 'all'>('all');\r\n  const [selectedBatch, setSelectedBatch] = useState<string>('');\r\n  const [collectionPrefix, setCollectionPrefix] = useState('batch');\r\n  const [availableBatches, setAvailableBatches] = useState<string[]>([]);\r\n  // Additional configuration state\r\n  const [sourceDb, setSourceDb] = useState('Batched-Statutes');\r\n  const [sourceCollection, setSourceCollection] = useState('');\r\n  const [targetDb, setTargetDb] = useState('Date-Enriched-Batches');\r\n  const [batchSize, setBatchSize] = useState<number>(100);\r\n  const [dryRun, setDryRun] = useState<boolean>(false);\r\n  const [testConnStatus, setTestConnStatus] = useState<'idle' | 'testing' | 'success' | 'error'>('idle');\r\n  const [testConnMessage, setTestConnMessage] = useState<string>('');\r\n  const [testGptStatus, setTestGptStatus] = useState<'idle' | 'testing' | 'success' | 'error'>('idle');\r\n  const [testGptMessage, setTestGptMessage] = useState<string>('');\r\n  \r\n  // Processing State\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [progress, setProgress] = useState<ProcessingProgress | null>(null);\r\n  const [processingComplete, setProcessingComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchStatus();\r\n    loadConfig();\r\n  }, []);\r\n\r\n  // Refetch available batches when sourceDb changes\r\n  useEffect(() => {\r\n    fetchAvailableBatches();\r\n  }, [sourceDb]);\r\n\r\n  // Auto-select first available batch when switching to single mode\r\n  useEffect(() => {\r\n    if (processingMode === 'single' && availableBatches.length > 0 && !selectedBatch) {\r\n      setSelectedBatch(availableBatches[0]);\r\n    }\r\n  }, [processingMode, availableBatches, selectedBatch]);\r\n\r\n  const loadConfig = () => {\r\n    try {\r\n      const raw = localStorage.getItem('phase4_config');\r\n      if (!raw) return;\r\n      const cfg = JSON.parse(raw);\r\n      setSourceDb(cfg.sourceDb || 'Batched-Statutes');\r\n      setSourceCollection(cfg.sourceCollection || '');\r\n      setTargetDb(cfg.targetDb || 'Date-Enriched-Batches');\r\n      setCollectionPrefix(cfg.collectionPrefix || 'batch');\r\n      setBatchSize(cfg.batchSize || 100);\r\n      setDryRun(cfg.dryRun ?? false);\r\n    } catch (e) {\r\n      console.error('Failed to load Phase4 config', e);\r\n    }\r\n  };\r\n\r\n  const handleSaveConfig = () => {\r\n    const cfg = {\r\n      sourceDb,\r\n      sourceCollection,\r\n      targetDb,\r\n      collectionPrefix,\r\n      batchSize,\r\n      dryRun\r\n    };\r\n    try {\r\n      localStorage.setItem('phase4_config', JSON.stringify(cfg));\r\n      // small feedback - keep it minimal\r\n      console.info('Phase4 configuration saved');\r\n    } catch (e) {\r\n      console.error('Failed to save config', e);\r\n    }\r\n  };\r\n\r\n  const handleResetConfig = () => {\r\n    setSourceDb('Batched-Statutes');\r\n    setSourceCollection('');\r\n    setTargetDb('Date-Enriched-Batches');\r\n    setCollectionPrefix('batch');\r\n    setBatchSize(100);\r\n    setDryRun(false);\r\n    localStorage.removeItem('phase4_config');\r\n  };\r\n\r\n  const handleTestConnection = async () => {\r\n    setTestConnStatus('testing');\r\n    setTestConnMessage('Testing connection...');\r\n    try {\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      const headers: any = { 'Content-Type': 'application/json' };\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n\r\n      const body = {\r\n        connection_string: \"\",\r\n        database_name: sourceDb,\r\n        test_connection: true\r\n      };\r\n\r\n      const res = await fetch('/api/v1/database/connect', {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok && data.success) {\r\n        setTestConnStatus('success');\r\n        setTestConnMessage('Connection OK â€” ' + (data.data?.collection_count ?? 'unknown') + ' collections');\r\n      } else {\r\n        setTestConnStatus('error');\r\n        setTestConnMessage(data.detail || data.error || 'Connection failed');\r\n      }\r\n    } catch (e: any) {\r\n      setTestConnStatus('error');\r\n      setTestConnMessage(e.message || String(e));\r\n    }\r\n  };\r\n\r\n  const handleTestGpt = async () => {\r\n    setTestGptStatus('testing');\r\n    setTestGptMessage('Testing GPT...');\r\n    try {\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      const headers: any = {};\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n\r\n      const res = await fetch('/api/v1/phase4/test-gpt', { headers });\r\n      const data = await res.json();\r\n      if (res.ok && data.success) {\r\n        setTestGptStatus('success');\r\n        setTestGptMessage('GPT OK');\r\n      } else {\r\n        setTestGptStatus('error');\r\n        setTestGptMessage(data.message || 'GPT test failed');\r\n      }\r\n    } catch (e: any) {\r\n      setTestGptStatus('error');\r\n      setTestGptMessage(e.message || String(e));\r\n    }\r\n  };\r\n\r\n  const fetchStatus = async () => {\r\n    try {\r\n      const headers: any = {};\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n      \r\n      const res = await fetch('/api/v1/phase4/status', { headers });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setStatus(data);\r\n      }\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setError('Failed to fetch status');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAvailableBatches = async () => {\r\n    try {\r\n      const headers: any = {};\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n      \r\n  const url = `/api/v1/phase4/available-batches?db_name=${encodeURIComponent(sourceDb)}`;\r\n  const res = await fetch(url, { headers });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setAvailableBatches(data.batches || []);\r\n        if (data.batches?.length > 0 && !selectedBatch) {\r\n          setSelectedBatch(data.batches[0]);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to fetch available batches:', e);\r\n    }\r\n  };\r\n\r\n  const handleStartProcessing = async () => {\r\n    try {\r\n      setIsProcessing(true);\r\n      setProcessingComplete(false);\r\n      setProgress(null);\r\n      setActiveTab('processing'); // Auto-navigate to processing tab\r\n      \r\n      const headers: any = { 'Content-Type': 'application/json' };\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n      \r\n      const requestBody = {\r\n        processing_mode: processingMode,\r\n        selected_batch: processingMode === 'single' ? selectedBatch : null,\r\n  collection_prefix: collectionPrefix,\r\n  batch_size: batchSize,\r\n  dry_run: dryRun,\r\n  source_collection: sourceCollection\r\n      };\r\n      \r\n      const response = await fetch('/api/v1/phase4/start-processing', {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Start listening for progress updates\r\n        const eventSource = new EventSource('/api/v1/phase4/processing-progress');\r\n        eventSource.onmessage = (event) => {\r\n          const data: ProcessingProgress = JSON.parse(event.data);\r\n          setProgress(data);\r\n          \r\n          if (data.status === 'completed') {\r\n            setIsProcessing(false);\r\n            setProcessingComplete(true);\r\n            setActiveTab('results'); // Auto-navigate to results tab when completed\r\n            eventSource.close();\r\n            fetchStatus();\r\n          } else if (data.status === 'error') {\r\n            setIsProcessing(false);\r\n            eventSource.close();\r\n            setError('Processing failed: ' + data.log_messages?.slice(-1)[0]);\r\n          }\r\n        };\r\n        \r\n        eventSource.onerror = () => {\r\n          setIsProcessing(false);\r\n          eventSource.close();\r\n          setError('Connection to progress stream lost');\r\n        };\r\n      } else {\r\n        setIsProcessing(false);\r\n        setError('Failed to start processing');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to start processing:', error);\r\n      setIsProcessing(false);\r\n      setError('Failed to start processing');\r\n    }\r\n  };\r\n\r\n  const handleStopProcessing = async () => {\r\n    try {\r\n      const headers: any = {};\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n      \r\n      await fetch('/api/v1/phase4/stop-processing', {\r\n        method: 'POST',\r\n        headers\r\n      });\r\n      \r\n      setIsProcessing(false);\r\n      setProgress(null);\r\n    } catch (error) {\r\n      console.error('Failed to stop processing:', error);\r\n    }\r\n  };\r\n\r\n  const handleExportResults = async () => {\r\n    try {\r\n      const headers: any = {};\r\n      const token = localStorage.getItem('access_token') || sessionStorage.getItem('access_token');\r\n      if (token) headers['Authorization'] = `Bearer ${token}`;\r\n      \r\n      const response = await fetch('/api/v1/phase4/export-results', {\r\n        headers\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `phase4_date_processed_results_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to export results:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n        <div className=\"flex\">\r\n          <div className=\"flex-shrink-0\">\r\n            <CheckCircle className=\"h-5 w-5 text-red-400\" />\r\n          </div>\r\n          <div className=\"ml-3\">\r\n            <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\r\n            <p className=\"mt-1 text-sm text-red-700\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\r\n              <Database className=\"h-8 w-8 text-blue-600 mr-3\" />\r\n              Phase 4: Enhanced Date Processing\r\n            </h2>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Consolidate date fields and extract missing dates using AI assistance\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            {status?.database_info && (\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-500\">Target Database</p>\r\n                <p className=\"font-medium\">Date-Enriched-Batches</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\r\n            <button\r\n              onClick={() => setActiveTab('configuration')}\r\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm ${\r\n                activeTab === 'configuration'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <Settings className=\"h-5 w-5 inline mr-2\" />\r\n              Configuration\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('processing')}\r\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm ${\r\n                activeTab === 'processing'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <Activity className=\"h-5 w-5 inline mr-2\" />\r\n              Processing\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('results')}\r\n              className={`whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm ${\r\n                activeTab === 'results'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <BarChart3 className=\"h-5 w-5 inline mr-2\" />\r\n              Results & Export\r\n            </button>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"p-6\">\r\n          {activeTab === 'configuration' && (\r\n            <div className=\"space-y-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n                <Settings className=\"h-5 w-5 text-gray-600 mr-2\" />\r\n                Configuration\r\n              </h3>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  {/* Mongo URI removed - backend-managed */}\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Source Database</label>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <input type=\"text\" value={sourceDb} onChange={(e) => setSourceDb(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n                      <button onClick={handleTestConnection} className=\"px-3 py-2 bg-blue-600 text-white rounded-md\">Test</button>\r\n                      <button onClick={handleTestGpt} className=\"px-3 py-2 bg-indigo-600 text-white rounded-md\">Test GPT</button>\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 mt-1\">Click Test to verify backend connection to the configured backend MongoDB (backend config is used).</p>\r\n                    {testConnStatus !== 'idle' && (\r\n                      <div className={`mt-2 text-sm ${testConnStatus === 'success' ? 'text-green-700' : 'text-red-700'}`}>{testConnMessage}</div>\r\n                    )}\r\n                    {testGptStatus !== 'idle' && (\r\n                      <div className={`mt-2 text-sm ${testGptStatus === 'success' ? 'text-green-700' : 'text-red-700'}`}>{testGptMessage}</div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Source Collection (optional)</label>\r\n                    <input type=\"text\" value={sourceCollection} onChange={(e) => setSourceCollection(e.target.value)} placeholder=\"leave empty to use all batch_* collections\" className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Target Database</label>\r\n                    <input type=\"text\" value={targetDb} onChange={(e) => setTargetDb(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                  {/* Processing Mode Selection */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">Processing Mode</label>\r\n                    <div className=\"space-y-2\">\r\n                      <label className=\"flex items-center\">\r\n                        <input type=\"radio\" value=\"all\" checked={processingMode === 'all'} onChange={(e) => setProcessingMode(e.target.value as 'single' | 'all')} className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\" />\r\n                        <span className=\"ml-2 text-sm text-gray-700\">Process All Batches</span>\r\n                      </label>\r\n                      <label className=\"flex items-center\">\r\n                        <input type=\"radio\" value=\"single\" checked={processingMode === 'single'} onChange={(e) => setProcessingMode(e.target.value as 'single' | 'all')} className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\" />\r\n                        <span className=\"ml-2 text-sm text-gray-700\">Process Single Batch</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Batch Selection (only when single mode) */}\r\n                  {processingMode === 'single' && (\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Batch</label>\r\n                      <select value={selectedBatch} onChange={(e) => setSelectedBatch(e.target.value)} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\">\r\n                        {availableBatches.map((batch) => (\r\n                          <option key={batch} value={batch}>{batch}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Collection Prefix */}\r\n                  <div className=\"md:col-span-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Target Collection Prefix</label>\r\n                    <input type=\"text\" value={collectionPrefix} onChange={(e) => setCollectionPrefix(e.target.value)} placeholder=\"e.g., batch, filled, processed\" className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n                    <p className=\"text-xs text-gray-500 mt-1\">Output collections will be named: {collectionPrefix}_1, {collectionPrefix}_2, etc.</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Batch Size</label>\r\n                    <input type=\"number\" value={batchSize} onChange={(e) => setBatchSize(Number(e.target.value) || 1)} min={1} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n                    <p className=\"text-xs text-gray-500 mt-1\">Number of documents to process per chunk (performance tuning).</p>\r\n                  </div>\r\n\r\n                  <div className=\"md:col-span-2 border-l pl-4\">\r\n                    <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n                      <input type=\"checkbox\" checked={dryRun} onChange={(e) => setDryRun(e.target.checked)} className=\"mr-2\" />\r\n                      Dry Run (do not write to target DB)\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Azure OpenAI config is backend-managed; UI fields removed */}\r\n\r\n                {/* Available Batches Info */}\r\n                {availableBatches.length > 0 && (\r\n                  <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n                    <p className=\"text-sm text-blue-800\"><strong>Available Source Batches:</strong> {availableBatches.join(', ')}</p>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex justify-end space-x-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <button onClick={handleSaveConfig} className=\"px-4 py-2 bg-gray-100 rounded-md border\">Save</button>\r\n                    <button onClick={handleResetConfig} className=\"px-4 py-2 bg-white rounded-md border\">Reset</button>\r\n                  </div>\r\n\r\n                  <button onClick={() => setActiveTab('processing')} disabled={processingMode === 'single' && !selectedBatch} className=\"flex items-center px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\">\r\n                    Next: Start Processing\r\n                    <Play className=\"h-4 w-4 ml-2\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'processing' && (\r\n            <div className=\"space-y-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n                <Activity className=\"h-5 w-5 text-gray-600 mr-2\" />\r\n                Processing Control\r\n              </h3>\r\n              \r\n              <div className=\"flex items-center space-x-4\">\r\n                {!isProcessing ? (\r\n                  <button\r\n                    onClick={handleStartProcessing}\r\n                    disabled={processingMode === 'single' && !selectedBatch}\r\n                    className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                  >\r\n                    <Play className=\"h-4 w-4 mr-2\" />\r\n                    Start Processing\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={handleStopProcessing}\r\n                    className=\"flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                  >\r\n                    <Square className=\"h-4 w-4 mr-2\" />\r\n                    Stop Processing\r\n                  </button>\r\n                )}\r\n\r\n                <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n                  {isProcessing ? (\r\n                    <>\r\n                      <Clock className=\"h-4 w-4 text-orange-500\" />\r\n                      <span>Processing...</span>\r\n                    </>\r\n                  ) : processingComplete ? (\r\n                    <>\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                      <span>Completed</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Activity className=\"h-4 w-4 text-gray-400\" />\r\n                      <span>Ready</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Progress Visualization */}\r\n              {(isProcessing || progress) && (\r\n                <div className=\"space-y-4\">\r\n                  {progress && (\r\n                    <div className=\"space-y-4\">\r\n                      {/* Overall Progress */}\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center mb-2\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">Overall Progress</span>\r\n                          <span className=\"text-sm text-gray-600\">\r\n                            {progress.documents_processed}/{progress.total_documents} documents\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                          <div\r\n                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${progress.overall_progress}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"text-right text-xs text-gray-500 mt-1\">\r\n                          {progress.overall_progress.toFixed(1)}%\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Current Batch Progress */}\r\n                      {progress.current_batch && (\r\n                        <div>\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <span className=\"text-sm font-medium text-gray-700\">\r\n                              Current Batch: {progress.current_batch}\r\n                            </span>\r\n                            <span className=\"text-sm text-gray-600\">\r\n                              {progress.current_batch_progress.toFixed(1)}%\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                            <div\r\n                              className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                              style={{ width: `${progress.current_batch_progress}%` }}\r\n                            ></div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Current Document */}\r\n                      {progress.current_document && (\r\n                        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                          <div className=\"flex items-center\">\r\n                            <FileText className=\"h-4 w-4 text-gray-500 mr-2\" />\r\n                            <span className=\"text-sm font-medium\">Processing:</span>\r\n                            <span className=\"text-sm text-gray-700 ml-2 truncate\">\r\n                              {progress.current_document}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Batch Summary */}\r\n                      {progress.batch_summary && (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n                          <div className=\"bg-green-50 p-3 rounded-lg\">\r\n                            <div className=\"text-sm font-medium text-green-800\">Completed</div>\r\n                            <div className=\"text-lg font-bold text-green-900\">\r\n                              {progress.batch_summary.completed_batches.length}\r\n                            </div>\r\n                            <div className=\"text-xs text-green-600\">\r\n                              {progress.batch_summary.completed_batches.slice(-3).join(', ')}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n                            <div className=\"text-sm font-medium text-blue-800\">Current</div>\r\n                            <div className=\"text-lg font-bold text-blue-900\">\r\n                              {progress.batch_summary.current_batch || 'None'}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"bg-gray-50 p-3 rounded-lg\">\r\n                            <div className=\"text-sm font-medium text-gray-800\">Remaining</div>\r\n                            <div className=\"text-lg font-bold text-gray-900\">\r\n                              {progress.batch_summary.remaining_batches.length}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Live Log */}\r\n              {progress?.log_messages && progress.log_messages.length > 0 && (\r\n                <div>\r\n                  <h4 className=\"text-md font-semibold mb-3 flex items-center\">\r\n                    <Zap className=\"h-4 w-4 text-gray-600 mr-2\" />\r\n                    Live Processing Log\r\n                  </h4>\r\n                  \r\n                  <div className=\"bg-gray-900 text-green-400 font-mono text-sm p-4 rounded-lg max-h-64 overflow-y-auto\">\r\n                    {progress.log_messages.slice(-20).map((message, index) => (\r\n                      <div key={index} className=\"mb-1\">\r\n                        {message}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Navigation */}\r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  onClick={() => setActiveTab('configuration')}\r\n                  className=\"flex items-center px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  Back to Configuration\r\n                </button>\r\n                {processingComplete && (\r\n                  <button\r\n                    onClick={() => setActiveTab('results')}\r\n                    className=\"flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\r\n                  >\r\n                    View Results\r\n                    <BarChart3 className=\"h-4 w-4 ml-2\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'results' && (\r\n            <div className=\"space-y-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n                <BarChart3 className=\"h-5 w-5 text-gray-600 mr-2\" />\r\n                Results & Export\r\n              </h3>\r\n\r\n              {/* Export Controls */}\r\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h4 className=\"text-lg font-semibold text-green-800\">Processing Complete!</h4>\r\n                    <p className=\"text-green-700 mt-1\">\r\n                      Your date enrichment processing has finished successfully. You can now export the results.\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    onClick={handleExportResults}\r\n                    className=\"flex items-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 font-semibold\"\r\n                  >\r\n                    <Download className=\"h-5 w-5 mr-2\" />\r\n                    Export to Excel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Status Summary */}\r\n              {status && (\r\n                <div>\r\n                  <h4 className=\"text-md font-semibold mb-3\">Processing Summary</h4>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-blue-800\">Current Phase</div>\r\n                      <div className=\"text-lg font-bold text-blue-900\">{status.current_phase}</div>\r\n                    </div>\r\n                    <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-green-800\">Total Documents</div>\r\n                      <div className=\"text-lg font-bold text-green-900\">\r\n                        {status.total_documents?.toLocaleString() || 'N/A'}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-purple-800\">Status</div>\r\n                      <div className=\"text-lg font-bold text-purple-900\">{status.status}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Final Batch Summary */}\r\n              {progress?.batch_summary && (\r\n                <div>\r\n                  <h4 className=\"text-md font-semibold mb-3\">Batch Processing Results</h4>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-green-800\">Completed Batches</div>\r\n                      <div className=\"text-lg font-bold text-green-900\">\r\n                        {progress.batch_summary.completed_batches.length}\r\n                      </div>\r\n                      <div className=\"text-xs text-green-600 mt-2\">\r\n                        {progress.batch_summary.completed_batches.join(', ')}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-blue-800\">Documents Processed</div>\r\n                      <div className=\"text-lg font-bold text-blue-900\">\r\n                        {progress.documents_processed.toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n                      <div className=\"text-sm font-medium text-purple-800\">Success Rate</div>\r\n                      <div className=\"text-lg font-bold text-purple-900\">\r\n                        {progress.overall_progress.toFixed(1)}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Navigation */}\r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  onClick={() => setActiveTab('processing')}\r\n                  className=\"flex items-center px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  Back to Processing\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setActiveTab('configuration');\r\n                    setProcessingComplete(false);\r\n                    setProgress(null);\r\n                  }}\r\n                  className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                >\r\n                  Start New Processing\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phase4Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}