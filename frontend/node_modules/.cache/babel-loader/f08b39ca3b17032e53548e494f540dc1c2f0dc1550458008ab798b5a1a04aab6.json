{"ast":null,"code":"import _objectSpread from\"D:/DigiFloat/LawChronicle/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Scissors,Database,Settings,History,Eye,RotateCcw,Split,Layers}from'lucide-react';// Configuration interface - updated to match CLI flow\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Default configuration - matches CLI scripts\nconst DEFAULT_CONFIG={source_database:\"Statutes\",source_collection:\"normalized_statutes\",target_database:\"Batched-Statutes\",target_collection_prefix:\"batch_\",batch_size:10,enable_ai_cleaning:false};const Phase3=()=>{var _status$collection_st,_status$collection_st2,_status$collection_st3,_status$collection_st4,_statistics$statistic,_statistics$statistic2,_statistics$statistic3,_statistics$statistic4,_statistics$statistic5,_statistics$statistic6,_statistics$statistic7,_statistics$statistic8,_statistics$statistic9,_statistics$statistic0,_statistics$statistic1,_statistics$statistic10,_statistics$statistic11,_statistics$statistic12,_statistics$statistic13;const[activeTab,setActiveTab]=useState('overview');const[config,setConfig]=useState(DEFAULT_CONFIG);const[isProcessing,setIsProcessing]=useState(false);const[status,setStatus]=useState(null);const[statistics,setStatistics]=useState(null);const[batchPreview,setBatchPreview]=useState(null);const[history,setHistory]=useState(null);const[availableBatches,setAvailableBatches]=useState(null);const[selectedBatches,setSelectedBatches]=useState([]);const[cleanAllBatches,setCleanAllBatches]=useState(true);const[expandedStatutes,setExpandedStatutes]=useState({});const[expandedSections,setExpandedSections]=useState({});// Load config from localStorage on mount\nuseEffect(()=>{const savedConfig=localStorage.getItem('phase3_config');if(savedConfig){try{setConfig(JSON.parse(savedConfig));}catch(error){console.error('Error loading Phase 3 config:',error);}}},[]);// Save config to localStorage when it changes\nuseEffect(()=>{localStorage.setItem('phase3_config',JSON.stringify(config));},[config]);// Update configuration\nconst updateConfig=updates=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),updates));};// Reset configuration to defaults\nconst resetConfig=()=>{setConfig(DEFAULT_CONFIG);};// Fetch Phase 3 status\nconst fetchStatus=async()=>{try{const response=await fetch('/api/v1/phase3/status');if(response.ok){const data=await response.json();setStatus(data);}}catch(error){console.error('Error fetching Phase 3 status:',error);}};// Fetch statistics\nconst fetchStatistics=async()=>{try{const response=await fetch('/api/v1/phase3/statistics',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setStatistics(data);}}catch(error){console.error('Error fetching Phase 3 statistics:',error);}};// Fetch batch preview\nconst fetchBatchPreview=async()=>{try{const response=await fetch('/api/v1/phase3/preview-batches',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setBatchPreview(data);}}catch(error){console.error('Error fetching batch preview:',error);}};// Fetch history\nconst fetchHistory=async()=>{try{const response=await fetch('/api/v1/phase3/history');if(response.ok){const data=await response.json();setHistory(data);}}catch(error){console.error('Error fetching history:',error);}};// Fetch available batches for cleaning\nconst fetchAvailableBatches=async()=>{try{const response=await fetch('/api/v1/phase3/available-batches',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const data=await response.json();setAvailableBatches(data);}}catch(error){console.error('Error fetching available batches:',error);}};// Generate metadata\nconst generateMetadata=async()=>{try{const response=await fetch('/api/v1/phase3/generate-metadata',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const result=await response.json();alert(\"Metadata generated successfully! File: \".concat(result.metadata_file));fetchHistory();}else{const error=await response.json();alert(\"Error generating metadata: \".concat(error.detail));}}catch(error){console.error('Error generating metadata:',error);alert('Failed to generate metadata');}};// Start section splitting using modern service endpoint\nconst startSectionSplitting=async()=>{setIsProcessing(true);try{// Use the new process-statute service endpoint\nconst statuteRequest={statute_text:\"Processing batches from \".concat(config.source_collection),metadata:{source_database:config.source_database,source_collection:config.source_collection,target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_size:config.batch_size,processing_type:\"section_splitting\"}};const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(statuteRequest)});if(response.ok){var _result$data,_result$data$sections;const result=await response.json();alert(\"Section splitting completed successfully! \".concat(((_result$data=result.data)===null||_result$data===void 0?void 0:(_result$data$sections=_result$data.sections)===null||_result$data$sections===void 0?void 0:_result$data$sections.length)||0,\" sections processed.\"));fetchStatus();}else{const error=await response.json();alert(\"Error starting section splitting: \".concat(error.detail));}}catch(error){console.error('Error starting section splitting:',error);alert('Failed to start section splitting');}finally{setIsProcessing(false);}};// Start field cleaning using modern service endpoint\nconst startFieldCleaning=async()=>{setIsProcessing(true);try{// Use the new process-statute service endpoint for field cleaning\nconst statuteRequest={statute_text:\"Field cleaning batches from \".concat(config.target_database),metadata:{target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_size:config.batch_size,enable_ai_cleaning:config.enable_ai_cleaning,processing_type:\"field_cleaning\"}};const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(statuteRequest)});if(response.ok){var _result$data2,_result$data2$metadat;const result=await response.json();alert(\"Field cleaning completed successfully! Processed \".concat(((_result$data2=result.data)===null||_result$data2===void 0?void 0:(_result$data2$metadat=_result$data2.metadata)===null||_result$data2$metadat===void 0?void 0:_result$data2$metadat.total_fields_cleaned)||'multiple',\" fields.\"));fetchStatus();}else{const error=await response.json();alert(\"Error starting field cleaning: \".concat(error.detail));}}catch(error){console.error('Error starting field cleaning:',error);alert('Failed to start field cleaning');}finally{setIsProcessing(false);}};// Start batch cleaning (using service architecture)\nconst startBatchCleaning=async()=>{setIsProcessing(true);try{const serviceRequest={metadata:{processing_type:\"batch_cleaning\",target_database:config.target_database,target_collection_prefix:config.target_collection_prefix,batch_numbers:cleanAllBatches?null:selectedBatches,clean_all:cleanAllBatches}};const response=await fetch('/api/v1/phase3/process-statute',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(serviceRequest)});if(response.ok){const result=await response.json();alert(\"Batch cleaning started successfully!\");fetchStatus();fetchHistory();// Refresh history to show new metadata\n}else{const error=await response.json();alert(\"Error starting batch cleaning: \".concat(error.detail));}}catch(error){console.error('Error starting batch cleaning:',error);alert('Failed to start batch cleaning');}finally{setIsProcessing(false);}};// Handle batch selection\nconst toggleBatchSelection=batchNumber=>{setSelectedBatches(prev=>prev.includes(batchNumber)?prev.filter(n=>n!==batchNumber):[...prev,batchNumber]);};// Toggle statute expansion\nconst toggleStatuteExpansion=statuteKey=>{setExpandedStatutes(prev=>_objectSpread(_objectSpread({},prev),{},{[statuteKey]:!prev[statuteKey]}));};// Toggle section expansion\nconst toggleSectionExpansion=sectionKey=>{setExpandedSections(prev=>_objectSpread(_objectSpread({},prev),{},{[sectionKey]:!prev[sectionKey]}));};// Rollback Phase 3\nconst rollbackPhase3=async()=>{if(!window.confirm('Are you sure you want to rollback Phase 3? This will delete all created batch collections and databases.')){return;}try{const response=await fetch('/api/v1/phase3/rollback',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(config)});if(response.ok){const result=await response.json();alert('Phase 3 rollback completed successfully!');fetchStatus();fetchStatistics();}else{const error=await response.json();alert(\"Error rolling back Phase 3: \".concat(error.detail));}}catch(error){console.error('Error rolling back Phase 3:',error);alert('Failed to rollback Phase 3');}};// Load data on mount\nuseEffect(()=>{fetchStatus();fetchStatistics();},[]);const tabs=[{id:'overview',name:'Overview',icon:Database},{id:'section-splitting',name:'Section Splitting',icon:Split},{id:'field-cleaning',name:'Field Cleaning',icon:Scissors},{id:'preview',name:'Batch Preview',icon:Eye},{id:'statistics',name:'Statistics',icon:Settings},{id:'history',name:'History',icon:History}];return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-2\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900 mb-1\",children:\"Phase 3: Field Cleaning & Splitting\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm\",children:\"Split normalized statutes into batches, then clean each batch using CLI logic\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900\",children:\"Current Configuration\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:resetConfig,className:\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"h-4 w-4 mr-1\"}),\"Reset to Defaults\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Source DB:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.source_database,onChange:e=>updateConfig({source_database:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Source Collection:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.source_collection,onChange:e=>updateConfig({source_collection:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Target DB:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.target_database,onChange:e=>updateConfig({target_database:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Batch Prefix:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:config.target_collection_prefix,onChange:e=>updateConfig({target_collection_prefix:e.target.value}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:\"Batch Size:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.batch_size,onChange:e=>updateConfig({batch_size:parseInt(e.target.value)||10}),className:\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-16\",min:\"1\",max:\"50\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 mt-2\",children:/*#__PURE__*/_jsx(\"nav\",{className:\"flex space-x-8 px-4\",\"aria-label\":\"Tabs\",children:tabs.map(tab=>{const Icon=tab.icon;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab(tab.id),className:\"py-3 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 \".concat(activeTab===tab.id?'border-purple-500 text-purple-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:[/*#__PURE__*/_jsx(Icon,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(\"span\",{children:tab.name})]},tab.id);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-2\",children:[activeTab==='overview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-blue-900 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(Split,{className:\"h-5 w-5 mr-2\"}),\"Section Splitting\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-700 text-sm mb-3\",children:[\"Split normalized statutes from \",config.source_database,\".\",config.source_collection,\" into \",config.batch_size,\" batches in \",config.target_database,\".\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:startSectionSplitting,disabled:isProcessing,className:\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':'Start Section Splitting'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-green-900 mb-2 flex items-center\",children:[/*#__PURE__*/_jsx(Scissors,{className:\"h-5 w-5 mr-2\"}),\"Field Cleaning\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 text-sm mb-3\",children:\"Clean each batch using CLI logic: drop unnecessary fields, bring common fields up, handle single sections, remove duplicates, and sort sections.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startFieldCleaning,disabled:isProcessing,className:\"w-full bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':'Start Field Cleaning'})]})]}),status&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-3\",children:\"Current Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:(_status$collection_st=status.collection_status)!==null&&_status$collection_st!==void 0&&_status$collection_st.source_exists?'✅':'❌'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Source Collection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[config.source_database,\".\",config.source_collection]}),((_status$collection_st2=status.collection_status)===null||_status$collection_st2===void 0?void 0:_status$collection_st2.source_count)>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[status.collection_status.source_count,\" documents\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:(_status$collection_st3=status.collection_status)!==null&&_status$collection_st3!==void 0&&_status$collection_st3.target_database_exists?'✅':'❌'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Target Database\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:config.target_database})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-purple-600\",children:((_status$collection_st4=status.collection_status)===null||_status$collection_st4===void 0?void 0:_status$collection_st4.batch_count)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Batch Collections\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[config.target_collection_prefix,\"1, \",config.target_collection_prefix,\"2, ...\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-red-900 mb-2\",children:\"Rollback\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700 text-sm mb-3\",children:\"Rollback Phase 3 changes and restore previous state if needed.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:rollbackPhase3,className:\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\",children:\"Rollback Phase 3\"})]})]}),activeTab==='section-splitting'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Section Splitting Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-900 mb-2\",children:\"Section Splitting Process\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-blue-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Read all documents from \",config.source_database,\".\",config.source_collection]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Split into \",config.batch_size,\" equal batches\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 Create collections: \",config.target_collection_prefix,\"1, \",config.target_collection_prefix,\"2, ...\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Distribute statutes across batches\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Maintain section structure and metadata\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startSectionSplitting,disabled:isProcessing,className:\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':'Start Section Splitting'}),/*#__PURE__*/_jsx(\"button\",{onClick:generateMetadata,className:\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\",children:\"Generate Metadata\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatus,className:\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\",children:\"Refresh Status\"})]})]}),activeTab==='field-cleaning'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Field Cleaning Configuration\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchAvailableBatches,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Available Batches\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-green-900 mb-2\",children:\"Field Cleaning Process (per batch)\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-green-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Drop unnecessary fields:\"}),\" Keep only essential fields for processing\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Bring common fields up:\"}),\" Move fields common across all sections to statute level\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Clean single-section statutes:\"}),\" Handle single-section statutes specially\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Remove preamble duplicates:\"}),\" Remove duplicate preamble sections\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Sort sections:\"}),\" Preamble first, then numeric, then text\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Validate Pakistan law:\"}),\" Drop non-Pakistan laws using CLI logic\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-3\",children:\"Cleaning Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"cleaningMode\",checked:cleanAllBatches,onChange:()=>setCleanAllBatches(true),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Clean All Batches\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"cleaningMode\",checked:!cleanAllBatches,onChange:()=>setCleanAllBatches(false),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Clean Selected Batches\"})]})]}),!cleanAllBatches&&availableBatches&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-700 mb-2\",children:\"Select Batches to Clean:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\",children:availableBatches.batches.map(batch=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedBatches.includes(batch.batch_number),onChange:()=>toggleBatchSelection(batch.batch_number),className:\"rounded\"}),/*#__PURE__*/_jsxs(\"span\",{className:batch.is_cleaned?\"text-green-600\":\"text-gray-700\",children:[batch.batch_name,\" (\",batch.document_count,\" docs)\",batch.is_cleaned&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:\" \\u2713\"})]})]},batch.batch_number))}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-2\",children:[\"Selected: \",selectedBatches.length,\" batches. Green items are already cleaned.\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startBatchCleaning,disabled:isProcessing||!cleanAllBatches&&selectedBatches.length===0,className:\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",children:isProcessing?'Processing...':cleanAllBatches?'Clean All Batches':\"Clean \".concat(selectedBatches.length,\" Selected Batches\")}),/*#__PURE__*/_jsx(\"button\",{onClick:generateMetadata,className:\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\",children:\"Generate Metadata\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatus,className:\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\",children:\"Refresh Status\"})]})]}),activeTab==='preview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Batch Preview\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchBatchPreview,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Batch Preview\"})]}),batchPreview?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:batchPreview.batches.length>0?batchPreview.batches.map((batch,index)=>{var _batch$sample_documen;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-2\",children:batch.batch_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Documents:\"}),\" \",batch.document_count]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Sample Documents:\"}),\" \",((_batch$sample_documen=batch.sample_documents)===null||_batch$sample_documen===void 0?void 0:_batch$sample_documen.length)||0]})]}),batch.sample_documents&&batch.sample_documents.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mb-2\",children:\"Sample Documents (click to expand):\"}),batch.sample_documents.map((doc,docIndex)=>{var _doc$Sections;const statuteKey=\"\".concat(batch.batch_name,\"-\").concat(docIndex);const isStatuteExpanded=expandedStatutes[statuteKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 cursor-pointer hover:bg-gray-50 flex items-center justify-between\",onClick:()=>toggleStatuteExpansion(statuteKey),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm text-gray-900\",children:doc.Statute_Name||'N/A'}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[((_doc$Sections=doc.Sections)===null||_doc$Sections===void 0?void 0:_doc$Sections.length)||0,\" sections \\u2022 Province: \",doc.Province||'N/A']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400\",children:isStatuteExpanded?'▼':'▶'})]}),isStatuteExpanded&&doc.section_details&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-100\",children:doc.section_details.map((section,sectionIndex)=>{const sectionKey=\"\".concat(statuteKey,\"-section-\").concat(sectionIndex);const isSectionExpanded=expandedSections[sectionKey];return/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-50 last:border-b-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 pl-6 cursor-pointer hover:bg-gray-25 flex items-center justify-between\",onClick:()=>toggleSectionExpansion(sectionKey),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-sm text-blue-900\",children:section.section_title}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:section.content_preview})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400 text-sm\",children:isSectionExpanded?'▼':'▶'})]}),isSectionExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 pl-8 bg-gray-50 border-t border-gray-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-800 whitespace-pre-wrap\",children:section.content||'No content available'})})]},sectionIndex);})}),isStatuteExpanded&&!doc.section_details&&doc.Sections&&/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-100 p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mb-2\",children:\"Basic Section Info:\"}),doc.Sections.map((section,sectionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-700 mb-1\",children:[\"\\u2022 \",section.Section||\"Section \".concat(sectionIndex+1)]},sectionIndex))]})]},docIndex);})]})]},index);}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Layers,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No batch collections found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Run section splitting first to create batches\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Eye,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click \\\"Load Batch Preview\\\" to see batch collections\"})]})]}),activeTab==='statistics'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Processing Statistics\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatistics,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Statistics\"})]}),statistics?/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:((_statistics$statistic=statistics.statistics)===null||_statistics$statistic===void 0?void 0:(_statistics$statistic2=_statistics$statistic.source_collection)===null||_statistics$statistic2===void 0?void 0:_statistics$statistic2.count)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-blue-600\",children:\"Source Documents\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-500\",children:(_statistics$statistic3=statistics.statistics)===null||_statistics$statistic3===void 0?void 0:(_statistics$statistic4=_statistics$statistic3.source_collection)===null||_statistics$statistic4===void 0?void 0:_statistics$statistic4.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:(_statistics$statistic5=statistics.statistics)!==null&&_statistics$statistic5!==void 0&&(_statistics$statistic6=_statistics$statistic5.source_collection)!==null&&_statistics$statistic6!==void 0&&_statistics$statistic6.exists?'✅ Exists':'❌ Missing'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded-lg text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:((_statistics$statistic7=statistics.statistics)===null||_statistics$statistic7===void 0?void 0:(_statistics$statistic8=_statistics$statistic7.target_database)===null||_statistics$statistic8===void 0?void 0:(_statistics$statistic9=_statistics$statistic8.batch_collections)===null||_statistics$statistic9===void 0?void 0:_statistics$statistic9.length)||0}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-600\",children:\"Batch Collections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-500\",children:(_statistics$statistic0=statistics.statistics)===null||_statistics$statistic0===void 0?void 0:(_statistics$statistic1=_statistics$statistic0.target_database)===null||_statistics$statistic1===void 0?void 0:_statistics$statistic1.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:(_statistics$statistic10=statistics.statistics)!==null&&_statistics$statistic10!==void 0&&(_statistics$statistic11=_statistics$statistic10.target_database)!==null&&_statistics$statistic11!==void 0&&_statistics$statistic11.exists?'✅ Exists':'❌ Missing'})]}),((_statistics$statistic12=statistics.statistics)===null||_statistics$statistic12===void 0?void 0:(_statistics$statistic13=_statistics$statistic12.target_database)===null||_statistics$statistic13===void 0?void 0:_statistics$statistic13.batch_collections)&&/*#__PURE__*/_jsxs(\"div\",{className:\"md:col-span-2 bg-purple-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-purple-900 mb-2\",children:\"Batch Collections\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\",children:statistics.statistics.target_database.batch_collections.map((batch,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-2 rounded text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:batch})},index))})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(Settings,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No statistics available\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchStatistics,className:\"mt-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Load Statistics\"})]})]}),activeTab==='history'&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Processing History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchHistory,className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Refresh History\"})]}),history?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:history.history.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Operation\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Database\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Collection\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Processed\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:history.history.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(item.operation_type==='split'?'bg-blue-100 text-blue-800':'bg-green-100 text-green-800'),children:item.operation_type==='split'?'Section Splitting':'Field Cleaning'})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:item.database}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:item.collection}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:new Date(item.created_at).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",children:[item.total_processed,\" items\"]}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.open(\"/api/v1/phase3/history/\".concat(item.filename),'_blank'),className:\"text-indigo-600 hover:text-indigo-900\",children:\"View Details\"})})]},index))})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(History,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No processing history found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Run section splitting or field cleaning to generate history\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(History,{className:\"h-12 w-12 mx-auto mb-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click \\\"Refresh History\\\" to load processing history\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Section splitting creates batch collections\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Field cleaning processes each batch individually\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 All operations are logged with timestamps\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Metadata files contain detailed statistics\"})]})]})]})]})]});};export default Phase3;","map":{"version":3,"names":["React","useState","useEffect","Scissors","Database","Settings","History","Eye","RotateCcw","Split","Layers","jsx","_jsx","jsxs","_jsxs","DEFAULT_CONFIG","source_database","source_collection","target_database","target_collection_prefix","batch_size","enable_ai_cleaning","Phase3","_status$collection_st","_status$collection_st2","_status$collection_st3","_status$collection_st4","_statistics$statistic","_statistics$statistic2","_statistics$statistic3","_statistics$statistic4","_statistics$statistic5","_statistics$statistic6","_statistics$statistic7","_statistics$statistic8","_statistics$statistic9","_statistics$statistic0","_statistics$statistic1","_statistics$statistic10","_statistics$statistic11","_statistics$statistic12","_statistics$statistic13","activeTab","setActiveTab","config","setConfig","isProcessing","setIsProcessing","status","setStatus","statistics","setStatistics","batchPreview","setBatchPreview","history","setHistory","availableBatches","setAvailableBatches","selectedBatches","setSelectedBatches","cleanAllBatches","setCleanAllBatches","expandedStatutes","setExpandedStatutes","expandedSections","setExpandedSections","savedConfig","localStorage","getItem","JSON","parse","error","console","setItem","stringify","updateConfig","updates","prev","_objectSpread","resetConfig","fetchStatus","response","fetch","ok","data","json","fetchStatistics","method","headers","body","fetchBatchPreview","fetchHistory","fetchAvailableBatches","generateMetadata","result","alert","concat","metadata_file","detail","startSectionSplitting","statuteRequest","statute_text","metadata","processing_type","_result$data","_result$data$sections","sections","length","startFieldCleaning","_result$data2","_result$data2$metadat","total_fields_cleaned","startBatchCleaning","serviceRequest","batch_numbers","clean_all","toggleBatchSelection","batchNumber","includes","filter","n","toggleStatuteExpansion","statuteKey","toggleSectionExpansion","sectionKey","rollbackPhase3","window","confirm","tabs","id","name","icon","className","children","onClick","type","value","onChange","e","target","parseInt","min","max","map","tab","Icon","disabled","collection_status","source_exists","source_count","target_database_exists","batch_count","checked","batches","batch","batch_number","is_cleaned","batch_name","document_count","index","_batch$sample_documen","sample_documents","doc","docIndex","_doc$Sections","isStatuteExpanded","Statute_Name","Sections","Province","section_details","section","sectionIndex","isSectionExpanded","section_title","content_preview","content","Section","count","exists","batch_collections","item","operation_type","database","collection","Date","created_at","toLocaleDateString","total_processed","open","filename"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/pages/Phase3.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Scissors, Database, FileText, Settings, History, Eye, Play, RotateCcw, Split, Layers } from 'lucide-react';\r\n\r\n// Configuration interface - updated to match CLI flow\r\ninterface Phase3Config {\r\n  source_database: string;\r\n  source_collection: string;\r\n  target_database: string;\r\n  target_collection_prefix: string;\r\n  batch_size: number;\r\n  enable_ai_cleaning: boolean;\r\n}\r\n\r\n// Default configuration - matches CLI scripts\r\nconst DEFAULT_CONFIG: Phase3Config = {\r\n  source_database: \"Statutes\",\r\n  source_collection: \"normalized_statutes\",\r\n  target_database: \"Batched-Statutes\",\r\n  target_collection_prefix: \"batch_\",\r\n  batch_size: 10,\r\n  enable_ai_cleaning: false\r\n};\r\n\r\nconst Phase3: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [config, setConfig] = useState<Phase3Config>(DEFAULT_CONFIG);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [status, setStatus] = useState<any>(null);\r\n  const [statistics, setStatistics] = useState<any>(null);\r\n  const [batchPreview, setBatchPreview] = useState<any>(null);\r\n  const [history, setHistory] = useState<any>(null);\r\n  const [availableBatches, setAvailableBatches] = useState<any>(null);\r\n  const [selectedBatches, setSelectedBatches] = useState<number[]>([]);\r\n  const [cleanAllBatches, setCleanAllBatches] = useState(true);\r\n  const [expandedStatutes, setExpandedStatutes] = useState<{[key: string]: boolean}>({});\r\n  const [expandedSections, setExpandedSections] = useState<{[key: string]: boolean}>({});\r\n\r\n  // Load config from localStorage on mount\r\n  useEffect(() => {\r\n    const savedConfig = localStorage.getItem('phase3_config');\r\n    if (savedConfig) {\r\n      try {\r\n        setConfig(JSON.parse(savedConfig));\r\n      } catch (error) {\r\n        console.error('Error loading Phase 3 config:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save config to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('phase3_config', JSON.stringify(config));\r\n  }, [config]);\r\n\r\n  // Update configuration\r\n  const updateConfig = (updates: Partial<Phase3Config>) => {\r\n    setConfig(prev => ({ ...prev, ...updates }));\r\n  };\r\n\r\n  // Reset configuration to defaults\r\n  const resetConfig = () => {\r\n    setConfig(DEFAULT_CONFIG);\r\n  };\r\n\r\n  // Fetch Phase 3 status\r\n  const fetchStatus = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/status');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStatus(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Phase 3 status:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch statistics\r\n  const fetchStatistics = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/statistics', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStatistics(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching Phase 3 statistics:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch batch preview\r\n  const fetchBatchPreview = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/preview-batches', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setBatchPreview(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching batch preview:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch history\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/history');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setHistory(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch available batches for cleaning\r\n  const fetchAvailableBatches = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/available-batches', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAvailableBatches(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching available batches:', error);\r\n    }\r\n  };\r\n\r\n  // Generate metadata\r\n  const generateMetadata = async () => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/generate-metadata', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Metadata generated successfully! File: ${result.metadata_file}`);\r\n        fetchHistory();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error generating metadata: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating metadata:', error);\r\n      alert('Failed to generate metadata');\r\n    }\r\n  };\r\n\r\n  // Start section splitting using modern service endpoint\r\n  const startSectionSplitting = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      // Use the new process-statute service endpoint\r\n      const statuteRequest = {\r\n        statute_text: `Processing batches from ${config.source_collection}`,\r\n        metadata: {\r\n          source_database: config.source_database,\r\n          source_collection: config.source_collection,\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_size: config.batch_size,\r\n          processing_type: \"section_splitting\"\r\n        }\r\n      };\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(statuteRequest)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Section splitting completed successfully! ${result.data?.sections?.length || 0} sections processed.`);\r\n        fetchStatus();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error starting section splitting: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting section splitting:', error);\r\n      alert('Failed to start section splitting');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Start field cleaning using modern service endpoint\r\n  const startFieldCleaning = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      // Use the new process-statute service endpoint for field cleaning\r\n      const statuteRequest = {\r\n        statute_text: `Field cleaning batches from ${config.target_database}`,\r\n        metadata: {\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_size: config.batch_size,\r\n          enable_ai_cleaning: config.enable_ai_cleaning,\r\n          processing_type: \"field_cleaning\"\r\n        }\r\n      };\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(statuteRequest)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Field cleaning completed successfully! Processed ${result.data?.metadata?.total_fields_cleaned || 'multiple'} fields.`);\r\n        fetchStatus();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error starting field cleaning: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting field cleaning:', error);\r\n      alert('Failed to start field cleaning');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Start batch cleaning (using service architecture)\r\n  const startBatchCleaning = async () => {\r\n    setIsProcessing(true);\r\n    try {\r\n      const serviceRequest = {\r\n        metadata: {\r\n          processing_type: \"batch_cleaning\",\r\n          target_database: config.target_database,\r\n          target_collection_prefix: config.target_collection_prefix,\r\n          batch_numbers: cleanAllBatches ? null : selectedBatches,\r\n          clean_all: cleanAllBatches\r\n        }\r\n      };\r\n\r\n      const response = await fetch('/api/v1/phase3/process-statute', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(serviceRequest)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Batch cleaning started successfully!`);\r\n        fetchStatus();\r\n        fetchHistory(); // Refresh history to show new metadata\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error starting batch cleaning: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting batch cleaning:', error);\r\n      alert('Failed to start batch cleaning');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle batch selection\r\n  const toggleBatchSelection = (batchNumber: number) => {\r\n    setSelectedBatches(prev => \r\n      prev.includes(batchNumber) \r\n        ? prev.filter(n => n !== batchNumber)\r\n        : [...prev, batchNumber]\r\n    );\r\n  };\r\n\r\n  // Toggle statute expansion\r\n  const toggleStatuteExpansion = (statuteKey: string) => {\r\n    setExpandedStatutes(prev => ({\r\n      ...prev,\r\n      [statuteKey]: !prev[statuteKey]\r\n    }));\r\n  };\r\n\r\n  // Toggle section expansion\r\n  const toggleSectionExpansion = (sectionKey: string) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [sectionKey]: !prev[sectionKey]\r\n    }));\r\n  };\r\n\r\n  // Rollback Phase 3\r\n  const rollbackPhase3 = async () => {\r\n    if (!window.confirm('Are you sure you want to rollback Phase 3? This will delete all created batch collections and databases.')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/v1/phase3/rollback', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(config)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert('Phase 3 rollback completed successfully!');\r\n        fetchStatus();\r\n        fetchStatistics();\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error rolling back Phase 3: ${error.detail}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error rolling back Phase 3:', error);\r\n      alert('Failed to rollback Phase 3');\r\n    }\r\n  };\r\n\r\n  // Load data on mount\r\n  useEffect(() => {\r\n    fetchStatus();\r\n    fetchStatistics();\r\n  }, []);\r\n\r\n  const tabs = [\r\n    { id: 'overview', name: 'Overview', icon: Database },\r\n    { id: 'section-splitting', name: 'Section Splitting', icon: Split },\r\n    { id: 'field-cleaning', name: 'Field Cleaning', icon: Scissors },\r\n    { id: 'preview', name: 'Batch Preview', icon: Eye },\r\n    { id: 'statistics', name: 'Statistics', icon: Settings },\r\n    { id: 'history', name: 'History', icon: History }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-0\">\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2\">\r\n        <h1 className=\"text-xl font-bold text-gray-900 mb-1\">\r\n          Phase 3: Field Cleaning & Splitting\r\n        </h1>\r\n        <p className=\"text-gray-600 text-sm\">\r\n          Split normalized statutes into batches, then clean each batch using CLI logic\r\n        </p>\r\n      </div>\r\n\r\n      {/* Current Configuration */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 mt-2\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Current Configuration</h2>\r\n          <button\r\n            onClick={resetConfig}\r\n            className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            <RotateCcw className=\"h-4 w-4 mr-1\" />\r\n            Reset to Defaults\r\n          </button>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm\">\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Source DB:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.source_database}\r\n              onChange={(e) => updateConfig({ source_database: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Source Collection:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.source_collection}\r\n              onChange={(e) => updateConfig({ source_collection: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Target DB:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.target_database}\r\n              onChange={(e) => updateConfig({ target_database: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Batch Prefix:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={config.target_collection_prefix}\r\n              onChange={(e) => updateConfig({ target_collection_prefix: e.target.value })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-full\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-gray-700\">Batch Size:</span>\r\n            <input\r\n              type=\"number\"\r\n              value={config.batch_size}\r\n              onChange={(e) => updateConfig({ batch_size: parseInt(e.target.value) || 10 })}\r\n              className=\"ml-2 px-2 py-1 border border-gray-300 rounded text-xs w-16\"\r\n              min=\"1\"\r\n              max=\"50\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 mt-2\">\r\n        <nav className=\"flex space-x-8 px-4\" aria-label=\"Tabs\">\r\n          {tabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`py-3 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\r\n                  activeTab === tab.id\r\n                    ? 'border-purple-500 text-purple-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"h-4 w-4\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-2\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-2 flex items-center\">\r\n                  <Split className=\"h-5 w-5 mr-2\" />\r\n                  Section Splitting\r\n                </h3>\r\n                <p className=\"text-blue-700 text-sm mb-3\">\r\n                  Split normalized statutes from {config.source_database}.{config.source_collection} into {config.batch_size} batches in {config.target_database}.\r\n                </p>\r\n                <button\r\n                  onClick={startSectionSplitting}\r\n                  disabled={isProcessing}\r\n                  className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isProcessing ? 'Processing...' : 'Start Section Splitting'}\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-green-900 mb-2 flex items-center\">\r\n                  <Scissors className=\"h-5 w-5 mr-2\" />\r\n                  Field Cleaning\r\n                </h3>\r\n                <p className=\"text-green-700 text-sm mb-3\">\r\n                  Clean each batch using CLI logic: drop unnecessary fields, bring common fields up, handle single sections, remove duplicates, and sort sections.\r\n                </p>\r\n                <button\r\n                  onClick={startFieldCleaning}\r\n                  disabled={isProcessing}\r\n                  className=\"w-full bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isProcessing ? 'Processing...' : 'Start Field Cleaning'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Status Overview */}\r\n            {status && (\r\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Current Status</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {status.collection_status?.source_exists ? '✅' : '❌'}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Source Collection</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.source_database}.{config.source_collection}</div>\r\n                    {status.collection_status?.source_count > 0 && (\r\n                      <div className=\"text-xs text-gray-500\">{status.collection_status.source_count} documents</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {status.collection_status?.target_database_exists ? '✅' : '❌'}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Target Database</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.target_database}</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {status.collection_status?.batch_count || 0}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Batch Collections</div>\r\n                    <div className=\"text-xs text-gray-500\">{config.target_collection_prefix}1, {config.target_collection_prefix}2, ...</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Rollback Section */}\r\n            <div className=\"bg-red-50 p-4 rounded-lg\">\r\n              <h3 className=\"text-lg font-semibold text-red-900 mb-2\">Rollback</h3>\r\n              <p className=\"text-red-700 text-sm mb-3\">\r\n                Rollback Phase 3 changes and restore previous state if needed.\r\n              </p>\r\n              <button\r\n                onClick={rollbackPhase3}\r\n                className=\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700\"\r\n              >\r\n                Rollback Phase 3\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'section-splitting' && (\r\n          <div className=\"space-y-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Section Splitting Configuration</h3>\r\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-blue-900 mb-2\">Section Splitting Process</h4>\r\n              <ul className=\"text-blue-700 text-sm space-y-1\">\r\n                <li>• Read all documents from {config.source_database}.{config.source_collection}</li>\r\n                <li>• Split into {config.batch_size} equal batches</li>\r\n                <li>• Create collections: {config.target_collection_prefix}1, {config.target_collection_prefix}2, ...</li>\r\n                <li>• Distribute statutes across batches</li>\r\n                <li>• Maintain section structure and metadata</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                onClick={startSectionSplitting}\r\n                disabled={isProcessing}\r\n                className=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isProcessing ? 'Processing...' : 'Start Section Splitting'}\r\n              </button>\r\n              <button\r\n                onClick={generateMetadata}\r\n                className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\"\r\n              >\r\n                Generate Metadata\r\n              </button>\r\n              <button\r\n                onClick={fetchStatus}\r\n                className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\"\r\n              >\r\n                Refresh Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'field-cleaning' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Field Cleaning Configuration</h3>\r\n              <button\r\n                onClick={fetchAvailableBatches}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Available Batches\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"bg-green-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-green-900 mb-2\">Field Cleaning Process (per batch)</h4>\r\n              <ul className=\"text-green-700 text-sm space-y-1\">\r\n                <li>• <strong>Drop unnecessary fields:</strong> Keep only essential fields for processing</li>\r\n                <li>• <strong>Bring common fields up:</strong> Move fields common across all sections to statute level</li>\r\n                <li>• <strong>Clean single-section statutes:</strong> Handle single-section statutes specially</li>\r\n                <li>• <strong>Remove preamble duplicates:</strong> Remove duplicate preamble sections</li>\r\n                <li>• <strong>Sort sections:</strong> Preamble first, then numeric, then text</li>\r\n                <li>• <strong>Validate Pakistan law:</strong> Drop non-Pakistan laws using CLI logic</li>\r\n              </ul>\r\n            </div>\r\n\r\n            {/* Cleaning Options */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-medium text-gray-900 mb-3\">Cleaning Options</h4>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"cleaningMode\"\r\n                    checked={cleanAllBatches}\r\n                    onChange={() => setCleanAllBatches(true)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"font-medium\">Clean All Batches</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"cleaningMode\"\r\n                    checked={!cleanAllBatches}\r\n                    onChange={() => setCleanAllBatches(false)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"font-medium\">Clean Selected Batches</span>\r\n                </label>\r\n              </div>\r\n\r\n              {/* Batch Selection */}\r\n              {!cleanAllBatches && availableBatches && (\r\n                <div className=\"mt-4\">\r\n                  <h5 className=\"font-medium text-gray-700 mb-2\">Select Batches to Clean:</h5>\r\n                  <div className=\"grid grid-cols-3 gap-2 max-h-48 overflow-y-auto\">\r\n                    {availableBatches.batches.map((batch: any) => (\r\n                      <label key={batch.batch_number} className=\"flex items-center space-x-2 text-sm\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedBatches.includes(batch.batch_number)}\r\n                          onChange={() => toggleBatchSelection(batch.batch_number)}\r\n                          className=\"rounded\"\r\n                        />\r\n                        <span className={batch.is_cleaned ? \"text-green-600\" : \"text-gray-700\"}>\r\n                          {batch.batch_name} ({batch.document_count} docs)\r\n                          {batch.is_cleaned && <span className=\"text-xs\"> ✓</span>}\r\n                        </span>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 mt-2\">\r\n                    Selected: {selectedBatches.length} batches. Green items are already cleaned.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                onClick={startBatchCleaning}\r\n                disabled={isProcessing || (!cleanAllBatches && selectedBatches.length === 0)}\r\n                className=\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isProcessing ? 'Processing...' : \r\n                  cleanAllBatches ? 'Clean All Batches' : `Clean ${selectedBatches.length} Selected Batches`}\r\n              </button>\r\n              <button\r\n                onClick={generateMetadata}\r\n                className=\"bg-purple-600 text-white px-6 py-2 rounded-md hover:bg-purple-700\"\r\n              >\r\n                Generate Metadata\r\n              </button>\r\n              <button\r\n                onClick={fetchStatus}\r\n                className=\"bg-gray-600 text-white px-6 py-2 rounded-md hover:bg-gray-700\"\r\n              >\r\n                Refresh Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'preview' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Batch Preview</h3>\r\n              <button\r\n                onClick={fetchBatchPreview}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Batch Preview\r\n              </button>\r\n            </div>\r\n            \r\n            {batchPreview ? (\r\n              <div className=\"space-y-4\">\r\n                {batchPreview.batches.length > 0 ? (\r\n                  batchPreview.batches.map((batch: any, index: number) => (\r\n                    <div key={index} className=\"bg-gray-50 p-4 rounded-lg\">\r\n                      <h4 className=\"font-medium text-gray-900 mb-2\">{batch.batch_name}</h4>\r\n                      <div className=\"grid grid-cols-2 gap-4 text-sm mb-3\">\r\n                        <div>\r\n                          <span className=\"font-medium\">Documents:</span> {batch.document_count}\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-medium\">Sample Documents:</span> {batch.sample_documents?.length || 0}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {batch.sample_documents && batch.sample_documents.length > 0 && (\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"text-xs text-gray-500 mb-2\">Sample Documents (click to expand):</div>\r\n                          {batch.sample_documents.map((doc: any, docIndex: number) => {\r\n                            const statuteKey = `${batch.batch_name}-${docIndex}`;\r\n                            const isStatuteExpanded = expandedStatutes[statuteKey];\r\n                            \r\n                            return (\r\n                              <div key={docIndex} className=\"bg-white border rounded-lg\">\r\n                                {/* Statute Header */}\r\n                                <div \r\n                                  className=\"p-3 cursor-pointer hover:bg-gray-50 flex items-center justify-between\"\r\n                                  onClick={() => toggleStatuteExpansion(statuteKey)}\r\n                                >\r\n                                  <div className=\"flex-1\">\r\n                                    <div className=\"font-medium text-sm text-gray-900\">\r\n                                      {doc.Statute_Name || 'N/A'}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500\">\r\n                                      {doc.Sections?.length || 0} sections • Province: {doc.Province || 'N/A'}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"text-gray-400\">\r\n                                    {isStatuteExpanded ? '▼' : '▶'}\r\n                                  </div>\r\n                                </div>\r\n                                \r\n                                {/* Expanded Sections */}\r\n                                {isStatuteExpanded && doc.section_details && (\r\n                                  <div className=\"border-t border-gray-100\">\r\n                                    {doc.section_details.map((section: any, sectionIndex: number) => {\r\n                                      const sectionKey = `${statuteKey}-section-${sectionIndex}`;\r\n                                      const isSectionExpanded = expandedSections[sectionKey];\r\n                                      \r\n                                      return (\r\n                                        <div key={sectionIndex} className=\"border-b border-gray-50 last:border-b-0\">\r\n                                          {/* Section Header */}\r\n                                          <div \r\n                                            className=\"p-3 pl-6 cursor-pointer hover:bg-gray-25 flex items-center justify-between\"\r\n                                            onClick={() => toggleSectionExpansion(sectionKey)}\r\n                                          >\r\n                                            <div className=\"flex-1\">\r\n                                              <div className=\"font-medium text-sm text-blue-900\">\r\n                                                {section.section_title}\r\n                                              </div>\r\n                                              <div className=\"text-xs text-gray-500 mt-1\">\r\n                                                {section.content_preview}\r\n                                              </div>\r\n                                            </div>\r\n                                            <div className=\"text-gray-400 text-sm\">\r\n                                              {isSectionExpanded ? '▼' : '▶'}\r\n                                            </div>\r\n                                          </div>\r\n                                          \r\n                                          {/* Full Section Content */}\r\n                                          {isSectionExpanded && (\r\n                                            <div className=\"p-3 pl-8 bg-gray-50 border-t border-gray-100\">\r\n                                              <div className=\"text-sm text-gray-800 whitespace-pre-wrap\">\r\n                                                {section.content || 'No content available'}\r\n                                              </div>\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                      );\r\n                                    })}\r\n                                  </div>\r\n                                )}\r\n                                \r\n                                {/* Fallback for documents without section_details */}\r\n                                {isStatuteExpanded && !doc.section_details && doc.Sections && (\r\n                                  <div className=\"border-t border-gray-100 p-3\">\r\n                                    <div className=\"text-xs text-gray-500 mb-2\">Basic Section Info:</div>\r\n                                    {doc.Sections.map((section: any, sectionIndex: number) => (\r\n                                      <div key={sectionIndex} className=\"text-xs text-gray-700 mb-1\">\r\n                                        • {section.Section || `Section ${sectionIndex + 1}`}\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"text-center py-8 text-gray-500\">\r\n                    <Layers className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                    <p>No batch collections found</p>\r\n                    <p className=\"text-sm\">Run section splitting first to create batches</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <Eye className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>Click \"Load Batch Preview\" to see batch collections</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'statistics' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Processing Statistics</h3>\r\n              <button\r\n                onClick={fetchStatistics}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Load Statistics\r\n              </button>\r\n            </div>\r\n            \r\n            {statistics ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">\r\n                    {statistics.statistics?.source_collection?.count || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-600\">Source Documents</div>\r\n                  <div className=\"text-xs text-blue-500\">{statistics.statistics?.source_collection?.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {statistics.statistics?.source_collection?.exists ? '✅ Exists' : '❌ Missing'}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">\r\n                    {statistics.statistics?.target_database?.batch_collections?.length || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-green-600\">Batch Collections</div>\r\n                  <div className=\"text-xs text-green-500\">{statistics.statistics?.target_database?.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {statistics.statistics?.target_database?.exists ? '✅ Exists' : '❌ Missing'}\r\n                  </div>\r\n                </div>\r\n                \r\n                {statistics.statistics?.target_database?.batch_collections && (\r\n                  <div className=\"md:col-span-2 bg-purple-50 p-4 rounded-lg\">\r\n                    <h4 className=\"font-medium text-purple-900 mb-2\">Batch Collections</h4>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\">\r\n                      {statistics.statistics.target_database.batch_collections.map((batch: string, index: number) => (\r\n                        <div key={index} className=\"bg-white p-2 rounded text-center\">\r\n                          <div className=\"font-medium\">{batch}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <Settings className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>No statistics available</p>\r\n                <button\r\n                  onClick={fetchStatistics}\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n                >\r\n                  Load Statistics\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'history' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Processing History</h3>\r\n              <button\r\n                onClick={fetchHistory}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n              >\r\n                Refresh History\r\n              </button>\r\n            </div>\r\n            \r\n            {history ? (\r\n              <div className=\"space-y-4\">\r\n                {history.history.length > 0 ? (\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Operation\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Database\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Collection\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Date\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Processed\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Actions\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {history.history.map((item: any, index: number) => (\r\n                          <tr key={index} className=\"hover:bg-gray-50\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                                item.operation_type === 'split' \r\n                                  ? 'bg-blue-100 text-blue-800' \r\n                                  : 'bg-green-100 text-green-800'\r\n                              }`}>\r\n                                {item.operation_type === 'split' ? 'Section Splitting' : 'Field Cleaning'}\r\n                              </span>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.database}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.collection}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              {new Date(item.created_at).toLocaleDateString()}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {item.total_processed} items\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              <button\r\n                                onClick={() => window.open(`/api/v1/phase3/history/${item.filename}`, '_blank')}\r\n                                className=\"text-indigo-600 hover:text-indigo-900\"\r\n                              >\r\n                                View Details\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8 text-gray-500\">\r\n                    <History className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                    <p>No processing history found</p>\r\n                    <p className=\"text-sm\">Run section splitting or field cleaning to generate history</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <History className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\r\n                <p>Click \"Refresh History\" to load processing history</p>\r\n                <div className=\"mt-4 text-xs text-gray-500\">\r\n                  <p>• Section splitting creates batch collections</p>\r\n                  <p>• Field cleaning processes each batch individually</p>\r\n                  <p>• All operations are logged with timestamps</p>\r\n                  <p>• Metadata files contain detailed statistics</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phase3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}