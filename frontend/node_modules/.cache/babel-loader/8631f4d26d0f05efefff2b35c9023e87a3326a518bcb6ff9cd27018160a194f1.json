{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{BarChart3,TrendingUp,AlertTriangle,CheckCircle,XCircle,Download,Database}from'lucide-react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FieldStatistics=_ref=>{let{databaseInfo,isAnalyzing,onAnalysisStart,onAnalysisComplete}=_ref;const[fieldStats,setFieldStats]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[selectedField,setSelectedField]=useState(null);const fetchFieldStats=useCallback(async()=>{if(databaseInfo.status!=='connected')return;setIsLoading(true);setError(null);onAnalysisStart();try{const response=await axios.get('/api/v1/phase1/field-stats');setFieldStats(response.data);}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.message||'Failed to fetch field statistics');}finally{setIsLoading(false);onAnalysisComplete();}},[databaseInfo.status,onAnalysisStart,onAnalysisComplete]);useEffect(()=>{if(databaseInfo.status==='connected'&&!fieldStats){fetchFieldStats();}},[databaseInfo.status,fieldStats,fetchFieldStats]);const getCoverageColor=percentage=>{if(percentage>=80)return'bg-green-500';if(percentage>=60)return'bg-yellow-500';if(percentage>=40)return'bg-orange-500';return'bg-red-500';};const getCoverageTextColor=percentage=>{if(percentage>=80)return'text-green-700';if(percentage>=60)return'text-yellow-700';if(percentage>=40)return'text-orange-700';return'text-red-700';};const exportFieldStats=()=>{if(!fieldStats)return;const dataStr=JSON.stringify(fieldStats,null,2);const dataBlob=new Blob([dataStr],{type:'application/json'});const url=URL.createObjectURL(dataBlob);const link=document.createElement('a');link.href=url;link.download=\"field-statistics-\".concat(new Date().toISOString().split('T')[0],\".json\");link.click();URL.revokeObjectURL(url);};if(databaseInfo.status!=='connected'){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Database,{className:\"w-12 h-12 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"Database Not Connected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Please connect to a database to view field statistics\"})]});}if(isLoading||isAnalyzing){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"Analyzing Database\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Please wait while we analyze the field structure...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(XCircle,{className:\"w-12 h-12 text-red-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"Analysis Failed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 mb-4\",children:error}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchFieldStats,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"w-4 h-4 mr-2\"}),\"Retry Analysis\"]})]});}if(!fieldStats){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"w-12 h-12 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"No Field Statistics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Click the button below to analyze the database structure\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchFieldStats,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"w-4 h-4 mr-2\"}),\"Analyze Fields\"]})]});}// Handle both field_statistics (when data exists) and fields (when empty)\nconst statisticsData=(fieldStats===null||fieldStats===void 0?void 0:fieldStats.field_statistics)||(fieldStats===null||fieldStats===void 0?void 0:fieldStats.fields)||{};const fields=Object.entries(statisticsData);const sortedFields=fields.sort((a,b)=>{var _b$,_a$;return((_b$=b[1])===null||_b$===void 0?void 0:_b$.coverage_percentage)-((_a$=a[1])===null||_a$===void 0?void 0:_a$.coverage_percentage);});// Show message for empty collection\nif(fieldStats!==null&&fieldStats!==void 0&&fieldStats.message&&fields.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Database,{className:\"w-12 h-12 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"No Data Available\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:fieldStats.message}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:\"Add some documents to the collection to see field statistics\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Field Coverage Analysis\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[fieldStats.total_fields||0,\" fields across \",(fieldStats.total_documents||0).toLocaleString(),\" documents\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchFieldStats,className:\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"w-4 h-4 mr-2\"}),\"Refresh\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:exportFieldStats,className:\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-success-600 hover:bg-success-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-success-500\",children:[/*#__PURE__*/_jsx(Download,{className:\"w-4 h-4 mr-2\"}),\"Export\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:sortedFields.map(_ref2=>{let[fieldName,stats]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg cursor-pointer transition-all duration-200 \".concat(selectedField===fieldName?'border-primary-300 bg-primary-50':'border-gray-200 hover:border-gray-300'),onClick:()=>setSelectedField(selectedField===fieldName?null:fieldName),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:fieldName}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium \".concat(getCoverageTextColor(stats.coverage_percentage)),children:[stats.coverage_percentage,\"%\"]}),stats.coverage_percentage>=80?/*#__PURE__*/_jsx(CheckCircle,{className:\"w-4 h-4 text-green-500\"}):stats.coverage_percentage>=60?/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-4 h-4 text-yellow-500\"}):/*#__PURE__*/_jsx(XCircle,{className:\"w-4 h-4 text-red-500\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2 mb-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full \".concat(getCoverageColor(stats.coverage_percentage),\" transition-all duration-300\"),style:{width:\"\".concat(stats.coverage_percentage,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Present:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium\",children:stats.field_present.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Missing:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-red-600\",children:stats.missing_count.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Non-empty:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium\",children:stats.non_empty_values.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Empty:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-orange-600\",children:stats.empty_count.toLocaleString()})]})]}),selectedField===fieldName&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 pt-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Sample Values:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:stats.sample_values.map((value,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"text-xs bg-gray-100 px-2 py-1 rounded\",children:value.length>50?\"\".concat(value.substring(0,50),\"...\"):value},index))})]})]},fieldName);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 text-center text-sm text-gray-500\",children:[\"Last updated: \",fieldStats!==null&&fieldStats!==void 0&&fieldStats.timestamp?new Date(fieldStats.timestamp).toLocaleString():'Unknown']})]});};export default FieldStatistics;","map":{"version":3,"names":["React","useState","useEffect","useCallback","BarChart3","TrendingUp","AlertTriangle","CheckCircle","XCircle","Download","Database","axios","jsx","_jsx","jsxs","_jsxs","FieldStatistics","_ref","databaseInfo","isAnalyzing","onAnalysisStart","onAnalysisComplete","fieldStats","setFieldStats","isLoading","setIsLoading","error","setError","selectedField","setSelectedField","fetchFieldStats","status","response","get","data","_error$response","_error$response$data","detail","message","getCoverageColor","percentage","getCoverageTextColor","exportFieldStats","dataStr","JSON","stringify","dataBlob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","concat","Date","toISOString","split","click","revokeObjectURL","className","children","onClick","statisticsData","field_statistics","fields","Object","entries","sortedFields","sort","a","b","_b$","_a$","coverage_percentage","length","total_fields","total_documents","toLocaleString","map","_ref2","fieldName","stats","style","width","field_present","missing_count","non_empty_values","empty_count","sample_values","value","index","substring","timestamp"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase1/FieldStatistics.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BarChart3, TrendingUp, AlertTriangle, CheckCircle, XCircle, Download, Database } from 'lucide-react';\r\nimport axios from 'axios';\r\n\r\ninterface FieldStatisticsProps {\r\n  databaseInfo: any;\r\n  isAnalyzing: boolean;\r\n  onAnalysisStart: () => void;\r\n  onAnalysisComplete: () => void;\r\n}\r\n\r\ninterface FieldStat {\r\n  total_documents: number;\r\n  field_present: number;\r\n  non_empty_values: number;\r\n  coverage_percentage: number;\r\n  non_empty_percentage: number;\r\n  missing_count: number;\r\n  empty_count: number;\r\n  sample_values: string[];\r\n  field_type: string;\r\n}\r\n\r\ninterface FieldStatsResponse {\r\n  total_documents?: number;\r\n  total_fields?: number;\r\n  field_statistics?: Record<string, FieldStat>;\r\n  timestamp?: string;\r\n  // For empty/error cases\r\n  message?: string;\r\n  fields?: Record<string, any>;\r\n}\r\n\r\nconst FieldStatistics: React.FC<FieldStatisticsProps> = ({\r\n  databaseInfo,\r\n  isAnalyzing,\r\n  onAnalysisStart,\r\n  onAnalysisComplete\r\n}) => {\r\n  const [fieldStats, setFieldStats] = useState<FieldStatsResponse | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedField, setSelectedField] = useState<string | null>(null);\r\n\r\n  const fetchFieldStats = useCallback(async () => {\r\n    if (databaseInfo.status !== 'connected') return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    onAnalysisStart();\r\n    \r\n    try {\r\n      const response = await axios.get('/api/v1/phase1/field-stats');\r\n      setFieldStats(response.data);\r\n    } catch (error: any) {\r\n      setError(error.response?.data?.detail || error.message || 'Failed to fetch field statistics');\r\n    } finally {\r\n      setIsLoading(false);\r\n      onAnalysisComplete();\r\n    }\r\n  }, [databaseInfo.status, onAnalysisStart, onAnalysisComplete]);\r\n\r\n  useEffect(() => {\r\n    if (databaseInfo.status === 'connected' && !fieldStats) {\r\n      fetchFieldStats();\r\n    }\r\n  }, [databaseInfo.status, fieldStats, fetchFieldStats]);\r\n\r\n  const getCoverageColor = (percentage: number) => {\r\n    if (percentage >= 80) return 'bg-green-500';\r\n    if (percentage >= 60) return 'bg-yellow-500';\r\n    if (percentage >= 40) return 'bg-orange-500';\r\n    return 'bg-red-500';\r\n  };\r\n\r\n  const getCoverageTextColor = (percentage: number) => {\r\n    if (percentage >= 80) return 'text-green-700';\r\n    if (percentage >= 60) return 'text-yellow-700';\r\n    if (percentage >= 40) return 'text-orange-700';\r\n    return 'text-red-700';\r\n  };\r\n\r\n  const exportFieldStats = () => {\r\n    if (!fieldStats) return;\r\n    \r\n    const dataStr = JSON.stringify(fieldStats, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `field-statistics-${new Date().toISOString().split('T')[0]}.json`;\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (databaseInfo.status !== 'connected') {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <Database className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Database Not Connected</h3>\r\n        <p className=\"text-gray-600\">Please connect to a database to view field statistics</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || isAnalyzing) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Analyzing Database</h3>\r\n        <p className=\"text-gray-600\">Please wait while we analyze the field structure...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <XCircle className=\"w-12 h-12 text-red-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Analysis Failed</h3>\r\n        <p className=\"text-red-600 mb-4\">{error}</p>\r\n        <button\r\n          onClick={fetchFieldStats}\r\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n        >\r\n          <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n          Retry Analysis\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!fieldStats) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <BarChart3 className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Field Statistics</h3>\r\n        <p className=\"text-gray-600 mb-4\">Click the button below to analyze the database structure</p>\r\n        <button\r\n          onClick={fetchFieldStats}\r\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n        >\r\n          <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n          Analyze Fields\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle both field_statistics (when data exists) and fields (when empty)\r\n  const statisticsData = fieldStats?.field_statistics || fieldStats?.fields || {};\r\n  const fields = Object.entries(statisticsData);\r\n  const sortedFields = fields.sort((a, b) => b[1]?.coverage_percentage - a[1]?.coverage_percentage);\r\n\r\n  // Show message for empty collection\r\n  if (fieldStats?.message && fields.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <Database className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Data Available</h3>\r\n        <p className=\"text-gray-600\">{fieldStats.message}</p>\r\n        <p className=\"text-sm text-gray-500 mt-2\">Add some documents to the collection to see field statistics</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Summary Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Field Coverage Analysis</h3>\r\n          <p className=\"text-sm text-gray-600\">\r\n            {fieldStats.total_fields || 0} fields across {(fieldStats.total_documents || 0).toLocaleString()} documents\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <button\r\n            onClick={fetchFieldStats}\r\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            <TrendingUp className=\"w-4 h-4 mr-2\" />\r\n            Refresh\r\n          </button>\r\n          \r\n          <button\r\n            onClick={exportFieldStats}\r\n            className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-success-600 hover:bg-success-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-success-500\"\r\n          >\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Field Statistics Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {sortedFields.map(([fieldName, stats]) => (\r\n          <div\r\n            key={fieldName}\r\n            className={`p-4 border rounded-lg cursor-pointer transition-all duration-200 ${\r\n              selectedField === fieldName \r\n                ? 'border-primary-300 bg-primary-50' \r\n                : 'border-gray-200 hover:border-gray-300'\r\n            }`}\r\n            onClick={() => setSelectedField(selectedField === fieldName ? null : fieldName)}\r\n          >\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <h4 className=\"font-medium text-gray-900\">{fieldName}</h4>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className={`text-sm font-medium ${getCoverageTextColor(stats.coverage_percentage)}`}>\r\n                  {stats.coverage_percentage}%\r\n                </span>\r\n                {stats.coverage_percentage >= 80 ? (\r\n                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\r\n                ) : stats.coverage_percentage >= 60 ? (\r\n                  <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />\r\n                ) : (\r\n                  <XCircle className=\"w-4 h-4 text-red-500\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Progress Bar */}\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mb-3\">\r\n              <div\r\n                className={`h-2 rounded-full ${getCoverageColor(stats.coverage_percentage)} transition-all duration-300`}\r\n                style={{ width: `${stats.coverage_percentage}%` }}\r\n              ></div>\r\n            </div>\r\n\r\n            {/* Statistics */}\r\n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n              <div>\r\n                <span className=\"text-gray-600\">Present:</span>\r\n                <span className=\"ml-2 font-medium\">{stats.field_present.toLocaleString()}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Missing:</span>\r\n                <span className=\"ml-2 font-medium text-red-600\">{stats.missing_count.toLocaleString()}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Non-empty:</span>\r\n                <span className=\"ml-2 font-medium\">{stats.non_empty_values.toLocaleString()}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Empty:</span>\r\n                <span className=\"ml-2 font-medium text-orange-600\">{stats.empty_count.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Sample Values (Expanded View) */}\r\n            {selectedField === fieldName && (\r\n              <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n                <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Sample Values:</h5>\r\n                <div className=\"space-y-1\">\r\n                  {stats.sample_values.map((value: string, index: number) => (\r\n                    <div key={index} className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\r\n                      {value.length > 50 ? `${value.substring(0, 50)}...` : value}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Last Updated */}\r\n      <div className=\"mt-6 text-center text-sm text-gray-500\">\r\n        Last updated: {fieldStats?.timestamp ? new Date(fieldStats.timestamp).toLocaleString() : 'Unknown'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldStatistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}