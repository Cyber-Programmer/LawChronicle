{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{FileText,Edit3,Save,X,Search,RefreshCw,AlertTriangle,CheckCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StatuteNameNormalizer=_ref=>{let{config}=_ref;const[statuteNames,setStatuteNames]=useState([]);const[loading,setLoading]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[editingId,setEditingId]=useState(null);const[editingName,setEditingName]=useState('');const[message,setMessage]=useState(null);const[selectedNames,setSelectedNames]=useState(new Set());const[batchEditMode,setBatchEditMode]=useState(false);const[batchNewName,setBatchNewName]=useState('');// Fetch statute names\nconst fetchStatuteNames=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/v1/phase2/statute-names?limit=1000');const data=await response.json();if(data.success){setStatuteNames(data.statute_names);}else{setMessage({type:'error',text:'Failed to fetch statute names'});}}catch(error){setMessage({type:'error',text:'Error fetching statute names'});}finally{setLoading(false);}},[]);// Update a single statute name\nconst updateStatuteName=async(oldName,newName)=>{try{const response=await fetch('/api/v1/phase2/update-statute-name',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({old_name:oldName,new_name:newName})});const data=await response.json();if(data.success){setMessage({type:'success',text:\"Updated \".concat(data.modified_count,\" documents\")});fetchStatuteNames();// Refresh the list\n}else{setMessage({type:'error',text:'Failed to update statute name'});}}catch(error){setMessage({type:'error',text:'Error updating statute name'});}};// Handle edit start\nconst startEdit=statuteName=>{setEditingId(statuteName._id);setEditingName(statuteName._id);};// Handle edit save\nconst saveEdit=async()=>{if(editingId&&editingName.trim()){await updateStatuteName(editingId,editingName.trim());setEditingId(null);setEditingName('');}};// Handle edit cancel\nconst cancelEdit=()=>{setEditingId(null);setEditingName('');};// Handle batch selection\nconst toggleSelection=name=>{const newSelection=new Set(selectedNames);if(newSelection.has(name)){newSelection.delete(name);}else{newSelection.add(name);}setSelectedNames(newSelection);};// Handle batch edit\nconst handleBatchEdit=async()=>{if(selectedNames.size===0||!batchNewName.trim()){setMessage({type:'error',text:'Please select names and enter a new name'});return;}setLoading(true);let successCount=0;let errorCount=0;for(const oldName of Array.from(selectedNames)){try{const response=await fetch('/api/v1/phase2/update-statute-name',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({old_name:oldName,new_name:batchNewName.trim()})});const data=await response.json();if(data.success){successCount+=data.modified_count;}else{errorCount++;}}catch(error){errorCount++;}}setLoading(false);setMessage({type:successCount>0?'success':'error',text:\"Batch update completed: \".concat(successCount,\" successful, \").concat(errorCount,\" failed\")});setSelectedNames(new Set());setBatchNewName('');setBatchEditMode(false);fetchStatuteNames();};// Filter statute names based on search term\nconst filteredNames=statuteNames.filter(name=>name._id.toLowerCase().includes(searchTerm.toLowerCase()));useEffect(()=>{fetchStatuteNames();},[fetchStatuteNames]);// Clear message after 5 seconds\nuseEffect(()=>{if(message){const timer=setTimeout(()=>setMessage(null),5000);return()=>clearTimeout(timer);}},[message]);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Statute Name Normalization\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Analyze, edit, and standardize statute names across all documents\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchStatuteNames,disabled:loading,className:\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"h-4 w-4 mr-2 \".concat(loading?'animate-spin':'')}),\"Refresh\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setBatchEditMode(!batchEditMode),className:\"inline-flex items-center px-3 py-2 border text-sm font-medium rounded-md \".concat(batchEditMode?'border-red-300 text-red-700 bg-red-50 hover:bg-red-100':'border-gray-300 text-gray-700 bg-white hover:bg-gray-50',\" focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"),children:batchEditMode?'Cancel Batch':'Batch Edit'})]})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"rounded-md p-4 \".concat(message.type==='success'?'bg-green-50 border border-green-200':'bg-red-50 border border-red-200'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:message.type==='success'?/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5 text-green-400\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-5 w-5 text-red-400\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm \".concat(message.type==='success'?'text-green-800':'text-red-800'),children:message.text})})]})}),batchEditMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-blue-800 mb-3\",children:\"Batch Edit Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"batch-new-name\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"New Name for Selected (\",selectedNames.size,\" selected)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"batch-new-name\",value:batchNewName,onChange:e=>setBatchNewName(e.target.value),placeholder:\"Enter new statute name\",className:\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleBatchEdit,disabled:selectedNames.size===0||!batchNewName.trim()||loading,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\",children:[/*#__PURE__*/_jsx(Save,{className:\"h-4 w-4 mr-2\"}),\"Update Selected\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 max-w-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search statute names...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[filteredNames.length,\" of \",statuteNames.length,\" names\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"h-8 w-8 text-gray-400 mx-auto mb-4 animate-spin\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Loading statute names...\"})]}):filteredNames.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center\",children:[/*#__PURE__*/_jsx(FileText,{className:\"h-8 w-8 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:searchTerm?'No statute names match your search':'No statute names found'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[batchEditMode&&/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedNames.size===filteredNames.length,onChange:e=>{if(e.target.checked){setSelectedNames(new Set(filteredNames.map(n=>n._id)));}else{setSelectedNames(new Set());}},className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"})}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Statute Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Document Count\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:filteredNames.map(statuteName=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[batchEditMode&&/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedNames.has(statuteName._id),onChange:()=>toggleSelection(statuteName._id),className:\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:editingId===statuteName._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingName,onChange:e=>setEditingName(e.target.value),className:\"block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-900\",children:statuteName._id})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\",children:statuteName.count})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm font-medium\",children:editingId===statuteName._id?/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:saveEdit,className:\"text-green-600 hover:text-green-900\",children:/*#__PURE__*/_jsx(Save,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelEdit,className:\"text-red-600 hover:text-red-900\",children:/*#__PURE__*/_jsx(X,{className:\"h-4 w-4\"})})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>startEdit(statuteName),className:\"text-primary-600 hover:text-primary-900\",children:/*#__PURE__*/_jsx(Edit3,{className:\"h-4 w-4\"})})})]},statuteName._id))})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-900 mb-2\",children:\"Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Total Unique Names:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:statuteNames.length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Total Documents:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:statuteNames.reduce((sum,name)=>sum+name.count,0)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"Average per Name:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium text-gray-900\",children:statuteNames.length>0?Math.round(statuteNames.reduce((sum,name)=>sum+name.count,0)/statuteNames.length):0})]})]})]})]});};export default StatuteNameNormalizer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","FileText","Edit3","Save","X","Search","RefreshCw","AlertTriangle","CheckCircle","jsx","_jsx","jsxs","_jsxs","StatuteNameNormalizer","_ref","config","statuteNames","setStatuteNames","loading","setLoading","searchTerm","setSearchTerm","editingId","setEditingId","editingName","setEditingName","message","setMessage","selectedNames","setSelectedNames","Set","batchEditMode","setBatchEditMode","batchNewName","setBatchNewName","fetchStatuteNames","response","fetch","data","json","success","statute_names","type","text","error","updateStatuteName","oldName","newName","method","headers","body","JSON","stringify","old_name","new_name","concat","modified_count","startEdit","statuteName","_id","saveEdit","trim","cancelEdit","toggleSelection","name","newSelection","has","delete","add","handleBatchEdit","size","successCount","errorCount","Array","from","filteredNames","filter","toLowerCase","includes","timer","setTimeout","clearTimeout","className","children","onClick","disabled","htmlFor","id","value","onChange","e","target","placeholder","length","checked","map","n","count","reduce","sum","Math","round"],"sources":["D:/DigiFloat/LawChronicle/frontend/src/components/phase2/StatuteNameNormalizer.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { FileText, Edit3, Save, X, Search, RefreshCw, AlertTriangle, CheckCircle } from 'lucide-react';\r\n\r\ninterface StatuteName {\r\n  _id: string;\r\n  count: number;\r\n}\r\n\r\ninterface StatuteNameNormalizerProps {\r\n  config: any;\r\n}\r\n\r\nconst StatuteNameNormalizer: React.FC<StatuteNameNormalizerProps> = ({ config }) => {\r\n  const [statuteNames, setStatuteNames] = useState<StatuteName[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [editingId, setEditingId] = useState<string | null>(null);\r\n  const [editingName, setEditingName] = useState('');\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n  const [selectedNames, setSelectedNames] = useState<Set<string>>(new Set());\r\n  const [batchEditMode, setBatchEditMode] = useState(false);\r\n  const [batchNewName, setBatchNewName] = useState('');\r\n\r\n  // Fetch statute names\r\n  const fetchStatuteNames = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/v1/phase2/statute-names?limit=1000');\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setStatuteNames(data.statute_names);\r\n      } else {\r\n        setMessage({ type: 'error', text: 'Failed to fetch statute names' });\r\n      }\r\n    } catch (error) {\r\n      setMessage({ type: 'error', text: 'Error fetching statute names' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Update a single statute name\r\n  const updateStatuteName = async (oldName: string, newName: string) => {\r\n    try {\r\n      const response = await fetch('/api/v1/phase2/update-statute-name', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ old_name: oldName, new_name: newName })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setMessage({ type: 'success', text: `Updated ${data.modified_count} documents` });\r\n        fetchStatuteNames(); // Refresh the list\r\n      } else {\r\n        setMessage({ type: 'error', text: 'Failed to update statute name' });\r\n      }\r\n    } catch (error) {\r\n      setMessage({ type: 'error', text: 'Error updating statute name' });\r\n    }\r\n  };\r\n\r\n  // Handle edit start\r\n  const startEdit = (statuteName: StatuteName) => {\r\n    setEditingId(statuteName._id);\r\n    setEditingName(statuteName._id);\r\n  };\r\n\r\n  // Handle edit save\r\n  const saveEdit = async () => {\r\n    if (editingId && editingName.trim()) {\r\n      await updateStatuteName(editingId, editingName.trim());\r\n      setEditingId(null);\r\n      setEditingName('');\r\n    }\r\n  };\r\n\r\n  // Handle edit cancel\r\n  const cancelEdit = () => {\r\n    setEditingId(null);\r\n    setEditingName('');\r\n  };\r\n\r\n  // Handle batch selection\r\n  const toggleSelection = (name: string) => {\r\n    const newSelection = new Set(selectedNames);\r\n    if (newSelection.has(name)) {\r\n      newSelection.delete(name);\r\n    } else {\r\n      newSelection.add(name);\r\n    }\r\n    setSelectedNames(newSelection);\r\n  };\r\n\r\n  // Handle batch edit\r\n  const handleBatchEdit = async () => {\r\n    if (selectedNames.size === 0 || !batchNewName.trim()) {\r\n      setMessage({ type: 'error', text: 'Please select names and enter a new name' });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    let successCount = 0;\r\n    let errorCount = 0;\r\n\r\n    for (const oldName of Array.from(selectedNames)) {\r\n      try {\r\n        const response = await fetch('/api/v1/phase2/update-statute-name', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ old_name: oldName, new_name: batchNewName.trim() })\r\n        });\r\n        \r\n        const data = await response.json();\r\n        if (data.success) {\r\n          successCount += data.modified_count;\r\n        } else {\r\n          errorCount++;\r\n        }\r\n      } catch (error) {\r\n        errorCount++;\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n    setMessage({ \r\n      type: successCount > 0 ? 'success' : 'error', \r\n      text: `Batch update completed: ${successCount} successful, ${errorCount} failed` \r\n    });\r\n    \r\n    setSelectedNames(new Set());\r\n    setBatchNewName('');\r\n    setBatchEditMode(false);\r\n    fetchStatuteNames();\r\n  };\r\n\r\n  // Filter statute names based on search term\r\n  const filteredNames = statuteNames.filter(name => \r\n    name._id.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchStatuteNames();\r\n  }, [fetchStatuteNames]);\r\n\r\n  // Clear message after 5 seconds\r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => setMessage(null), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Statute Name Normalization</h3>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Analyze, edit, and standardize statute names across all documents\r\n          </p>\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={fetchStatuteNames}\r\n            disabled={loading}\r\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </button>\r\n          <button\r\n            onClick={() => setBatchEditMode(!batchEditMode)}\r\n            className={`inline-flex items-center px-3 py-2 border text-sm font-medium rounded-md ${\r\n              batchEditMode \r\n                ? 'border-red-300 text-red-700 bg-red-50 hover:bg-red-100' \r\n                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'\r\n            } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\r\n          >\r\n            {batchEditMode ? 'Cancel Batch' : 'Batch Edit'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Message Display */}\r\n      {message && (\r\n        <div className={`rounded-md p-4 ${\r\n          message.type === 'success' ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\r\n        }`}>\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              {message.type === 'success' ? (\r\n                <CheckCircle className=\"h-5 w-5 text-green-400\" />\r\n              ) : (\r\n                <AlertTriangle className=\"h-5 w-5 text-red-400\" />\r\n              )}\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className={`text-sm ${\r\n                message.type === 'success' ? 'text-green-800' : 'text-red-800'\r\n              }`}>\r\n                {message.text}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Batch Edit Mode */}\r\n      {batchEditMode && (\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n          <h4 className=\"text-sm font-medium text-blue-800 mb-3\">Batch Edit Mode</h4>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"flex-1\">\r\n              <label htmlFor=\"batch-new-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                New Name for Selected ({selectedNames.size} selected)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"batch-new-name\"\r\n                value={batchNewName}\r\n                onChange={(e) => setBatchNewName(e.target.value)}\r\n                placeholder=\"Enter new statute name\"\r\n                className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={handleBatchEdit}\r\n              disabled={selectedNames.size === 0 || !batchNewName.trim() || loading}\r\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <Save className=\"h-4 w-4 mr-2\" />\r\n              Update Selected\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Search and Stats */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex-1 max-w-md\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search statute names...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"text-sm text-gray-600\">\r\n          {filteredNames.length} of {statuteNames.length} names\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statute Names List */}\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        {loading ? (\r\n          <div className=\"p-8 text-center\">\r\n            <RefreshCw className=\"h-8 w-8 text-gray-400 mx-auto mb-4 animate-spin\" />\r\n            <p className=\"text-gray-600\">Loading statute names...</p>\r\n          </div>\r\n        ) : filteredNames.length === 0 ? (\r\n          <div className=\"p-8 text-center\">\r\n            <FileText className=\"h-8 w-8 text-gray-400 mx-auto mb-4\" />\r\n            <p className=\"text-gray-600\">\r\n              {searchTerm ? 'No statute names match your search' : 'No statute names found'}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  {batchEditMode && (\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedNames.size === filteredNames.length}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            setSelectedNames(new Set(filteredNames.map(n => n._id)));\r\n                          } else {\r\n                            setSelectedNames(new Set());\r\n                          }\r\n                        }}\r\n                        className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                      />\r\n                    </th>\r\n                  )}\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Statute Name\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Document Count\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredNames.map((statuteName) => (\r\n                  <tr key={statuteName._id} className=\"hover:bg-gray-50\">\r\n                    {batchEditMode && (\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedNames.has(statuteName._id)}\r\n                          onChange={() => toggleSelection(statuteName._id)}\r\n                          className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                        />\r\n                      </td>\r\n                    )}\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {editingId === statuteName._id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editingName}\r\n                          onChange={(e) => setEditingName(e.target.value)}\r\n                          className=\"block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n                        />\r\n                      ) : (\r\n                        <span className=\"text-sm font-medium text-gray-900\">\r\n                          {statuteName._id}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                        {statuteName.count}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      {editingId === statuteName._id ? (\r\n                        <div className=\"flex space-x-2\">\r\n                          <button\r\n                            onClick={saveEdit}\r\n                            className=\"text-green-600 hover:text-green-900\"\r\n                          >\r\n                            <Save className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={cancelEdit}\r\n                            className=\"text-red-600 hover:text-red-900\"\r\n                          >\r\n                            <X className=\"h-4 w-4\" />\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => startEdit(statuteName)}\r\n                          className=\"text-primary-600 hover:text-primary-900\"\r\n                        >\r\n                          <Edit3 className=\"h-4 w-4\" />\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Summary */}\r\n      <div className=\"bg-gray-50 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Summary</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <span className=\"text-gray-600\">Total Unique Names:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">{statuteNames.length}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">Total Documents:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">\r\n              {statuteNames.reduce((sum, name) => sum + name.count, 0)}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-600\">Average per Name:</span>\r\n            <span className=\"ml-2 font-medium text-gray-900\">\r\n              {statuteNames.length > 0 \r\n                ? Math.round(statuteNames.reduce((sum, name) => sum + name.count, 0) / statuteNames.length)\r\n                : 0\r\n              }\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatuteNameNormalizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}